{"version":3,"file":"481.8fcb8273e8a0b597.js","mappings":"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","sources":["./src/accountActivity/frame/frame.component.ts","./src/accountActivity/frame/frame.html","./src/accountActivity/module.ts","./src/accountActivity/monthlyInvoices/balanceSummary/balanceSummary.component.ts","./src/accountActivity/monthlyInvoices/balanceSummary/balanceSummary.html","./src/accountActivity/monthlyInvoices/invoiceDetailsModal/invoiceDetailsModal.component.ts","./src/accountActivity/monthlyInvoices/invoiceDetailsModal/invoiceDetailsModal.html","./src/accountActivity/monthlyInvoices/invoiceDetails/invoiceDetails.component.ts","./src/accountActivity/monthlyInvoices/invoiceDetails/invoiceDetails.html","./src/accountActivity/monthlyInvoices/invoiceInfo/invoiceInfo.component.ts","./src/accountActivity/monthlyInvoices/invoiceInfo/invoiceInfo.html","./src/accountActivity/monthlyInvoices/invoiceSummary/invoiceSummary.component.ts","./src/accountActivity/monthlyInvoices/invoiceSummary/invoiceSummary.html","./src/accountActivity/monthlyInvoices/monthlyInvoices.component.ts","./src/accountActivity/monthlyInvoices/monthlyInvoices.html","./src/accountActivity/monthlyInvoices/outstandingInvoices/outstandingInvoices.component.ts","./src/accountActivity/monthlyInvoices/outstandingInvoices/outstandingInvoices.html","./src/accountActivity/monthly/monthly.component.ts","./src/accountActivity/monthly/monthly.html","./src/accountActivity/receipts/receiptDetails.html","./src/accountActivity/receipts/receiptDetails.component.ts","./src/accountActivity/receipts/receipts.component.ts","./src/accountActivity/receipts/receipts.html","./src/accountActivity/searchTransactions/searchTransactions.component.ts","./src/accountActivity/searchTransactions/searchTransactions.html","./src/accountActivity/searchTransactions/transactionTypeDropdown/transactionTypeDropdown.component.ts","./src/accountActivity/searchTransactions/transactionTypeDropdown/transactionTypeDropdown.html","./src/accountActivity/services/accountActivity.service.ts","./src/accountActivity/services/filter/filter-change.service.ts","./src/accountActivity/services/filter/filter-data.manager.ts","./src/accountActivity/services/filter/filter.service.ts","./src/accountActivity/services/index.ts","./src/accountActivity/services/transactionsRecords/transactionsRecords.manager.ts","./src/accountActivity/services/webApis.service.ts","./src/accountActivity/tabs/tabs.component.ts","./src/accountActivity/tabs/tabs.html","./src/accountActivity/transactions/agencyAndLocationLink/agencyAndLocationLink.component.ts","./src/accountActivity/transactions/agencyAndLocationLink/agencyAndLocationLink.html","./src/accountActivity/transactions/filterCriteria/filterCriteria.component.ts","./src/accountActivity/transactions/filterCriteria/filterCriteria.html","./src/accountActivity/transactions/filters/dateRange/dateRangeFilter.component.ts","./src/accountActivity/transactions/filters/dateRange/dateRangeFilter.component.html","./src/accountActivity/transactions/filters/transactions/transactionsFilter.component.ts","./src/accountActivity/transactions/filters/transactions/transactionsFilter.component.html","./src/accountActivity/transactions/filters/vehicles/vehiclesFilter.component.ts","./src/accountActivity/transactions/filters/vehicles/vehiclesFilter.component.html","./src/accountActivity/transactions/sortFilters/date/date.component.ts","./src/accountActivity/transactions/sortFilters/date/date.component.html","./src/accountActivity/transactions/transactionDetailsModal/transactionDetailsModal.component.ts","./src/accountActivity/transactions/transactionDetailsModal/transactionDetailsModal.html","./src/accountActivity/transactions/transactions.component.ts","./src/accountActivity/transactions/transactions.component.html","./src/accountActivity/transactions/transactions.interfaces.ts","./src/accountActivity/transactions/transactionsFiltersList/transactionsFiltersList.component.ts","./src/accountActivity/transactions/transactionsFiltersList/transactionsFiltersList.component.html","./src/accountActivity/transactions/transactionsRecords/transactionsRecords.component.ts","./src/accountActivity/transactions/transactionsRecords/transactionsRecords.component.html","./src/accountActivity/transactions/transactionsTable/transactionsTable.component.ts","./src/accountActivity/transactions/transactionsTable/transactionsTable.html","./src/accountActivity/yearly/yearTransitionDropdown/yearTransitionDropdown.component.ts","./src/accountActivity/yearly/yearTransitionDropdown/yearTransitionDropdown.html","./src/accountActivity/yearly/yearly.component.ts","./src/accountActivity/yearly/yearly.html","./src/accountActivity/yearly/yearlySummaryInfo/yearlySummaryInfo.component.ts","./src/accountActivity/yearly/yearlySummaryInfo/yearlySummaryInfo.html","../node_modules/@angular/material/fesm2015/autocomplete.mjs"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { Tab } from '../tabs/tabs.component';\r\n\r\nexport interface CmsContent {\r\n    Title: string;\r\n    ShortDescription: string;\r\n    LongDescription: string;\r\n    transactionsTab: string;\r\n    statementsTab: string;\r\n    yearlyTab: string;\r\n    receiptsTab: string;\r\n    invoicesTab: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'account-activity-frame',\r\n    templateUrl: './frame.html',\r\n    styleUrls: ['./frame.less']\r\n})\r\nexport class FrameComponent {\r\n\r\n    @Input() cmsContent: CmsContent;\r\n\r\n    @Input() selectedState: Tab;\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n}\r\n\r\n\r\n","<page-centered-dash-container [hasGutter]=\"false\">\r\n\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" ngClass.gt-md=\"hide\">\r\n        <account-balance-header></account-balance-header>\r\n    </div>\r\n\r\n    <section fxLayout=\"column\"\r\n             fxLayoutAlign=\"center center\">\r\n\r\n        <div fxLayout=\"row\"\r\n             fxLayout.lt-md=\"column\"\r\n             fxLayoutAlign=\"start start\"\r\n             class=\"title row-width\">\r\n\r\n            <div fxFlex=\"grow\"\r\n                 fxFlexOrder=\"1\">\r\n                <div ngClass.gt-md=\"titleContainer\" ngClass.lt-md=\"titleContainer-md-xs\">\r\n                    <titleSubTitle [titleDescription]=\"cmsContent.Title\"\r\n                                   [subtitleDescription]=\"cmsContent.ShortDescription\"\r\n                                   [showSubTitle]=\"true\">\r\n                    </titleSubTitle>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"none\"\r\n                 fxFlexOrder=\"2\">\r\n                <div style=\"margin-left:auto; margin-top: auto; padding-top: 63px;\" ngClass.lt-lg=\"hide\">\r\n                    <account-balance-header></account-balance-header>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div fxLayout=\"row\"\r\n             fxLayout.lt-md=\"column\"\r\n             fxLayoutAlign=\"start start\"\r\n             class=\"row-width\">\r\n\r\n            <tabs [cms]=\"cmsContent\" [selectedState]=\"selectedState\"></tabs>\r\n\r\n        </div>\r\n\r\n        <div fxLayout=\"row wrap\"\r\n             fxLayout.lt-md=\"column\"\r\n             fxLayoutAlign=\"start start\"\r\n             fxLayoutGap=\"12px\"\r\n             fxLayoutGap.gt-sm=\"0px\"\r\n             class=\"row-width\">\r\n\r\n            <ui-view class=\"u-spacing--widthFill\"></ui-view>\r\n\r\n        </div>\r\n\r\n    </section>\r\n</page-centered-dash-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { UIRouterModule } from '@uirouter/angular';\r\nimport { CommonModule as HctraCommonModule } from 'common/module';\r\nimport { CommonModule, DatePipe, TitleCasePipe } from '@angular/common';\r\n\r\nimport { PipesModule } from 'pipes/module';\r\nimport { ValidationModule } from 'validation/module';\r\n\r\n//Components\r\nimport { AgencyAndLocationLinkComponent } from 'accountActivity/transactions/agencyAndLocationLink/agencyAndLocationLink.component';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { TransactionsComponent } from 'accountActivity/transactions/transactions.component';\r\nimport { TransactionsTableComponent } from 'accountActivity/transactions/transactionsTable/transactionsTable.component';\r\nimport { TransactionDetailsModalComponent } from 'accountActivity/transactions/transactionDetailsModal/transactionDetailsModal.component';\r\nimport { ActivityFilterCriteriaComponent } from 'accountActivity/transactions/filterCriteria/filterCriteria.component';\r\nimport { MonthlyComponent } from 'accountActivity/monthly/monthly.component';\r\nimport { YearlyComponent } from 'accountActivity/yearly/yearly.component';\r\nimport { YearTransitionDropdownComponent } from 'accountActivity/yearly/yearTransitionDropdown/yearTransitionDropdown.component';\r\nimport { YearlySummaryInfoComponent } from 'accountActivity/yearly/yearlySummaryInfo/yearlySummaryInfo.component';\r\nimport { ReceiptsComponent } from 'accountActivity/receipts/receipts.component';\r\nimport { ReceiptDetailsComponent } from 'accountActivity/receipts/receiptDetails.component';\r\nimport { MonthlyInvoicesComponent } from 'accountActivity/monthlyInvoices/monthlyInvoices.component';\r\nimport { BalanceSummaryComponent } from 'accountActivity/monthlyInvoices/balanceSummary/balanceSummary.component';\r\nimport { InvoiceDetailsComponent } from 'accountActivity/monthlyInvoices/invoiceDetails/invoiceDetails.component';\r\nimport { InvoiceInfoComponent } from 'accountActivity/monthlyInvoices/invoiceInfo/invoiceInfo.component';\r\nimport { InvoiceSummaryComponent } from 'accountActivity/monthlyInvoices/invoiceSummary/invoiceSummary.component';\r\nimport { OutstandingInvoicesComponent } from 'accountActivity/monthlyInvoices/outstandingInvoices/outstandingInvoices.component';\r\nimport { TabsComponent } from 'accountActivity/tabs/tabs.component';\r\n\r\n//Other\r\nimport { AccountActivityService, WebApisService } from './services';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { routes } from './routing';\r\nimport { stateNames, urlPaths, StateNames, Routes } from './constants';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { InvoiceDetailsModalComponent } from './monthlyInvoices/invoiceDetailsModal/invoiceDetailsModal.component';\r\nimport { SearchTransactionsComponent } from './searchTransactions/searchTransactions.component';\r\nimport { TransactionTypeDropdownComponent } from './searchTransactions/transactionTypeDropdown/transactionTypeDropdown.component';\r\nimport { TransactionsFilterComponent } from './transactions/filters/transactions/transactionsFilter.component';\r\nimport { VehiclesFilterComponent } from './transactions/filters/vehicles/vehiclesFilter.component';\r\nimport { DateRangeFilterComponent } from './transactions/filters/dateRange/dateRangeFilter.component';\r\nimport { FilterService } from './services/filter/filter.service';\r\nimport { TransactionsFilterCriteriaComponent } from './transactions/transactionsFiltersList/transactionsFiltersList.component';\r\nimport { TransactionsRecordsComponent } from './transactions/transactionsRecords/transactionsRecords.component';\r\nimport { FilterChangeService } from './services/filter/filter-change.service';\r\nimport { SortedByDateComponent } from './transactions/sortFilters/date/date.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nexport * from './constants';\r\n\r\nconst routesWithComponents = routes.map(route => {\r\n    const componentDictionary = {\r\n        [stateNames.accountActivityFrame]: FrameComponent,\r\n        [stateNames.accountActivityTransactions]: TransactionsComponent,\r\n        [stateNames.accountActivityYearly]: YearlyComponent,\r\n        [stateNames.accountActivityStatements]: MonthlyComponent,\r\n        [stateNames.accountActivityReceipts]: ReceiptsComponent,\r\n\r\n        [stateNames.accountActivityInvoices]: MonthlyInvoicesComponent\r\n\r\n    };\r\n\r\n    return {\r\n        ...route,\r\n        component: componentDictionary[route.name]\r\n    };\r\n});\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FrameComponent,\r\n        TransactionsComponent,\r\n        TransactionsTableComponent,\r\n        TransactionDetailsModalComponent,\r\n        ActivityFilterCriteriaComponent,\r\n        YearlyComponent,\r\n        MonthlyComponent,\r\n        YearTransitionDropdownComponent,\r\n        YearlySummaryInfoComponent,\r\n        ReceiptsComponent,\r\n        ReceiptDetailsComponent,\r\n        AgencyAndLocationLinkComponent,\r\n        MonthlyInvoicesComponent,\r\n        BalanceSummaryComponent,\r\n        InvoiceDetailsComponent,\r\n        InvoiceInfoComponent,\r\n        InvoiceSummaryComponent,\r\n        OutstandingInvoicesComponent,\r\n        InvoiceDetailsModalComponent,\r\n        SearchTransactionsComponent,\r\n        TransactionTypeDropdownComponent,\r\n        TransactionsFilterComponent,\r\n        VehiclesFilterComponent,\r\n        DateRangeFilterComponent,\r\n        SortedByDateComponent,\r\n        TransactionsFilterCriteriaComponent,\r\n        TabsComponent,\r\n        TransactionsRecordsComponent\r\n    ],\r\n    imports: [\r\n        UIRouterModule.forChild({ states: routesWithComponents }),\r\n        HctraCommonModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        PipesModule,\r\n        FlexLayoutModule,\r\n        ValidationModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        OverlayModule\r\n    ],\r\n    providers: [\r\n        { provide: StateNames, useValue: stateNames },\r\n        { provide: Routes, useValue: urlPaths },\r\n        WebApisService,\r\n        AccountActivityService,\r\n        DatePipe,\r\n        TitleCasePipe,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        FilterService,\r\n        FilterChangeService\r\n    ]\r\n})\r\n\r\nexport class AccountActivityModule {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'balance-summary',\r\n    templateUrl: './balanceSummary.html',\r\n    styleUrls: ['./balanceSummary.less']\r\n})\r\nexport class BalanceSummaryComponent {\r\n    constructor() {}\r\n\r\n    @Input() balanceRequirement: number;\r\n    @Input() currentBalance: number;\r\n    @Input() replenishmentRequired: number;\r\n}","<main class=\"display\">\r\n    <section>\r\n        <h3 class=\"u-spacing__sectionToSection\" style=\"margin-bottom:16px\">Balance Summary</h3>\r\n        <div class=\"table-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                </section>\r\n                <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label>AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label>AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                <row-container [isTop]=\"true\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Balance Requirement (minimum)\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{balanceRequirement | currency: 'USD'}}\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Balance Requirement (minimum)\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{balanceRequirement | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n                <row-container [isInner]=\"true\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Current Balance\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{currentBalance | currency: 'USD'}}\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Current Balance\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{currentBalance | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n                <row-container [isBottom]=\"true\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Replenishment Required\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{replenishmentRequired | currency: 'USD'}}\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Replenishment Required\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{replenishmentRequired | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InjectionModel } from 'accountActivity/monthlyInvoices/invoiceDetails/invoiceDetails.component';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\nimport { DialogRef } from 'common/services';\r\nimport { filter } from 'lodash';\r\n\r\n@Component({\r\n    selector: 'invoice-details-modal',\r\n    templateUrl: './invoiceDetailsModal.html',\r\n    styleUrls: ['./invoiceDetailsModal.less']\r\n})\r\nexport class InvoiceDetailsModalComponent implements OnInit {\r\n    constructor(private dialogRef: DialogRef<InjectionModel>) { }\r\n\r\n    public selectedInvoice: {\r\n        plateTagId: string;\r\n        amount: number;\r\n    };\r\n    public modalTitle: string;\r\n    public arrayToDisplay: TransactionRecord[];\r\n    public totalAmount = 0;\r\n    public invoiceDetails: TransactionRecord[];\r\n\r\n    ngOnInit() {\r\n        this.invoiceDetails = this.dialogRef.data.details;\r\n        this.modalTitle = this.dialogRef.data.selectedInvoice.plateTagId;\r\n        this.totalAmount = this.dialogRef.data.selectedInvoice.amount;\r\n    }\r\n}\r\n","<div class=\"title-margin\">\r\n    <h2>{{modalTitle}}</h2>\r\n</div>\r\n\r\n<div fxLayout=\"column\" fxHide fxShow.lt-md>\r\n    <div *ngFor=\"let trRecord of invoiceDetails\">\r\n        <div fxLayout=\"column\">\r\n            <div class=\"detail-card-responsive\">\r\n                <div class=\"fx-layout-row\" style=\"margin-top: 5px; margin-left: 5px;\">\r\n                    <section class=\"fx-flex-80\">\r\n                        <mat-label>DATE/TIME</mat-label>\r\n                        <div translation-skip>{{trRecord.trxnDate | dateWithTimeZone: 'dateTime5'}}</div>\r\n                    </section>\r\n                    <section>\r\n                        <mat-label>AMOUNT</mat-label>\r\n                        <div>{{trRecord.amount | currency}}</div>\r\n                    </section>\r\n                </div>\r\n                <section style=\"margin-top:10px; margin-left: 5px;\">\r\n                    <mat-label>LOCATION</mat-label>\r\n                    <div>{{trRecord.locationName}}</div>\r\n                </section>\r\n                <section style=\"margin-top: 10px; margin-left: 5px;\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                    <div>{{trRecord.transType}}</div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<row-container fxShow fxHide.lt-md [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n    <section col-start\r\n             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n        <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">DATE/TIME</mat-label>\r\n        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">LOCATION</mat-label>\r\n        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">DESCRIPTION</mat-label>\r\n    </section>\r\n    <section col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n        <mat-label class=\"fx-flex-auto limited-flex-end\" style=\"margin-right: 30px;\">AMOUNT</mat-label>\r\n    </section>\r\n</row-container>\r\n\r\n<div *ngFor=\"let trRecord of invoiceDetails; first as isFirst; last as isLast; let i = index; let last = last;\"\r\n     class=\"show-desktop\">\r\n    <div ngClass=\"extended-row\" [ngClass.lt-md]=\"{ 'extended-row': false }\" style=\"margin-top: 2px; background-color: white;\">\r\n        <fx-row [isTop]=\"i === 0 && invoiceDetails.length > 1 ? true: false\"\r\n                [isInner]=\"i > 0 && i+1 <= invoiceDetails.length ? true : false\"\r\n                [backgroundColorClass]=\"'white-background'\">\r\n            <section col-start\r\n                     class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                <div translation-skip class=\"fx-flex-auto-shrink-more limited-flex\" style=\"margin-left: 10px;\">\r\n                    {{trRecord.trxnDate | dateWithTimeZone: 'dateTime5'}}\r\n                </div>\r\n                <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{trRecord.locationName}}</div>\r\n                <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{trRecord.transType}}</div>\r\n            </section>\r\n            <section col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                <div class=\"fx-flex-auto limited-flex-end\" style=\"margin-right: 30px;\">{{trRecord.amount | currency}}</div>\r\n            </section>\r\n        </fx-row>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"invoiceDetails && invoiceDetails.length > 0\" style=\"margin-top:2px\">\r\n    <fx-row [isBottom]=\"true\"\r\n            [backgroundColorClass]=\"'white-background'\">\r\n        <section col-start\r\n                 class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n            <div class=\"fx-flex-auto-shrink-more limited-flex\" style=\"margin-left: 10px; font-weight: bold;\">\r\n                Total\r\n            </div>\r\n        </section>\r\n        <section col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n            <div class=\"fx-flex-auto limited-flex-end\" style=\"margin-right: 30px; font-weight: bold;\">{{totalAmount | currency}}</div>\r\n        </section>\r\n    </fx-row>\r\n</div>\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { TransactionRecord } from 'accountDashboard/services/accountDashboard.service';\r\nimport { DialogContent, DialogService } from 'common/services';\r\nimport { groupBy } from 'lodash';\r\nimport { InvoiceDetailsModalComponent } from '../invoiceDetailsModal/invoiceDetailsModal.component';\r\n\r\nexport interface InjectionModel {\r\n    details: TransactionRecord[];\r\n    selectedInvoice: {\r\n        plateTagId: string;\r\n        amount: number;\r\n    };\r\n}\r\n\r\n@Component({\r\n    selector: 'invoice-details',\r\n    templateUrl: './invoiceDetails.html',\r\n    styleUrls: ['./invoiceDetails.less']\r\n})\r\nexport class InvoiceDetailsComponent implements OnChanges {\r\n    constructor(private dialogService: DialogService) { }\r\n\r\n    @Input() details: TransactionRecord[];\r\n    private detailsGrouped: { [k: string]: TransactionRecord[] } = {};\r\n    public plateTagIdAndAmount: { plateTagId: string; amount: number }[] = [];\r\n\r\n    ngOnChanges() {\r\n        this.groupIntoDisplayArray();\r\n    }\r\n\r\n    private groupIntoDisplayArray() {\r\n        this.detailsGrouped = groupBy(this.details, 'customKey');\r\n\r\n        this.plateTagIdAndAmount = [];\r\n        Object.keys(this.detailsGrouped).forEach(plateTagId => {\r\n            this.plateTagIdAndAmount.push({\r\n                plateTagId,\r\n                amount: this.detailsGrouped[plateTagId].reduce((previousValue, currentValue) => previousValue + currentValue.amount, 0)\r\n            });\r\n        });\r\n    }\r\n\r\n    public getInvoiceDetails(invoiceDetail: { plateTagId: string; amount: number }) {\r\n        this.dialogService.openSliderFilled(\r\n            InvoiceDetailsModalComponent,\r\n            { details: this.detailsGrouped[invoiceDetail.plateTagId], selectedInvoice: invoiceDetail } as InjectionModel,\r\n            { title: 'Invoice Details' } as DialogContent\r\n        );\r\n    }\r\n}\r\n","<main class=\"display\">\r\n    <section>\r\n        <h3 class=\"u-spacing__sectionToSection\" style=\"margin-bottom:16px\">Invoice Details</h3>\r\n        <div class=\"table-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label fxFlex=\"fx-flex-auto-shrink-more limited-flex\">PLATE/TAG ID</mat-label>\r\n                </section>\r\n                <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label fxFlex=\"1 1 auto\" fxShow.lt-md>AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label fxFlex=\"67\" fxShow.lt-md>PLATE/TAG ID</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                <div class=\"u-spacing--widthFill\" *ngFor=\"let detail of plateTagIdAndAmount; first as isFirst; last as isLast;\">\r\n\r\n                    <fx-row [isTop]=\"details.length > 1 && isFirst\"\r\n                            [isBottom]=\"details.length > 1 && isLast\"\r\n                            [isInner]=\"!isFirst && !isLast\">\r\n\r\n                        <section col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center show-mobile force\">\r\n                            <a (click)=\"getInvoiceDetails(detail)\" class=\"download-link\">\r\n                                <div>\r\n                                    {{detail.plateTagId}}\r\n                                    <div class=\"glyphicon glyphicon-chevron-right\"></div>\r\n                                </div>\r\n                            </a>\r\n                        </section>\r\n                        <section col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center show-mobile force\">\r\n                            {{detail.amount | currency}}\r\n                        </section>\r\n\r\n                        <section col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center show-desktop force\">\r\n                            <a (click)=\"getInvoiceDetails(detail)\" class=\"download-link\">\r\n                                {{detail.plateTagId}}\r\n                                <div class=\"glyphicon glyphicon-chevron-right\"></div>\r\n                            </a>\r\n                        </section>\r\n                        <section col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center show-desktop force\">\r\n                            <div class=\"fx-flex-auto limited-flex-end\">{{detail.amount | currency}}</div>\r\n                        </section>\r\n                    </fx-row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AddressInfo } from 'common/models';\r\nimport { CurrentUserService } from 'common/services';\r\n\r\n@Component({\r\n    selector: 'invoice-info',\r\n    templateUrl: './invoiceInfo.html',\r\n    styleUrls: ['./invoiceInfo.less']\r\n})\r\nexport class InvoiceInfoComponent implements OnInit {\r\n    constructor(\r\n        private currentUser: CurrentUserService\r\n    ) { }\r\n\r\n    @Input() companyName: string;\r\n    @Input() address: AddressInfo;\r\n    @Input() workPhone: string;\r\n    @Input() homePhone: string;\r\n    @Input() mobile: string;\r\n    @Input() currentMonth: string;\r\n    @Input() invoiceNumber: string;\r\n\r\n    public acctId: number;\r\n    public showAddress: boolean;\r\n    public showAddress2: boolean;\r\n    public showAddress3: boolean;\r\n    public showAddress4: boolean;\r\n    public phoneNumber: string;\r\n\r\n    ngOnInit() {\r\n        this.acctId = this.currentUser.getCurrentUser()?.acctId;\r\n        this.checkAddress();\r\n        this.assignPhoneNumber();\r\n    }\r\n\r\n    checkAddress() {\r\n        if (this.address) {\r\n            if (this.address.address1 &&\r\n                this.address.address1.trim() !== '' &&\r\n                this.address.city &&\r\n                this.address.city.trim() !== '' &&\r\n                this.address.state &&\r\n                this.address.state.trim() !== '' &&\r\n                this.address.zip &&\r\n                this.address.zip.trim() !== '') {\r\n                this.showAddress = true;\r\n\r\n                if (this.address.address2 &&\r\n                    this.address.address2.trim() !== '') {\r\n                    this.showAddress2 = true;\r\n                }\r\n\r\n                if (this.address.address3 &&\r\n                    this.address.address3.trim() !== '') {\r\n                    this.showAddress3 = true;\r\n                }\r\n\r\n                if (this.address.address4 &&\r\n                    this.address.address4.trim() !== '') {\r\n                    this.showAddress4 = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    assignPhoneNumber() {\r\n        if (this.workPhone && this.workPhone.trim() !== '') {\r\n            this.phoneNumber = this.workPhone;\r\n            return;\r\n        }\r\n\r\n        if (this.homePhone && this.homePhone.trim() !== '') {\r\n            this.phoneNumber = this.homePhone;\r\n            return;\r\n        }\r\n\r\n        if (this.mobile && this.mobile.trim() !== '') {\r\n            this.phoneNumber = this.mobile;\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<section fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <section fxFlex=\"40\" fxLayout=\"column\">\r\n        <div *ngIf=\"companyName && companyName.trim() !== ''\" class=\"text-bold\">{{companyName | titlecase}}</div>\r\n        <div>Account Number: <span class=\"text-bold\">{{acctId}}</span></div>\r\n        <div *ngIf=\"showAddress\">{{address.address1 | titlecase}}</div>\r\n        <div *ngIf=\"showAddress2\">{{address.address2 | titlecase}}</div>\r\n        <div *ngIf=\"showAddress3\">{{address.address3 | titlecase}}</div>\r\n        <div *ngIf=\"showAddress4\">{{address.address4 | titlecase}}</div>\r\n        <div *ngIf=\"showAddress\">\r\n            {{address.city | titlecase}}, {{address.state}} &nbsp; {{address.zip}}\r\n            <div *ngIf=\"address.plus4 && address.plus4.trim() !== ''\"> - {{address.plus4}}</div>\r\n        </div>\r\n        <div *ngIf=\"phoneNumber && phoneNumber.trim() !== ''\">{{phoneNumber}}</div>\r\n    </section>\r\n    <section *ngIf=\"invoiceNumber && invoiceNumber.trim() !== ''\">\r\n        <div class=\"text-bold\">Monthly EZ TAG Invoice</div>\r\n        <div>Invoice #{{invoiceNumber}}</div>\r\n        <div>Invoice Period - {{currentMonth}}</div>\r\n    </section>\r\n</section>\r\n","import { Component, Input } from '@angular/core';\r\nimport { InvoiceSummary } from 'accountActivity/interfaces';\r\n\r\n@Component({\r\n    selector: 'invoice-summary',\r\n    templateUrl: './invoiceSummary.html',\r\n    styleUrls: ['./invoiceSummary.less']\r\n})\r\nexport class InvoiceSummaryComponent {\r\n    constructor() {}\r\n\r\n    @Input() summaries: InvoiceSummary[];\r\n}","<main class=\"display\">\r\n    <section>\r\n        <h3 class=\"u-spacing__sectionToSection\" style=\"margin-bottom:16px\">Invoice Summary</h3>\r\n        <div class=\"table-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                </section>\r\n                <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label fxFlex=\"1 1 10em\">QTY</mat-label>\r\n                    <mat-label fxFlex=\"1 1 auto\">AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label fxFlex=\"66\">DESCRIPTION</mat-label>\r\n                    <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">QUANTITY</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label class=\"fx-flex-auto limited-flex-end\" >AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                <row-container *ngFor=\"let summary of summaries; first as isFirst; last as isLast;\"\r\n                               [isTop]=\"summaries.length > 1 && isFirst\" [isBottom]=\"summaries.length > 1 && isLast\"\r\n                               [isInner]=\"!isFirst && !isLast\" [rowType]=\"isLast ? 'emphasis' : 'body'\"\r\n                               [ngClass.lt-md]=\"{ 'extended-row': false }\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <div fxFlex=\"67\">{{summary.description}}</div>\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <div fxFlex=\"1 1 5em\" class=\"fx-flex-auto-shrink-more\">\r\n                            {{summary.quantity ? summary.quantity : ''}}\r\n                        </div>\r\n                        <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">\r\n                            {{summary.amount | currency: 'USD'}}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <div fxFlex=\"67\">{{summary.description}}</div>\r\n                        <div class=\"fx-flex-auto-shrink-more limited-flex\">\r\n                            {{summary.quantity ? summary.quantity : ''}}\r\n                        </div>\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end\r\n                             class=\"fx-flex-auto limited-flex-end\">\r\n                        {{summary.amount | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { stateNames as accountActivityStates } from 'accountActivity/constants';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { InvoiceMonths, MonthlyInvoiceResponse } from 'accountActivity/interfaces';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { WebApisService } from 'accountActivity/services/webApis.service';\r\nimport { ENVIRON_CONFIG } from 'common/module';\r\nimport { DownloadService } from 'common/services';\r\nimport { isObject, orderBy, remove } from 'lodash';\r\nimport { Tab } from '../tabs/tabs.component';\r\n\r\ninterface CmsContent {\r\n    Title: string;\r\n    ShortDescription: string;\r\n    LongDescription: string;\r\n    Children: CmsContent[];\r\n}\r\n\r\n@Component({\r\n    selector: 'monthly-invoices',\r\n    templateUrl: './monthlyInvoices.html',\r\n    styleUrls: ['./monthlyInvoices.less']\r\n})\r\nexport class MonthlyInvoicesComponent implements OnInit {\r\n    constructor(\r\n        public parent: FrameComponent,\r\n        private webApi: WebApisService,\r\n        private downloadService: DownloadService,\r\n        private accountActivityService: AccountActivityService,\r\n        private datePipe: DatePipe,\r\n        @Inject(ENVIRON_CONFIG) public environmentConfig\r\n    ) { }\r\n\r\n    @Input() cmsContent: CmsContent;\r\n\r\n    public showInvoiceMonths: boolean;\r\n    public selectedMonth: string;\r\n    public currentMonth: string;\r\n    public invoiceDates: string[];\r\n    public invoiceResponse: MonthlyInvoiceResponse;\r\n    public showInvoices: boolean;\r\n    public companyName: string;\r\n    public phoneNumber: string;\r\n    public showAddress: boolean;\r\n    public cmsHeaderText: string;\r\n    public cmsDownloadInvoiceText: string;\r\n    public cmsOutstandingInvoiceText: string;\r\n    public reportDownloading = false;\r\n\r\n    async ngOnInit() {\r\n        this.parent.selectedState = Tab.invoices;\r\n\r\n        this.showInvoiceMonths = true; \r\n        this.assignCmsContent();\r\n\r\n        const invoiceMonthsResponse: InvoiceMonths = await this.webApi.setupInvoicesPage();\r\n\r\n        if (invoiceMonthsResponse && invoiceMonthsResponse.invoiceDates && invoiceMonthsResponse.invoiceDates.length > 0) {\r\n            this.invoiceDates = invoiceMonthsResponse.invoiceDates.map((monthYear: string) => new Date('01 ' + monthYear).toISOString());\r\n            this.invoiceDates = orderBy(this.invoiceDates, ['desc']);\r\n            this.selectedMonth = this.invoiceDates[0];\r\n            this.getInvoices();\r\n            this.showInvoiceMonths = true;\r\n        } else {\r\n            this.showInvoiceMonths = false;\r\n        }\r\n    }\r\n\r\n    assignCmsContent() {\r\n        const cmsElements: CmsContent[] = this.cmsContent.Children;\r\n\r\n        this.cmsHeaderText = cmsElements.find(x => x.Title === 'Header Text').LongDescription.trim();\r\n        if (!this.cmsHeaderText) {\r\n            this.cmsHeaderText = '';\r\n        }\r\n        this.cmsDownloadInvoiceText = cmsElements.find(x => x.Title === 'Download Invoice').LongDescription.trim();\r\n        this.cmsOutstandingInvoiceText = cmsElements.find(x => x.Title === 'Outstanding Invoices').LongDescription.trim();\r\n    }\r\n\r\n    public async getInvoices() {\r\n        const selectedMonthParameter = this.datePipe.transform(new Date(this.selectedMonth), 'MM/yyyy');\r\n        const response = await this.webApi.getMonthlyInvoice({ invoiceDate: selectedMonthParameter });\r\n        const isResponseValid = isObject(response) && Array.isArray(response.errors) && response.errors.length === 0;\r\n\r\n        if (isResponseValid) {\r\n\r\n            if (isObject(response.invoiceDetails) &&\r\n                Array.isArray(response.invoiceDetails)) {\r\n\r\n                response.invoiceDetails.forEach(detail => {\r\n                    if (!detail.licenseStateAndPlate || detail.licenseStateAndPlate.length === 0 || detail.licenseStateAndPlate === 'NONE') {\r\n                        if (detail.vehicleNickName && detail.vehicleNickName.length > 0 && detail.vehicleNickName !== 'NONE') {\r\n                            detail.customKey = detail.vehicleNickName;\r\n                        } else {\r\n                            detail.customKey = 'Miscellaneous Transactions';\r\n                        }\r\n                    } else {\r\n                        if (detail.vehicleNickName && detail.vehicleNickName.length > 0 && detail.vehicleNickName !== 'NONE') {\r\n                            detail.customKey = `${detail.licenseStateAndPlate} - ${detail.vehicleNickName}`;\r\n                        } else {\r\n                            detail.customKey = detail.licenseStateAndPlate;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                remove(response.invoiceDetails,\r\n                    x => !x.customKey || x.customKey.length === 0 || x.customKey.indexOf('NONE') >= 0\r\n                );\r\n            }\r\n            this.invoiceResponse = response;\r\n            this.currentMonth = this.datePipe.transform(new Date(this.selectedMonth), 'MMMM yyyy');\r\n            this.showInvoices = true;\r\n        }\r\n    }\r\n\r\n    public async getMonthlyInvoicePdf() {\r\n        const url = '/api/sessions/Pdf/GetMonthlyInvoicePdfReport/';\r\n        await this.downloadReport(url, true);\r\n    }\r\n\r\n    public async getMonthlyInvoiceExcel() {\r\n        const url = '/api/sessions/Pdf/GetMonthlyInvoiceExcelReport/';\r\n        await this.downloadReport(url, true);\r\n    }\r\n\r\n    private async downloadReport(url: string, isPdf: boolean) {\r\n        this.reportDownloading = true;\r\n\r\n        await this.downloadService.download(url, isPdf, {\r\n            invoiceNum: this.invoiceResponse.invoiceNumber\r\n        });\r\n\r\n        this.reportDownloading = false;\r\n    }\r\n}\r\n","<div fxLayout=\"column\" class=\"display-block\">\r\n    <card-dash-container class=\"display-block\" [hasMargin]=\"false\">\r\n        <h2>Monthly Invoices</h2>\r\n\r\n        <section fxLayout=\"row wrap\" fxLayoutAlign=\"start end\" fxLayoutGap=\"8px\">\r\n            <div *ngIf=\"showInvoiceMonths\"\r\n                 fxFlex=\"none\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n                <mat-label>SELECT INVOICE</mat-label>\r\n                <mat-select class=\"u-spacing--widthFill\"\r\n                            translation-skip\r\n                            [disableOptionCentering]=\"true\"\r\n                            [(value)]=\"selectedMonth\"\r\n                            required>\r\n                    <mat-option *ngFor=\"let date of invoiceDates\" [value]=\"date\">\r\n                        {{date | date:'MMMM yyyy'}}\r\n                    </mat-option>\r\n                </mat-select>\r\n\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"showInvoiceMonths\"\r\n                 fxFlex=\"none\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill u-spacing__buttonToField--marginTop\">\r\n                <button (click)=\"getInvoices()\" ngClass.lt-md=\"u-spacing--widthFill\">\r\n                    SEARCH\r\n                </button>\r\n            </div>\r\n        </section>\r\n\r\n        <section *ngIf=\"!showInvoiceMonths\" class=\"u-spacing__fieldToSection--marginTop\">\r\n            <mat-icon class=\"no-statements\" svgIcon=\"alert\"></mat-icon>\r\n            No monthly invoices available\r\n        </section>\r\n    </card-dash-container>\r\n\r\n    <card-dash-container *ngIf=\"showInvoices\" [hasMargin]=\"false\">\r\n        <section [innerHtml]=\"cmsHeaderText | safeHtml\"></section>\r\n        <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n            <header>\r\n                <h2>Monthly Invoice - {{currentMonth}}</h2>\r\n                <mat-divider></mat-divider>\r\n            </header>\r\n\r\n            <section fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n                <div [innerHtml]=\"cmsDownloadInvoiceText\"></div>\r\n                <a *ngIf=\"!environmentConfig.hidePdfAccountActivity\"\r\n                   fxFlex=\"none\"\r\n                   (click)=\"getMonthlyInvoicePdf()\"\r\n                   class=\"download-link\"\r\n                   [ngClass]=\"{'disabled': reportDownloading}\">\r\n                    <img src=\"/Content/icons/pdf.gif\" class=\"download-icon\" />PDF Statement\r\n                </a>\r\n                <a *ngIf=\"!environmentConfig.hideExcelAccountActivity\"\r\n                   fxFlex=\"none\"\r\n                   (click)=\"getMonthlyInvoiceExcel()\"\r\n                   class=\"download-link\"\r\n                   [ngClass]=\"{'disabled': reportDownloading}\">\r\n                    <img src=\"/Content/icons/excel.gif\" class=\"download-icon\" />Excel Statement\r\n                </a>\r\n            </section>\r\n            <div class=\"field-margin-top\">\r\n                <invoice-info [companyName]=\"invoiceResponse.companyName\" [address]=\"invoiceResponse.address\"\r\n                              [workPhone]=\"invoiceResponse.workPhoneNumber\" [homePhone]=\"invoiceResponse.homePhoneNumber\"\r\n                              [mobile]=\"invoiceResponse.mobilePhoneNumber\" [currentMonth]=\"currentMonth\"\r\n                              [invoiceNumber]=\"invoiceResponse.invoiceNumber\">\r\n                </invoice-info>\r\n            </div>\r\n        </section>\r\n        <balance-summary [balanceRequirement]=\"invoiceResponse.balSumBalanceRequirement\"\r\n                         [currentBalance]=\"invoiceResponse.balSumCurrentBalance\"\r\n                         [replenishmentRequired]=\"invoiceResponse.balSumReplenishmentAmt\">\r\n        </balance-summary>\r\n        <outstanding-invoices [outstanding]=\"invoiceResponse.totalAmtDue\"\r\n                              [cmsText]=\"cmsOutstandingInvoiceText\">\r\n        </outstanding-invoices>\r\n        <div *ngIf=\"invoiceResponse.invoiceSummary && invoiceResponse.invoiceSummary.length > 0\">\r\n            <invoice-summary [summaries]=\"invoiceResponse.invoiceSummary\">\r\n            </invoice-summary>\r\n        </div>\r\n        <div *ngIf=\"invoiceResponse.invoiceDetails && invoiceResponse.invoiceDetails.length > 0\">\r\n            <invoice-details [details]=\"invoiceResponse.invoiceDetails\">\r\n            </invoice-details>\r\n        </div>\r\n    </card-dash-container>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'outstanding-invoices',\r\n    templateUrl: './outstandingInvoices.html',\r\n    styleUrls: ['./outstandingInvoices.less']\r\n})\r\nexport class OutstandingInvoicesComponent {\r\n    constructor() {}\r\n\r\n    @Input() outstanding: number;\r\n    @Input() cmsText: string;\r\n}","<main class=\"display\">\r\n    <section>\r\n        <h3 class=\"u-spacing__sectionToSection\" style=\"margin-bottom: 16px;\">Outstanding Invoices</h3>\r\n        <div class=\"table-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                </section>\r\n                <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label>AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label>DESCRIPTION</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label>AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                <row-container [isInner]=\"true\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Total Outstanding Amount\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{outstanding | currency: 'USD'}}\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        Total Outstanding Amount\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        {{outstanding | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section>{{cmsText}}</section>\r\n</main>\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { AccountSummary, SetUpStatementsPageResponse, TagSummary } from 'accountActivity/interfaces';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { WebApisService } from 'accountActivity/services/webApis.service';\r\nimport { CurrentUser, CurrentUserService, DownloadService } from 'common/services';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\nimport { isObject, orderBy } from 'lodash';\r\nimport { Tab } from '../tabs/tabs.component';\r\n\r\ninterface ICmsContent {\r\n    [key: string]: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'monthly',\r\n    templateUrl: './monthly.html',\r\n    styleUrls: ['./monthly.less']\r\n})\r\nexport class MonthlyComponent implements OnInit {\r\n\r\n    constructor(\r\n        private webApi: WebApisService,\r\n        private currentUserService: CurrentUserService,\r\n        public parent: FrameComponent,\r\n        @Inject(ENVIRON_CONFIG) public environmentConfig,\r\n        private downloadService: DownloadService,\r\n        private accountActivityService: AccountActivityService\r\n    ) { }\r\n\r\n    @Input() cmsContent: ICmsContent;\r\n\r\n    public statementsData: SetUpStatementsPageResponse;\r\n    public currentUser: CurrentUser;\r\n    public pdfProcessing = false;\r\n    public currentMonth: string;\r\n    public searchedMonth: string; // Only updated after the Search returns\r\n    public showStatement: boolean;\r\n    public showStatementMonths: boolean;\r\n    public ezTagSummaries: TagSummary[];\r\n    public accountTagSummaries: AccountSummary[];\r\n    public cmsHeaderText: string;\r\n    public downloadAvailable: string;\r\n    public reportDownloading = false;\r\n\r\n    async ngOnInit() {\r\n        this.parent.selectedState = Tab.statements;\r\n\r\n        this.showStatement = true;\r\n\r\n        this.currentUser = this.currentUserService.getCurrentUser();\r\n        this.statementsData = await this.webApi.setUpStatementsPage();\r\n        if (this.statementsData && this.statementsData.dates && this.statementsData.dates.length > 0) {\r\n            this.statementsData.dates = orderBy(this.statementsData.dates, (monthYear: string) => new Date('01 ' + monthYear), ['desc']);\r\n            this.currentMonth = this.statementsData.dates[0];\r\n            await this.monthSearch();\r\n            this.showStatementMonths = true;\r\n        } else {\r\n            this.showStatementMonths = false;\r\n            this.showStatement = false;\r\n        }\r\n    }\r\n\r\n    public async monthSearch() {\r\n        const response = await this.webApi.getMonthlyStatement({ date: this.currentMonth });\r\n        const isResponseValid = isObject(response) && Array.isArray(response.errors) && response.errors.length === 0;\r\n        const isCurrentUserNotLargeAccount = isObject(this.currentUser) &&\r\n            (!this.currentUser.largeAccountFlag && !this.currentUser.extraLargeAccountFlag);\r\n\r\n        if ((this.environmentConfig.heedLargeAccountFlag && isCurrentUserNotLargeAccount) && isResponseValid) {\r\n\r\n            this.searchedMonth = this.currentMonth;\r\n\r\n            this.showStatement = (Array.isArray(response.tagSummaries) && response.tagSummaries.length > 0) ||\r\n                (Array.isArray(response.acctSummary) && response.acctSummary.length > 0) ||\r\n                (Array.isArray(response.errors) && response.errors.length === 0);\r\n\r\n            this.ezTagSummaries = response.tagSummaries;\r\n            this.accountTagSummaries = response.acctSummary;\r\n            let totalAmount = 0;\r\n            this.accountTagSummaries.forEach(acctTagSummary => {\r\n                if (acctTagSummary && acctTagSummary.description) {\r\n                    if (acctTagSummary.description !== 'Ending Balance') {\r\n                        totalAmount += acctTagSummary.amount;\r\n                    } else {\r\n                        acctTagSummary.amount = totalAmount;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.showStatement = false;\r\n        }\r\n    };\r\n\r\n    public getTagId(rowNumber: number, length: number, tagId: string) {\r\n        if (rowNumber === length - 1) {\r\n            return 'Total';\r\n        }\r\n\r\n        return tagId ? tagId : '';\r\n    }\r\n\r\n    public async getMonthlyStatementPdf() {\r\n        const url = 'api/sessions/Pdf/GetStatementPdfReport/';\r\n        await this.downloadReport(url, true);\r\n    };\r\n\r\n    public async getMonthlyStatementExcel() {\r\n        const url = 'api/sessions/Pdf/GetStatementExcelReport/';\r\n        await this.downloadReport(url, false);\r\n    };\r\n\r\n    private async downloadReport(url: string, isPdf: boolean) {\r\n        this.reportDownloading = true;\r\n\r\n        await this.downloadService.download(url, isPdf, {\r\n            date: this.currentMonth\r\n        });\r\n\r\n        this.reportDownloading = false;\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"column\" style=\"display:block;\">\r\n    <card-dash-container class=\"display-block\" [hasMargin]=\"false\">\r\n        <h2>Monthly Statements</h2>\r\n\r\n        <section fxLayout=\"row wrap\"\r\n                 fxLayoutAlign=\"start end\"\r\n                 fxLayoutGap=\"8px\">\r\n\r\n            <section *ngIf=\"showStatementMonths\" ngClass.lt-md=\"select-section\" fxFlex=\"none\">\r\n                <mat-label>SELECT STATEMENT</mat-label>\r\n                <mat-select translation-skip\r\n                            [disableOptionCentering]=\"true\"\r\n                            [(value)]=\"currentMonth\"\r\n                            required>\r\n                    <mat-option *ngFor=\"let date of statementsData.dates\" [value]=\"date\">\r\n                        {{date}}\r\n                    </mat-option>\r\n                </mat-select>\r\n\r\n            </section>\r\n\r\n            <section *ngIf=\"showStatementMonths\" class=\"section-width\" fxFlex=\"none\">\r\n                <button class=\"search-button\" (click)=\"monthSearch()\">\r\n                    SEARCH\r\n                </button>\r\n            </section>\r\n        </section>\r\n\r\n        <section *ngIf=\"!showStatement\" class=\"u-spacing__fieldToSection--marginTop\">\r\n            <div *ngIf=\"!showStatementMonths && !currentUser.largeAccountFlag\">\r\n                <mat-icon class=\"no-statements\" svgIcon=\"alert\"></mat-icon>\r\n                {{cmsContent.NO_DATA}}\r\n            </div>\r\n            <div *ngIf=\"showStatementMonths && currentUser.largeAccountFlag\">\r\n                <mat-icon class=\"no-statements\" svgIcon=\"alert\"></mat-icon>\r\n                {{cmsContent.LARGE_ACCOUNT}}\r\n            </div>\r\n        </section>\r\n    </card-dash-container>\r\n\r\n    <card-dash-container *ngIf=\"showStatementMonths\" class=\"display-block\" [hasMargin]=\"false\">\r\n\r\n        <section [innerHtml]=\"cmsContent.ShortDescription | safeHtml\"></section>\r\n\r\n        <section [ngClass]=\"{'u-spacing__sectionToSection--marginBottom': showStatement}\">\r\n            <header>\r\n                <h2>{{searchedMonth}} Statement</h2>\r\n                <mat-divider></mat-divider>\r\n            </header>\r\n\r\n            <section fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n                <div [innerHtml]=\"cmsContent.LongDescription\"></div>\r\n                <a *ngIf=\"!environmentConfig.hidePdfAccountActivity\"\r\n                   fxFlex=\"none\"\r\n                   (click)=\"getMonthlyStatementPdf()\"\r\n                   class=\"download-link\"\r\n                   [ngClass]=\"{'disabled': reportDownloading}\">\r\n                    <img src=\"/Content/icons/pdf.gif\" class=\"download-icon\" />PDF Statement\r\n                </a>\r\n                <a *ngIf=\"!environmentConfig.hideExcelAccountActivity\"\r\n                   fxFlex=\"none\"\r\n                   (click)=\"getMonthlyStatementExcel()\"\r\n                   class=\"download-link\"\r\n                   [ngClass]=\"{'disabled': reportDownloading}\">\r\n                    <img src=\"/Content/icons/excel.gif\" class=\"download-icon\" />Excel Statement\r\n                </a>\r\n            </section>\r\n\r\n            <section *ngIf=\"showStatement\">\r\n                <h3 class=\"field-margin-top\">Account Summary</h3>\r\n\r\n                <div class=\"row-margin\">\r\n                    <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                        <section fxHide fxShow.lt-md col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                            <mat-label fxFlex=\"fx-flex-auto-shrink-more limited-flex\" fxShow.lt-md>DESCRIPTION</mat-label>\r\n                        </section>\r\n                        <section fxHide fxShow.lt-md col-end\r\n                                 class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                            <mat-label fxFlex=\"1 1 10em\">QTY</mat-label>\r\n                            <mat-label fxFlex=\"1 1 auto\" fxShow.lt-md>AMOUNT</mat-label>\r\n                        </section>\r\n\r\n                        <section fxShow fxHide.lt-md col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                            <mat-label fxFlex=\"65\" fxShow.lt-md>DESCRIPTION</mat-label>\r\n                            <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">TOLL COUNT</mat-label>\r\n                        </section>\r\n                        <section fxShow fxHide.lt-md col-end\r\n                                 class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                            <mat-label class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>AMOUNT</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n\r\n                    <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                        <div *ngFor=\"let accountTagSummary of accountTagSummaries; let i = index; let last = last; \">\r\n                            <div [ngClass.lt-md]=\"{'extended-row': false}\" style=\"margin-top:2px;\">\r\n                                <row-container [isTop]=\"i === 0 && accountTagSummaries.length > 1 ? true : false\"\r\n                                               [isInner]=\"i > 0 && i+1 < accountTagSummaries.length ? true : false\"\r\n                                               [isBottom]=\"i > 0 && i+1 === accountTagSummaries.length ? true : false\"\r\n                                               [rowType]=\"last ? 'emphasis' : 'body'\">\r\n\r\n                                    <section fxHide fxShow.lt-md col-start\r\n                                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                        <div fxFlex=\"67\" fxShow.lt-md>{{accountTagSummary.description}}</div>\r\n\r\n                                    </section>\r\n                                    <section fxHide fxShow.lt-md col-end\r\n                                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                        <div fxFlex=\"1 1 5em\" class=\"fx-flex-auto-shrink-more\">\r\n                                            {{accountTagSummary.quantity ? accountTagSummary.quantity : ''}}\r\n                                        </div>\r\n                                        <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>\r\n                                            {{accountTagSummary.amount ? (accountTagSummary.amount | currency) : ''}}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    <section fxShow fxHide.lt-md col-start\r\n                                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                        <div fxFlex=\"67\" fxShow.lt-md>{{accountTagSummary.description}}</div>\r\n                                        <div class=\"fx-flex-auto-shrink-more limited-flex\">\r\n                                            {{accountTagSummary.quantity ? accountTagSummary.quantity : ''}}\r\n                                        </div>\r\n                                    </section>\r\n                                    <section fxShow fxHide.lt-md col-end\r\n                                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                        <div class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>\r\n                                            {{accountTagSummary.amount ? (accountTagSummary.amount | currency) : ''}}\r\n                                        </div>\r\n                                    </section>\r\n                                </row-container>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n\r\n        <section *ngIf=\"showStatement\">\r\n            <h3>Vehicle Summary (TAG Summary)</h3>\r\n\r\n            <div class=\"row-margin\">\r\n                <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label fxFlex=\"fx-flex-auto-shrink-more limited-flex\" fxShow.lt-md>TAG ID</mat-label>\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label fxFlex=\"1 1 7em\">QTY</mat-label>\r\n                        <mat-label fxFlex=\"1 1 auto\" style=\"margin-left: 30px;\" fxShow.lt-md>AMOUNT</mat-label>\r\n                    </section>\r\n\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">TAG ID</mat-label>\r\n                        <mat-label class=\"fx-flex-auto-frow-more unlimited-flex\">LICENSE PLATE</mat-label>\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">TOLL COUNT</mat-label>\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label class=\"fx-flex-auto limited-flex-end\" style=\"margin-left: 30px;\">AMOUNT</mat-label>\r\n                    </section>\r\n                </row-container>\r\n\r\n                <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n                    <div *ngFor=\"let tagSummary of ezTagSummaries; let i = index; let last = last;\" style=\"width:100%;\">\r\n                        <div [ngClass.lt-md]=\"{'extended-row': false}\" style=\"margin-top:2px;\">\r\n                            <row-container [isTop]=\"i === 0 && ezTagSummaries.length > 1 ? true : false\"\r\n                                           [isInner]=\"i > 0 && i+1 < ezTagSummaries.length-1 ? true : false\"\r\n                                           [isBottom]=\"i > 0 && i+1 === ezTagSummaries.length ? true : false\"\r\n                                           [rowType]=\"last ? 'emphasis' : 'body'\">\r\n\r\n                                <section fxHide fxShow.lt-md col-start\r\n                                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                    <div class=\"fx-flex-auto-shrink-more limited-flex\">\r\n                                        {{getTagId(i, ezTagSummaries.length, tagSummary.tagId)}}\r\n                                    </div>\r\n                                </section>\r\n                                <section fxHide fxShow.lt-md col-end\r\n                                         class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                    <div fxFlex=\"1 1 5em\" class=\"fx-flex-auto-grow-more unlimited-flex\">\r\n                                        {{tagSummary.quantity ? tagSummary.quantity : ''}}\r\n                                    </div>\r\n                                    <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">\r\n                                        {{tagSummary.amount ? (tagSummary.amount | currency) : ''}}\r\n                                    </div>\r\n                                </section>\r\n                                <section fxShow fxHide.lt-md col-start\r\n                                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                    <div class=\"fx-flex-auto-shrink-more limited-flex\">\r\n                                        {{getTagId(i, ezTagSummaries.length, tagSummary.tagId)}}\r\n                                    </div>\r\n                                    <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{tagSummary.licensePlate}}</div>\r\n                                    <div class=\"fx-flex-auto-grow-more unlimited-flex\">\r\n                                        {{tagSummary.quantity ? tagSummary.quantity : ''}}\r\n                                    </div>\r\n                                </section>\r\n                                <section fxShow fxHide.lt-md col-end\r\n                                         class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                    <div class=\"fx-flex-auto limited-flex-end\">\r\n                                        {{tagSummary.amount ? (tagSummary.amount | currency) : ''}}\r\n                                    </div>\r\n                                </section>\r\n                            </row-container>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </card-dash-container>\r\n\r\n</div>\r\n","<page-centered-container>\r\n    <app-toaster-container></app-toaster-container>\r\n    <card-dash-container class=\"display\">\r\n\r\n        <section fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"space-between center\">\r\n            <h2>Receipt Transaction #{{this.data.transactionNumber}}</h2>\r\n            <a fxFlex=\"none\"\r\n               (click)=\"getReceiptDetailPdf()\"\r\n               class=\"download-link\"\r\n               [ngClass]=\"{'disabled': reportDownloading}\">\r\n                <img src=\"/Content/icons/pdf.gif\" class=\"download-icon\" />PDF\r\n            </a>\r\n        </section>\r\n        <mat-divider class=\"u-spacing__divider--marginTopBottom\"></mat-divider>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between end\" fxLayoutGap=\"8px\" style=\"margin-bottom: 20px;\">\r\n            <div flex=\"none\" fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                <p class=\"fontStandard\">{{label1}}</p>\r\n                <p class=\"fontStandard\">{{label2}}</p>\r\n                <p class=\"fontStandard\">{{label3}}</p>\r\n            </div>\r\n            <div flex=\"none\" fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n\r\n                <p class=\"fontStandard\">{{receiptDate | dateWithTimeZone: 'dateTimeFull'}}</p>\r\n                <p class=\"fontStandard\">CSR ID: {{csrID}}</p>\r\n                <p style=\"margin:8px;\"></p>\r\n            </div>\r\n        </div>\r\n        <mat-label></mat-label>\r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between end\" fxLayoutGap=\"8px\" style=\"margin-bottom: 20px;\">\r\n            <div flex=\"none\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <p class=\"fontStandard\">Account Number: {{currentUserData.acctId}} </p>\r\n                <p class=\"fontStandard\">{{userAddress}}</p>\r\n                <p class=\"fontStandard\">{{city}} {{state}}, {{zipCode}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n            <h3 style=\"padding-top:5px; margin-bottom:10px\">\r\n                Account Transactions\r\n            </h3>\r\n            <div class=\"tabble-padding\">\r\n                <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                    <section col-start\r\n                             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">DESCRIPTION</mat-label>\r\n\r\n                    </section>\r\n\r\n                    <section col-end\r\n                             class=\"gridish-title fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label fxFlex=\"1 1 auto\" style=\"margin-right:10px\">AMOUNT</mat-label>\r\n                    </section>\r\n                </row-container>\r\n                <div *ngFor=\"let accTrans of accountTrans; first as isFirst; last as isLast\" style=\"width:94%; margin-left:3%\">\r\n                    <div ngClass=\"extended-row\"\r\n                         [ngClass.lt-md]=\"{'extended-row': false}\"\r\n                         style=\"margin-top:2px;\">\r\n                        <row-container [isTop]=\"accountTrans.length > 1 && isFirst\"\r\n                                       [isBottom]=\"accountTrans.length > 1 && isLast\"\r\n                                       [isInner]=\"!isFirst && !isLast\"\r\n                                       [rowType]=\"isLast ? 'emphasis' : 'body'\">\r\n\r\n\r\n                            <section col-start\r\n                                     class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                <div class=\"fx-flex-auto-shrink-more limited-flex\">{{accTrans.description}}</div>\r\n\r\n                            </section>\r\n\r\n                            <section col-end\r\n                                     class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">{{accTrans.amount ? (accTrans.amount | currency: 'USD') : '$0.00'}}</div>\r\n                            </section>\r\n\r\n                        </row-container>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n\r\n        <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n            <h3 style=\"padding-top:5px; margin-bottom:10px\">\r\n                Deposit Transactions\r\n            </h3>\r\n            <div class=\"tabble-padding\">\r\n                <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                    <section col-start\r\n                             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">DESCRIPTION</mat-label>\r\n\r\n                    </section>\r\n\r\n                    <section col-end\r\n                             class=\"gridish-title fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label fxFlex=\"1 1 auto\" style=\"margin-right:10px\">AMOUNT</mat-label>\r\n                    </section>\r\n                </row-container>\r\n                <div *ngFor=\"let depTrans of depositTrans; first as isFirst; last as isLast\" style=\"width:94%; margin-left:3%\">\r\n                    <div ngClass=\"extended-row\"\r\n                         [ngClass.lt-md]=\"{'extended-row': false}\"\r\n                         style=\"margin-top:2px;\">\r\n                        <row-container [isTop]=\"depositTrans.length > 1 && isFirst\"\r\n                                       [isBottom]=\"depositTrans.length > 1 && isLast\"\r\n                                       [isInner]=\"!isFirst && !isLast\"\r\n                                       [rowType]=\"isLast ? 'emphasis' : 'body'\">\r\n\r\n\r\n                            <section col-start\r\n                                     class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                <div class=\"fx-flex-auto-shrink-more limited-flex\">{{depTrans.description}}</div>\r\n\r\n                            </section>\r\n\r\n                            <section col-end\r\n                                     class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">{{depTrans.amount ? (depTrans.amount | currency: 'USD') : '-'}}</div>\r\n                            </section>\r\n\r\n                        </row-container>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n\r\n        <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n            <h3 style=\"padding-top:5px; margin-bottom:10px\">\r\n                Payment Detail\r\n            </h3>\r\n            <div class=\"tabble-padding\">\r\n                <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                    <section col-start\r\n                             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">DESCRIPTION</mat-label>\r\n\r\n                    </section>\r\n\r\n                    <section col-end\r\n                             class=\"gridish-title fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label fxFlex=\"1 1 auto\" style=\"margin-right:10px\">AMOUNT</mat-label>\r\n                    </section>\r\n                </row-container>\r\n                <div *ngFor=\"let pDetail of paymentDetail; first as isFirst; last as isLast\" style=\"width:94%; margin-left:3%\">\r\n                    <div ngClass=\"extended-row\"\r\n                         [ngClass.lt-md]=\"{'extended-row': false}\"\r\n                         style=\"margin-top:2px;\">\r\n                        <row-container [isTop]=\"paymentDetail.length > 1 && isFirst\"\r\n                                       [isBottom]=\"paymentDetail.length > 1 && isLast\"\r\n                                       [isInner]=\"!isFirst && !isLast\"\r\n                                       [rowType]=\"isLast ? 'emphasis' : 'body'\">\r\n\r\n\r\n                            <section col-start\r\n                                     class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                <div class=\"fx-flex-auto-shrink-more limited-flex\">{{pDetail.description}}</div>\r\n\r\n                            </section>\r\n\r\n                            <section col-end\r\n                                     class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                                <div translation-skip fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">{{pDetail.amount ? (pDetail.amount | currency: 'USD') : '-'}}</div>\r\n                            </section>\r\n\r\n                        </row-container>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n\r\n    </card-dash-container>\r\n\r\n</page-centered-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentUser, CurrentUserService, DialogRef, DownloadService } from 'common/services';\r\nimport {  ReceiptDetailsResponse } from '../interfaces';\r\n\r\n\r\nexport interface IInjectionValues {\r\n    transactionNumber: any;\r\n    response: ReceiptDetailsResponse;\r\n}\r\n\r\n@Component({\r\n    selector: 'receipt-details',\r\n    templateUrl: './receiptDetails.html',\r\n    styleUrls: ['./receiptDetails.less']\r\n})\r\n\r\n\r\nexport class ReceiptDetailsComponent implements OnInit {\r\n    public receiptDetails: ReceiptDetailsResponse;\r\n    public accountTrans: string[];\r\n    public depositTrans: string[];\r\n    public paymentDetail: string[];\r\n    public receiptDate: string;\r\n    public csrID: string;\r\n    public userAddress: string;\r\n    public city: string;\r\n    public state: string;\r\n    public zipCode: string;\r\n    public label1: string;\r\n    public label2: string;\r\n    public label3: string;\r\n    public data = {} as IInjectionValues;\r\n    public currentUserData: CurrentUser;\r\n    public reportDownloading = false;\r\n\r\n    constructor(\r\n        private dialogRef: DialogRef<IInjectionValues>,\r\n        private downloadService: DownloadService,\r\n        private currentUser: CurrentUserService\r\n    ) { }\r\n\r\n    async ngOnInit() {\r\n        await this.getInfoToDisplay();\r\n    }\r\n\r\n    public async getInfoToDisplay() {\r\n        this.data = this.dialogRef.data;\r\n        this.currentUserData = this.currentUser.getCurrentUser();\r\n\r\n        const response = this.data.response; \r\n\r\n        this.receiptDetails = response;\r\n        this.accountTrans = response.accountTrans;\r\n        this.depositTrans = response.depositTrans;\r\n        this.paymentDetail = response.paymentDetail;\r\n        this.receiptDate = response.receiptDate;\r\n        this.csrID = response.csrId;\r\n        this.userAddress = response.userAddress.address1;\r\n        this.city = response.userAddress.city;\r\n        this.state = response.userAddress.state;\r\n        this.zipCode = response.userAddress.zip;\r\n        this.label1 = 'Harris County Toll Road Authority';\r\n        this.label2 = '7701 Wilshire Place Drive';\r\n        this.label3 = 'Houston, Texas 77040';\r\n    }\r\n\r\n\r\n    public async getReceiptDetailPdf() {\r\n        const url = '/api/sessions/Pdf/GetReceiptPdfReport/';\r\n        await this.downloadReport(url, true);\r\n    };\r\n\r\n    private async downloadReport(url: string, isPdf: boolean) {\r\n        this.reportDownloading = true;\r\n\r\n        await this.downloadService.download(url, isPdf, {\r\n            transNum: this.data.transactionNumber\r\n        });\r\n\r\n        this.reportDownloading = false;\r\n    }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { SetupReceiptRequest } from 'accountActivity/interfaces';\r\nimport { IInjectionValues, ReceiptDetailsComponent } from 'accountActivity/receipts/receiptDetails.component';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { WebApisService } from 'accountActivity/services/webApis.service';\r\nimport { DialogContent, DialogService,ToasterService } from 'common/services';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\nimport { Tab } from '../tabs/tabs.component';\r\nimport { ReceiptDetailsRequest, ReceiptDetailsResponse } from '../interfaces';\r\n\r\ninterface ICmsContent {\r\n    [key: string]: string;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'receipts',\r\n    templateUrl: './receipts.html',\r\n    styleUrls: ['./receipts.less']\r\n})\r\nexport class ReceiptsComponent implements OnInit {\r\n\r\n    public receiptsHeaders: any;\r\n    public headersCounter: number;\r\n    public selectedValue: string;\r\n    public dateTo: Date;\r\n    public dateFrom: Date;\r\n    public screenSize: any;\r\n    public minDate: Date;\r\n    public maxDate: Date;\r\n    public showNoData = false;\r\n\r\n    @Input() cmsContent: ICmsContent;\r\n    constructor(\r\n        public parent: FrameComponent,\r\n        private webApisService: WebApisService,\r\n        private dialogService: DialogService,\r\n        private accountActivityService: AccountActivityService,\r\n        private toasterService: ToasterService,\r\n        private datePipe: DatePipe,\r\n        @Inject(ENVIRON_CONFIG) private environmentConfig\r\n    ) { }\r\n\r\n    async ngOnInit() {\r\n        this.parent.selectedState = Tab.receipts;\r\n\r\n        this.minDate = new Date();\r\n        this.minDate.setDate(new Date().getDate() - this.environmentConfig.accountActivityMaxDaysInSearch);\r\n        this.maxDate = new Date();\r\n\r\n        const formattedDateFrom = this.datePipe.transform(this.dateFrom ? new Date(this.dateFrom) : new Date(), 'yyyy/MM/dd');\r\n\r\n        const formattedDateTo = this.datePipe.transform(this.dateTo ? new Date(this.dateTo) : new Date(), 'yyyy/MM/dd');\r\n\r\n        const request: SetupReceiptRequest = {\r\n            fmonth: formattedDateFrom.substring(5, 7),\r\n            fday: formattedDateFrom.substring(8, 10),\r\n            fyear: formattedDateFrom.substring(0, 4),\r\n            tmonth: formattedDateTo.substring(5, 7),\r\n            tday: formattedDateTo.substring(8, 10),\r\n            tyear: formattedDateTo.substring(0, 4)\r\n\r\n        };\r\n\r\n        const response = await this.webApisService.setupReceipts(request);\r\n        this.receiptsHeaders = response.receiptHeaders;\r\n        this.headersCounter = this.receiptsHeaders.length;\r\n        this.dateTo = new Date();\r\n        this.dateFrom = new Date();\r\n        this.dateFrom.setDate(this.dateFrom.getDate() - 7);\r\n\r\n        await this.infoSearch(this.dateFrom, this.dateTo);\r\n        this.showNoData = true;\r\n    }\r\n\r\n    public async openDetailsReceipt(value) {\r\n\r\n        const receiptDetailsRequest: ReceiptDetailsRequest = {\r\n            transactionNumber: value\r\n        };\r\n\r\n        const receiptDetailsResponse: ReceiptDetailsResponse = await this.webApisService.receiptDetails(receiptDetailsRequest);\r\n        this.toasterService.removeAll();\r\n\r\n        this.dialogService.openSliderFilled(ReceiptDetailsComponent,\r\n            {\r\n                transactionNumber: receiptDetailsRequest.transactionNumber,\r\n                response: receiptDetailsResponse\r\n            } as IInjectionValues,\r\n            { title: 'Receipt Details' } as DialogContent);\r\n    }\r\n\r\n    public async infoSearch(valueFrom, valueTo) {\r\n        const formattedDateFrom = this.datePipe.transform(new Date(valueFrom), 'yyyy/MM/dd');\r\n\r\n        const formattedDateTo = this.datePipe.transform(new Date(valueTo), 'yyyy/MM/dd');\r\n\r\n        const request: SetupReceiptRequest = {\r\n            fmonth: formattedDateFrom.substring(5, 7),\r\n            fday: formattedDateFrom.substring(8, 10),\r\n            fyear: formattedDateFrom.substring(0, 4),\r\n            tmonth: formattedDateTo.substring(5, 7),\r\n            tday: formattedDateTo.substring(8, 10),\r\n            tyear: formattedDateTo.substring(0, 4)\r\n        };\r\n\r\n        const response = await this.webApisService.setupReceipts(request);\r\n        this.receiptsHeaders = response.receiptHeaders;\r\n        this.headersCounter = this.receiptsHeaders.length;\r\n    }\r\n\r\n    public autocorrectDateTo() {\r\n        this.forceDateWithinMinMaxDates(this.dateTo);\r\n\r\n        if (this.dateTo.getTime() < this.dateFrom.getTime()) {\r\n            this.dateFrom = new Date((this.dateTo.getTime() - (this.environmentConfig.accountActivityDefaultDaysInSearch * 24 * 60 * 60 * 1000)));\r\n        }\r\n\r\n        this.forceDateWithinMinMaxDates(this.dateFrom);\r\n    }\r\n\r\n    public autocorrectDateFrom() {\r\n        this.forceDateWithinMinMaxDates(this.dateFrom);\r\n\r\n        if (this.dateFrom.getTime() > this.dateTo.getTime()) {\r\n            this.dateTo = new Date((this.dateFrom.getTime() + (this.environmentConfig.accountActivityDefaultDaysInSearch * 24 * 60 * 60 * 1000)));\r\n        }\r\n\r\n        this.forceDateWithinMinMaxDates(this.dateTo);\r\n    }\r\n\r\n    private forceDateWithinMinMaxDates(dateRef: Date) {\r\n        if (dateRef.getTime() > this.maxDate.getTime()) {\r\n            dateRef.setTime(this.maxDate.getTime());\r\n        } else if (dateRef.getTime() < this.minDate.getTime()) {\r\n            dateRef.setTime(this.minDate.getTime());\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","<card-dash-container class=\"display\" [hasMargin]=\"false\">\r\n    <header fxLayout=\"column\" style=\"margin-bottom:20px\">\r\n        <h2>Receipts</h2>\r\n    </header>\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"start end\" fxLayoutGap=\"8px\" style=\"margin-bottom: 20px;\">\r\n\r\n        <section fxLayout=\"column\"\r\n                 fxLayoutAlign=\"center start\"\r\n                 ngClass.lt-md=\"u-spacing__fieldToField--marginTop\"\r\n                 class=\"from-calendar-position calendar-width\">\r\n            <mat-label>FROM</mat-label>\r\n            <section fxLayout=\"row\"\r\n                     ngClass.lt-md=\"u-spacing--widthFill\">\r\n                <input [min]=\"minDate\"\r\n                       [max]=\"maxDate\"\r\n                       [matDatepicker]=\"pickerFrom\"\r\n                       name=\"pickerFrom\"\r\n                       [ngModel]=\"dateFrom\"\r\n                       (ngModelChange)=\"dateFrom=$event;autocorrectDateFrom()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n                <mat-datepicker #pickerFrom></mat-datepicker>\r\n            </section>\r\n\r\n            <mat-label [innerHtml]=\"cmsContent.ShortDescription | safeHtml\"\r\n                       class=\"subtext-position\"></mat-label>\r\n        </section>\r\n\r\n        <section fxLayout=\"column\"\r\n                 fxLayoutAlign=\"center\"\r\n                 ngClass.lt-md=\"u-spacing__fieldToField--marginTop\"\r\n                 class=\"calendar-width\">\r\n            <mat-label>TO</mat-label>\r\n            <section fxLayout=\"row\">\r\n                <input [min]=\"minDate\"\r\n                       [max]=\"maxDate\"\r\n                       [matDatepicker]=\"pickerTo\"\r\n                       name=\"pickerTo\"\r\n                       [ngModel]=\"dateTo\"\r\n                       (ngModelChange)=\"dateTo=$event;autocorrectDateTo()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n                <mat-datepicker #pickerTo></mat-datepicker>\r\n            </section>\r\n        </section>\r\n\r\n        <div fxFlex=\"none\"\r\n             (click)=\"infoSearch(dateFrom,dateTo)\"\r\n             ngClass.lt-md=\"u-spacing--widthFill u-spacing__buttonToField--marginTop\"\r\n             ngClass.md=\"buttonStyle\"\r\n             style=\"margin-bottom:4px\">\r\n            <button ngClass.lt-md=\"u-spacing--widthFill\">\r\n                SEARCH\r\n            </button>\r\n        </div>\r\n    </div>\r\n</card-dash-container>\r\n\r\n<card-dash-container class=\"display u-spacing__cardToCard--marginTop\" [hasMargin]=\"false\">\r\n    <main class=\"display\" style=\"margin-bottom: -30px;\">\r\n        <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n            <h3 style=\"padding-top:5px; margin-bottom:10px\">\r\n                {{this.headersCounter}} Records Found\r\n            </h3>\r\n\r\n            <div *ngIf=\"receiptsHeaders?.length > 0;else noReceipts\" class=\"tabble-padding\">\r\n\r\n                <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n\r\n                    <section col-start\r\n                             class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <mat-label class=\"fx-flex-auto-shrink-more limited-flex date-label\">DATE</mat-label>\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">TRANSACTION</mat-label>\r\n                        <mat-label class=\"fx-flex-auto-grow-more unlimited-flex large-view\">TYPE</mat-label>\r\n                    </section>\r\n\r\n                    <section col-end\r\n                             class=\"gridish-title fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <mat-label class=\"small-view\" style=\"flex: 1 1 auto; margin-right:20px\">AMOUNT</mat-label>\r\n                        <mat-label class=\"fx-flex-auto limited-flex-end large-view\" style=\"margin-right:30px\">AMOUNT</mat-label>\r\n                    </section>\r\n\r\n                </row-container>\r\n\r\n                <div *ngFor=\"let rHeader of receiptsHeaders; first as isFirst; last as isLast\" style=\"width:97%; margin-left:1.5%\">\r\n                    <div class=\"clickable extended-row\"                        \r\n                         style=\"margin-top:2px;\">\r\n                        <fx-row [isTop]=\"receiptsHeaders.length > 1 && isFirst\"\r\n                                [isBottom]=\"receiptsHeaders.length > 1 && isLast\"\r\n                                [isInner]=\"!isFirst && !isLast\"\r\n                                (click)=\"openDetailsReceipt(rHeader.transaction)\">\r\n\r\n\r\n                            <section col-start\r\n                                    class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                                <div class=\"fx-flex-auto-shrink-more limited-flex\">{{rHeader.date | dateWithTimeZone: 'dateTime5'}}</div>\r\n\r\n                                <a class=\"fx-layout-row fx-layout-align-start-center u--noUnderline\">\r\n                                    <div translation-skip class=\"fx-flex-none transaction--width\">{{rHeader.transaction}}</div>\r\n                                </a>\r\n\r\n                                <div class=\"fx-flex-auto-grow-more unlimited-flex large-view\">{{rHeader.type}}</div>\r\n                            </section>\r\n\r\n                            <section col-end\r\n                                    class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n\r\n                                <div translation-skip class=\"fx-flex-auto limited-flex-end large-view\">{{rHeader.amount ? (rHeader.amount | currency: 'USD') : '$0.00'}}</div>\r\n                                <div translation-skip class=\"fx-flex-auto limited-flex-end small-view\" style=\"flex: 1 1 4em\">{{rHeader.amount ? (rHeader.amount | currency: 'USD') : '$0.00'}}</div>\r\n\r\n                                <div class=\"whiteSpace\"></div>\r\n                                <a class=\"fx-layout-row fx-layout-align-start-center u--noUnderline\">\r\n                                    <div class=\"fx-flex-none glyphicon glyphicon-chevron-right\"></div>\r\n                                </a>\r\n                            </section>\r\n\r\n                        </fx-row>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <ng-template #noReceipts>\r\n                <section *ngIf=\"showNoData === true\" fxLayout=\"column\"\r\n                         fxLayoutAlign=\"center center\">\r\n\r\n                    <mat-icon class=\"noData\" svgIcon=\"bar-chart-icon\"></mat-icon>\r\n\r\n                    <span class=\"rowItem\">{{cmsContent.NO_RECEIPTS}}</span>\r\n                </section>\r\n            </ng-template>\r\n\r\n        </section>\r\n    </main>\r\n\r\n</card-dash-container>\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { StateService } from '@uirouter/core';\r\nimport { cmsIds, stateNames as accountActivityStates } from 'accountActivity/constants';\r\nimport { ListItems, NickName, SearchAccountActivityRequest } from 'accountActivity/interfaces';\r\nimport { WebApisService } from 'accountActivity/services';\r\nimport { CmsResolverService } from 'cms/services';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'searchTransactions',\r\n    templateUrl: './searchTransactions.html',\r\n    styleUrls: ['./searchTransactions.less']\r\n})\r\nexport class SearchTransactionsComponent implements OnInit {\r\n\r\n    public searchTransactionDropdownData: ListItems[] = [];\r\n    public dateTo: Date;\r\n    public dateFrom: Date;\r\n    public cmsContent: any;\r\n    public cmsShortDescription: string;\r\n    public licensePlate: string;\r\n    public selection: ListItems;\r\n    public dateRangeType: ('TRANSACTION' | 'POSTED')[];\r\n    public currentDateRangeType: 'TRANSACTION' | 'POSTED';\r\n    public minDate: Date;\r\n    public maxDate: Date;\r\n\r\n    public control = new FormControl();\r\n    public searchVehicleDropdownData: NickName[] = [];\r\n    public filteredSearchVehicleDropdownData: Observable<NickName[]>;\r\n\r\n    constructor(\r\n        private cmsResolverService: CmsResolverService,\r\n        private state: StateService,\r\n        private matDialogRef: MatDialogRef<SearchTransactionsComponent, any>,\r\n        @Inject(ENVIRON_CONFIG) private environmentConfig,\r\n        private webApisService: WebApisService\r\n    ) { }\r\n\r\n    onSelectionChanged(_selection: ListItems) {\r\n        this.selection = _selection;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.minDate = new Date();\r\n        this.minDate.setDate(new Date().getDate() - this.environmentConfig.accountActivityMaxDaysInSearch);\r\n        this.maxDate = new Date();\r\n\r\n        this.dateRangeType = ['TRANSACTION', 'POSTED'];\r\n        this.currentDateRangeType = this.dateRangeType[0];\r\n\r\n        await this.setDefaultDateAndCms();\r\n        await this.getDropdownData();\r\n    }\r\n\r\n    public close() {\r\n        this.matDialogRef.close();\r\n    }\r\n\r\n    public async setDefaultDateAndCms() {\r\n        this.dateTo = new Date();\r\n        this.dateFrom = new Date();\r\n        this.dateFrom.setDate(this.dateFrom.getDate() - this.environmentConfig.accountActivityDefaultDaysInSearch);\r\n        this.cmsContent = await this.cmsResolverService.resolve({ ItemId: cmsIds.SearchTransactions });\r\n        this.cmsShortDescription = this.cmsContent.ShortDescription;\r\n    }\r\n\r\n    public infoSearch() {\r\n        const searchRequest: SearchAccountActivityRequest = {\r\n\r\n            dateFrom: this.dateFrom,\r\n            dateTo: this.dateTo,\r\n            dateRangeType: this.currentDateRangeType,\r\n            transaction: this.selection.value,\r\n            transactionDisplay: this.selection.text,\r\n            vehicle: this.licensePlate ? this.licensePlate : 'All Vehicles',\r\n            vehicleNickNameType: 'L'\r\n        };\r\n\r\n        this.state.go(accountActivityStates.accountActivityTransactions,\r\n            { searchCriteria: searchRequest },\r\n            { reload: accountActivityStates.accountActivityTransactions });\r\n        this.close();\r\n\r\n    }\r\n\r\n    public clearAll() {\r\n        this.licensePlate = '';\r\n        this.dateTo = new Date();\r\n        this.dateFrom = new Date();\r\n        this.dateFrom.setDate(this.dateFrom.getDate() - this.environmentConfig.accountActivityDefaultDaysInSearch);\r\n        this.currentDateRangeType = this.dateRangeType[0];\r\n        this.getDropdownData();\r\n    }\r\n\r\n    public autocorrectDateTo() {\r\n        this.forceDateWithinMinMaxDates(this.dateTo);\r\n\r\n        if (this.dateTo.getTime() < this.dateFrom.getTime()) {\r\n            this.dateFrom = new Date((this.dateTo.getTime() - (this.environmentConfig.accountActivityDefaultDaysInSearch * 24 * 60 * 60 * 1000)));\r\n        }\r\n\r\n        this.forceDateWithinMinMaxDates(this.dateFrom);\r\n    }\r\n\r\n    public autocorrectDateFrom() {\r\n        this.forceDateWithinMinMaxDates(this.dateFrom);\r\n\r\n        if (this.dateFrom.getTime() > this.dateTo.getTime()) {\r\n            this.dateTo = new Date((this.dateFrom.getTime() + (this.environmentConfig.accountActivityDefaultDaysInSearch * 24 * 60 * 60 * 1000)));\r\n        }\r\n\r\n        this.forceDateWithinMinMaxDates(this.dateTo);\r\n    }\r\n\r\n    private forceDateWithinMinMaxDates(dateRef: Date) {\r\n        if (dateRef.getTime() > this.maxDate.getTime()) {\r\n            dateRef.setTime(this.maxDate.getTime());\r\n        } else if (dateRef.getTime() < this.minDate.getTime()) {\r\n            dateRef.setTime(this.minDate.getTime());\r\n        }\r\n    }\r\n\r\n    private async getDropdownData() {\r\n        const data: SearchAccountActivityRequest = {\r\n            dateTo: this.dateTo,\r\n            dateFrom: this.dateFrom,\r\n            dateRangeType: 'TRANSACTION',\r\n            transaction: '',\r\n            vehicle: '',\r\n            vehicleNickNameType: 'L'\r\n        };\r\n\r\n\r\n        const searchSetup = await this.webApisService.setupSearchTransactions(data);\r\n        this.searchTransactionDropdownData = searchSetup.transactionListItems;\r\n        this.searchVehicleDropdownData = searchSetup.vehicleNickName;\r\n\r\n        this.filteredSearchVehicleDropdownData = this.control.valueChanges.pipe(\r\n            startWith(''),\r\n            map(value => this.searchVehicleDropdownData\r\n                .filter(vehicle => (vehicle.text.toLowerCase().includes(value.toLowerCase())))\r\n            )\r\n        );\r\n    }\r\n}\r\n","<div class=\"refresh-2020 search-transactions-modal-size\">\r\n    <card-dash-container>\r\n        <div fxLayout=\"column\">\r\n\r\n            <section fxFlex=\"auto\"\r\n                     fxLayout=\"column\"\r\n                     fxLayoutAlign=\"center\">\r\n                <section fxFlex=\"none\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between start\">\r\n                    <article class=\"search-transactions-info-text\">Filter by any of these transaction details.</article>\r\n                    <mat-icon fxHide\r\n                              fxShow.lt-sm\r\n                              fxFlex=\"none\"\r\n                              class=\"clickable\"\r\n                              (click)=\"close()\"\r\n                              svgIcon=\"close-x\"></mat-icon>\r\n                </section>\r\n\r\n                <section fxFlex=\"none\"\r\n                         fxLayout=\"column\"\r\n                         fxLayoutAlign=\"center\"\r\n                         class=\"u-spacing--widthFill\">\r\n                    <mat-label>\r\n                        TRANSACTION TYPES\r\n                    </mat-label>\r\n                    <transaction-type-dropdown translation-skip [searchTransactionData]=\"searchTransactionDropdownData\"\r\n                                               (searchTransitionChange)=\"onSelectionChanged($event)\">\r\n                    </transaction-type-dropdown>\r\n                </section>\r\n\r\n                <section fxFlex=\"none\"\r\n                         fxLayout=\"column\"\r\n                         fxLayoutAlign=\"center\"\r\n                         class=\"u-spacing--widthFill u-spacing__fieldToField--marginTop\">\r\n                    <mat-label>LICENSE PLATE</mat-label>\r\n                    <input #LicensePlateInput\r\n                           [(ngModel)]=\"licensePlate\"\r\n                           type=\"text\"\r\n                           name=\"licensePlate\"\r\n                           pattern=\"^[0-9a-zA-Z\\-\\,\\.\\'\\s]*$\"\r\n                           maxlength=\"30\"\r\n                           placeholder=\"ex. TX-ABCD12345\"\r\n                           [formControl]=\"control\"\r\n                           [matAutocomplete]=\"auto\" />\r\n                    <mat-autocomplete #auto=\"matAutocomplete\">\r\n                        <mat-option *ngFor=\"let vehicle of filteredSearchVehicleDropdownData | async\" [value]=\"vehicle.text\">\r\n                            {{vehicle.text}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                </section>\r\n            </section>\r\n\r\n            <section fxFlex=\"auto\"\r\n                     fxLayout=\"row\"\r\n                     fxLayout.lt-sm=\"row wrap\"\r\n                     fxLayoutAlign=\"space-between start\"\r\n                     fxLayoutGap=\"10px\"\r\n                     class=\"u-spacing--widthFill u-spacing__fieldToField--marginTop\">\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"center\"\r\n                     ngClass.lt-sm=\"u-spacing--widthFill\">\r\n                    <mat-label>FROM</mat-label>\r\n                    <section fxLayout=\"row\">\r\n                        <input [min]=\"minDate\"\r\n                               [max]=\"maxDate\"\r\n                               [matDatepicker]=\"pickerFrom\"\r\n                               name=\"pickerFrom\"\r\n                               [ngModel]=\"dateFrom\"\r\n                               (ngModelChange)=\"dateFrom=$event;autocorrectDateFrom()\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #pickerFrom></mat-datepicker>\r\n                    </section>\r\n\r\n                    <mat-label [innerHtml]=\"cmsShortDescription | safeHtml\"\r\n                               class=\"subtext-position\"></mat-label>\r\n                </div>\r\n\r\n                <div fxLayout=\"column\"\r\n                     fxLayoutAlign=\"center\"\r\n                     ngClass.lt-sm=\"u-spacing--widthFill u-spacing__fieldToField--marginTop\">\r\n                    <mat-label>TO</mat-label>\r\n                    <section fxLayout=\"row\">\r\n                        <input [min]=\"minDate\"\r\n                               [max]=\"maxDate\"\r\n                               [matDatepicker]=\"pickerTo\"\r\n                               name=\"pickerTo\"\r\n                               [ngModel]=\"dateTo\"\r\n                               (ngModelChange)=\"dateTo=$event;autocorrectDateTo()\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #pickerTo></mat-datepicker>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n\r\n            <section fxFlex=\"none\"\r\n                     fxLayout=\"column\"\r\n                     fxLayoutAlign=\"center\">\r\n                <div fxFlex=\"none\"\r\n                     fxLayout=\"column\"\r\n                     fxLayoutAlign=\"center\"\r\n                     class=\"u-spacing--widthFill u-spacing__fieldToField--marginTop\">\r\n                    <mat-label>DATE RANGE TYPE</mat-label>\r\n\r\n                    <mat-select translation-skip\r\n                                [disableOptionCentering]=\"true\"\r\n                                [(value)]=\"currentDateRangeType\"\r\n                                required>\r\n                        <mat-option *ngFor=\"let dateType of dateRangeType\" [value]=\"dateType\">\r\n                            {{dateType | titlecase}} Date\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </div>\r\n\r\n                <div fxFlex=\"none\"\r\n                     fxLayout=\"row\"\r\n                     fxLayoutAlign=\"end center\"\r\n                     fxLayoutGap=\"32px\"\r\n                     class=\"u-spacing--widthFill u-spacing__buttonToField--marginTop\">\r\n                    <div fxFlex=\"none\" (click)=\"clearAll()\">\r\n                        <a class=\"u--noUnderline\">Clear all  </a>\r\n                    </div>\r\n                    <div fxFlex=\"none\" (click)=\"infoSearch()\">\r\n                        <button ngClass.lt-md=\"u-spacing--widthFill\">\r\n                            APPLY\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n    </card-dash-container>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { ListItems } from 'accountActivity/interfaces';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'transaction-type-dropdown',\r\n    templateUrl: './transactionTypeDropdown.html',\r\n    styleUrls: ['./transactionTypeDropdown.less']\r\n})\r\nexport class TransactionTypeDropdownComponent implements OnChanges {\r\n\r\n    constructor() { }\r\n\r\n    @Input() searchTransactionData: ListItems[] = [];\r\n    @Output() searchTransitionChange: EventEmitter<ListItems> = new EventEmitter<ListItems>();\r\n\r\n    public selectedTransaction: ListItems;\r\n\r\n    ngOnChanges() { \r\n        this.selectedTransaction = this.searchTransactionData[0] || {} as ListItems;\r\n        this.searchTransitionChange.emit(this.selectedTransaction);\r\n    }\r\n\r\n    public updateValue() {\r\n        this.searchTransitionChange.emit(this.selectedTransaction);\r\n    }\r\n\r\n}\r\n","<main>\r\n    <mat-select id=\"searchTransactionType\"\r\n                name=\"searchTransactionType\"\r\n                [(ngModel)]='selectedTransaction'\r\n                (selectionChange)=\"updateValue()\"\r\n                [disableOptionCentering]=\"true\"\r\n                style=\"width:100%;\">\r\n        <mat-option *ngFor=\"let transactionType of searchTransactionData\"\r\n                    [value]=\"transactionType\">\r\n            {{'&nbsp;'.repeat(4 * transactionType.hierarchy)}}{{transactionType.text}}\r\n        </mat-option>\r\n    </mat-select>\r\n</main>\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { SearchAccountActivityRequest } from 'accountActivity/interfaces';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\nimport { stateNames as accountActivityStates } from 'accountActivity/constants';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\nimport { isObject } from 'lodash';\r\nimport { LoggingService } from 'logging/module';\r\nimport { WebApisService } from './webApis.service';\r\nimport { SortOder } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { IsInvoicedService } from 'common/services';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class AccountActivityService {\r\n\r\n    private DEFAULT_LATEST_ACTIVITY_SEARCH: SearchAccountActivityRequest;\r\n    defaultDateRangeTypeSortOrder: SortOder;\r\n\r\n    constructor(\r\n        @Inject(ENVIRON_CONFIG) private environmentConfig,\r\n        private isInvoicedService: IsInvoicedService\r\n    ) { }\r\n\r\n    public getDefaultLatestActivitySearch(): SearchAccountActivityRequest {\r\n        return this.DEFAULT_LATEST_ACTIVITY_SEARCH;\r\n    };\r\n\r\n    public setDefaultLatestActivitySearch(dateRangeTypeDefault: string,\r\n        transactionDefault: string, vehicleDefault: string) {\r\n\r\n        this.DEFAULT_LATEST_ACTIVITY_SEARCH = {\r\n            dateFrom: this.getDefaultFromDate(),\r\n            dateTo: new Date(),\r\n            dateRangeType: dateRangeTypeDefault,\r\n            transaction: transactionDefault,\r\n            vehicle: vehicleDefault,\r\n            vehicleNickNameType: 'L'\r\n        };\r\n    }\r\n\r\n    setDefaultDateRangeTypeSortOrder(order: SortOder) {\r\n        this.defaultDateRangeTypeSortOrder = order;\r\n    }\r\n\r\n    public formatReceiptDateString(inDate: Date) {\r\n        const [, month, day, year] = inDate.toString().split(' ');\r\n        return `${month} ${day} ${year}`;\r\n    }\r\n\r\n    public getLocationNameWithoutAgencyOrPhone(record: TransactionRecord) {\r\n        return record && `${record.facilityName} - ${record.plazaName} - ${record.direction}`;\r\n    }\r\n\r\n    public hasLocationCoordinates(record: { latitude: number; longitude: number }) {\r\n        return !!(record && record.latitude && record.longitude);\r\n    }\r\n\r\n    public createWebsiteLinksDictionary(parsedParams: { [key: string]: string }) {\r\n        return this.createAgencyPropertyDicitonaryBasedOnKeyStart(parsedParams, 'SITE_');\r\n    }\r\n\r\n    public createAgencyPhoneNumberDictionary(parsedParams: { [key: string]: string }) {\r\n        return this.createAgencyPropertyDicitonaryBasedOnKeyStart(parsedParams, 'PHONE_');\r\n    }\r\n\r\n    public createAgencyFullNameDictionary(parsedParams: { [key: string]: string }) {\r\n        return this.createAgencyPropertyDicitonaryBasedOnKeyStart(parsedParams, 'FULLNAME_');\r\n    }\r\n\r\n    private createAgencyPropertyDicitonaryBasedOnKeyStart(parsedParams: { [key: string]: string }, keyStart: string) {\r\n        return isObject(parsedParams)\r\n            ? Object.keys(parsedParams)\r\n                .filter(key => key.startsWith(keyStart))\r\n                .map(key => ({\r\n                    key: key.replace(keyStart, ''),\r\n                    value: parsedParams[key]\r\n                }))\r\n                .reduce((acc, current) => {\r\n                    acc[current.key] = current.value;\r\n                    return acc;\r\n                }, {})\r\n            : {};\r\n    }\r\n\r\n    public getDictionaryValueForAgency(agencyName: string, agencyPropertyDictionary: { [key: string]: string }) {\r\n        return agencyName && agencyPropertyDictionary && agencyPropertyDictionary[agencyName.toUpperCase().replace(/[^a-zA-Z0-9]/g, '_')];\r\n    }\r\n\r\n    public showTransactions(): boolean {\r\n        let showTransactions = false;\r\n\r\n        if (!this.environmentConfig.hideAccountActivityTabs.HideTransactions) {\r\n            showTransactions = true;\r\n        }\r\n\r\n        return showTransactions;\r\n    }\r\n\r\n    public showStatements(): boolean {\r\n        let showStatements = false;\r\n\r\n        if (!this.environmentConfig.hideAccountActivityTabs.HideStatements) {\r\n            showStatements = true;\r\n        }\r\n\r\n        return showStatements;\r\n    }\r\n\r\n    public showYearlySummary(): boolean {\r\n        let showYearlySummary = false;\r\n\r\n        if (!this.environmentConfig.hideAccountActivityTabs.HideYearlySummary) {\r\n            showYearlySummary = true;\r\n        }\r\n\r\n        return showYearlySummary;\r\n    }\r\n\r\n    public showReceipts(): boolean {\r\n        let showReceipts = false;\r\n\r\n        if (!this.environmentConfig.hideAccountActivityTabs.HideReceipts) {\r\n            showReceipts = true;\r\n        }\r\n\r\n        return showReceipts;\r\n    }\r\n\r\n    public showInvoices(): boolean {\r\n        let showInvoices = false;\r\n\r\n        if (this.isInvoicedService.isAccountInvoiced() && !this.environmentConfig.hideAccountActivityTabs.HideCorporateInvoices) {\r\n            showInvoices = true;\r\n        }\r\n\r\n        return showInvoices;\r\n    }\r\n\r\n    getDefaultFromDate() {\r\n        return this.getDaysAgo(this.environmentConfig.accountActivityDefaultDaysInSearch);\r\n    }\r\n\r\n\r\n    private getDaysAgo(diffDays: number, date?: Date) {\r\n        const newDate = date ? { ...date } : moment().toDate();\r\n        newDate.setDate(newDate.getDate() - diffDays);\r\n        return newDate;\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IFilterEvent, ISortFilterEvent } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FilterChangeService {\r\n\r\n    private eventInfo$ = new Subject<IFilterEvent | ISortFilterEvent>();\r\n\r\n    notifyEvent(event: IFilterEvent | ISortFilterEvent) {\r\n        this.eventInfo$.next(event);\r\n    }\r\n\r\n    listenToFilters(): Observable<IFilterEvent | ISortFilterEvent> {\r\n        return this.eventInfo$.asObservable();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ISearchTransactionsResponse, SearchAccountActivityRequest, SearchAccountActivityResponse } from 'accountActivity/interfaces';\r\nimport { AccountActivityService, WebApisService } from 'accountActivity/services';\r\n\r\n@Injectable()\r\nexport class FilterDataManager {\r\n\r\n    private response: ISearchTransactionsResponse;\r\n\r\n    constructor(private webApisService: WebApisService,\r\n        private accntActivityService: AccountActivityService\r\n    ) { }\r\n\r\n    async setFiltersData() {\r\n\r\n        const data = this.mapRequest();\r\n        this.response = await this.webApisService.setupSearchTransactions(data);\r\n\r\n    }\r\n\r\n    private mapRequest() {\r\n\r\n        const data: SearchAccountActivityRequest = {\r\n            dateTo: new Date(),\r\n            dateFrom: this.accntActivityService.getDefaultFromDate(),\r\n            dateRangeType: 'TRANSACTION',\r\n            transaction: '',\r\n            vehicle: '',\r\n            vehicleNickNameType: 'L'\r\n        };\r\n\r\n        return data;\r\n    }\r\n\r\n    getTransactionFilterData() {\r\n        return this.response.transactionListItems;\r\n    }\r\n\r\n    getVehicleFilterData() {\r\n        return this.response.vehicleNickName;;\r\n    }\r\n\r\n    getDateSortFilterDate() {\r\n        return [\r\n            {\r\n                text: 'Transaction Date',\r\n            }\r\n            ,\r\n            {\r\n                text: 'Posted Date'\r\n            }\r\n        ];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DateRange } from '@angular/material/datepicker';\r\nimport { DateRangeFilterComponent } from 'accountActivity/transactions/filters/dateRange/dateRangeFilter.component';\r\nimport { TransactionsFilterComponent } from 'accountActivity/transactions/filters/transactions/transactionsFilter.component';\r\nimport { VehiclesFilterComponent } from 'accountActivity/transactions/filters/vehicles/vehiclesFilter.component';\r\nimport { SortedByDateComponent } from 'accountActivity/transactions/sortFilters/date/date.component';\r\nimport { FilterName, IFilterCategories, SortFilterName, SortOder } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { AccountActivityService } from '..';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n\r\n    private filterCategories: IFilterCategories;\r\n    constructor(\r\n        private accntActivityService: AccountActivityService,\r\n    ) {\r\n\r\n    }\r\n\r\n    async getFilters() {\r\n\r\n        const fromDate = this.accntActivityService.getDefaultFromDate();\r\n        const toDate = new Date();\r\n\r\n        this.filterCategories = {\r\n            filteredBy: [\r\n                {\r\n                    defaultVal: 'All Transactions',\r\n                    name: FilterName.Transaction,\r\n                    order: 1,\r\n                    type: {\r\n                        component: TransactionsFilterComponent\r\n                    }\r\n                },\r\n                {\r\n                    defaultVal: 'All Vehicles',\r\n                    name: FilterName.Vehicle,\r\n                    order: 2,\r\n                    type: {\r\n                        component: VehiclesFilterComponent\r\n                    }\r\n                },\r\n                {\r\n                    defaultVal: new DateRange<Date>(fromDate, toDate),\r\n                    name: FilterName.DateRange,\r\n                    order: 3,\r\n                    type: {\r\n                        component: DateRangeFilterComponent\r\n                    }\r\n                },\r\n            ],\r\n            sortedBy: [\r\n                {\r\n                    defaultVal: 'Transaction Date',\r\n                    name: SortFilterName.Date,\r\n                    order: 1,\r\n                    type: {\r\n                        component: SortedByDateComponent\r\n                    },\r\n                    sortOrder: SortOder.Descending\r\n                },\r\n            ]\r\n        };\r\n\r\n\r\n        return this.filterCategories;\r\n    }\r\n\r\n}\r\n","export * from './accountActivity.service';\r\nexport * from './webApis.service';\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { DateRange } from '@angular/material/datepicker';\r\nimport { SearchAccountActivityRequest, SearchAccountActivityResponse } from 'accountActivity/interfaces';\r\nimport { AccountActivityService, WebApisService } from 'accountActivity/services';\r\nimport { EventType, FilterName, IFilterEvent, ISortFilterEvent, SortFilterName, SortOder } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { DownloadService } from 'common/services';\r\n\r\n\r\n@Injectable()\r\nexport class TransactionsRecordsManager {\r\n\r\n    cmsContent: { [key: string]: string };\r\n    request: SearchAccountActivityRequest;\r\n\r\n    constructor(private accountActivityService: AccountActivityService,\r\n        private webApi: WebApisService,\r\n        private downloadService: DownloadService,\r\n        private datePipe: DatePipe,\r\n\r\n    ) {\r\n    }\r\n\r\n    async getRecords() {\r\n\r\n        this.request = this.accountActivityService.getDefaultLatestActivitySearch();\r\n        const response = await this.getTransactionsRecords();\r\n\r\n        this.sortDates(this.accountActivityService.defaultDateRangeTypeSortOrder, response);\r\n\r\n        return response;\r\n    }\r\n\r\n    async filterRecords(event: IFilterEvent | ISortFilterEvent) {\r\n\r\n        this.updateRequest(event);\r\n        const response = await this.getTransactionsRecords();\r\n\r\n        if (event.eventType === EventType.SortFilter) {\r\n            this.sortDates(event.sortOder, response);\r\n        }\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    private async getTransactionsRecords() {\r\n\r\n        const response = await this.webApi.searchAccountActivity(this.request);\r\n        this.enrichResponse(response);\r\n\r\n        return response;\r\n    }\r\n\r\n    private enrichResponse(response: SearchAccountActivityResponse) {\r\n\r\n        const agencyWebsiteLinksDictionary = this.accountActivityService.createWebsiteLinksDictionary(this.cmsContent);\r\n        const agencyPhoneNumberDictionary = this.accountActivityService.createAgencyPhoneNumberDictionary(this.cmsContent);\r\n        const agencyFullNameDictionary = this.accountActivityService.createAgencyFullNameDictionary(this.cmsContent);\r\n\r\n        response.records.forEach(record => {\r\n            record.agencyWebsite = this.accountActivityService.getDictionaryValueForAgency\r\n                (record.agencyName, agencyWebsiteLinksDictionary);\r\n\r\n            record.agencyPhoneNumber = this.accountActivityService.getDictionaryValueForAgency\r\n                (record.agencyName, agencyPhoneNumberDictionary);\r\n\r\n            record.agencyFullName = this.accountActivityService.getDictionaryValueForAgency\r\n                (record.agencyName, agencyFullNameDictionary);\r\n        });\r\n\r\n        this.showDateLogic(response);\r\n\r\n    }\r\n\r\n    private showDateLogic(response: SearchAccountActivityResponse) {\r\n\r\n        switch (this.request.dateRangeType.toUpperCase()) {\r\n            case 'TRANSACTION':\r\n                response.showPostedDate = false;\r\n                break;\r\n            case 'POSTED':\r\n                response.showPostedDate = true;\r\n                break;\r\n            default:\r\n                response.showPostedDate = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private updateRequest(event: IFilterEvent | ISortFilterEvent) {\r\n        switch (event.name) {\r\n\r\n            case FilterName.Transaction:\r\n                this.request.transaction = event.value as string;\r\n                this.request.transactionDisplay = event.value as string;\r\n                break;\r\n\r\n            case FilterName.Vehicle:\r\n                this.request.vehicle = event.value as string;\r\n                break;\r\n\r\n            case FilterName.DateRange:\r\n                const dateRange = event.value as DateRange<Date>;\r\n                this.request.dateFrom = dateRange.start;\r\n                this.request.dateTo = dateRange.end;\r\n                break;\r\n\r\n            case SortFilterName.Date:\r\n                this.request.dateRangeType =\r\n                    event.value === 'Transaction Date' ? 'TRANSACTION' : 'POSTED';\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private sortDates(order: SortOder, response: SearchAccountActivityResponse) {\r\n\r\n        switch (order) {\r\n\r\n            case SortOder.Descending:\r\n\r\n                if (!response.showPostedDate) {\r\n                    response.records.sort(\r\n                        (a, b) => a.trxnDate < b.trxnDate ? 1 : a.trxnDate > b.trxnDate ? -1 : 0\r\n                    );\r\n                } else {\r\n                    response.records.sort(\r\n                        (a, b) => a.postedDate < b.postedDate ? 1 : a.postedDate > b.postedDate ? -1 : 0\r\n                    );\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async downloadReport(url: string, isPdf: boolean) {\r\n        await this.downloadService.download(url, isPdf, {\r\n            dateFrom: this.datePipe.transform(this.request.dateFrom, 'MM/dd/yyyy'),\r\n            dateTo: this.datePipe.transform(this.request.dateTo, 'MM/dd/yyyy'),\r\n            vehicle: this.request.vehicle ?? '',\r\n            transactions: this.request.transaction ?? '',\r\n            dateRangeType: this.request.dateRangeType\r\n        });\r\n    }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport {\r\n    GetYearlySummaryInfoRequest,\r\n    GetYearlySummaryInfoResponse,\r\n    InvoiceMonths,\r\n    MonthlyInvoiceResponse,\r\n    LocationCoordinatesRequest,\r\n    LocationCoordinatesResponse,\r\n    MonthlyInvoiceRequest,\r\n    MonthlyStatementRequest,\r\n    MonthlyStatementResponse,\r\n    ReceiptDetailsRequest,\r\n    ReceiptDetailsResponse,\r\n    SearchAccountActivityRequest,\r\n    SearchAccountActivityResponse,\r\n    SetupReceiptRequest,\r\n    SetupReceiptsResponse,\r\n    SetUpStatementsPageResponse,\r\n    SetupYearlyPageResponse,\r\n    ISearchTransactionsResponse\r\n} from 'accountActivity/interfaces';\r\nimport { HttpService, ResponseErrorService } from 'common/services';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n\r\n@Injectable()\r\nexport class WebApisService {\r\n\r\n    constructor(\r\n        private httpService: HttpService,\r\n        private responseErrorService: ResponseErrorService,\r\n        private datePipe: DatePipe\r\n    ) { }\r\n\r\n    private get baseUrl() {\r\n        return `/api/sessions/AccountActivity/`;\r\n    }\r\n\r\n\r\n    public async setupYearlyPage() {\r\n        const url = `${this.baseUrl}SetupYearlyPage`;\r\n        const response: SetupYearlyPageResponse = await this.httpService.get(url);\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async getYearlySummary(data: GetYearlySummaryInfoRequest) {\r\n        const url = `${this.baseUrl}GetYearlySummary`;\r\n        const response: GetYearlySummaryInfoResponse = await this.httpService.post(url, data);\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            this.responseErrorService.displayAlertsFromResponse(response);\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async setUpStatementsPage() {\r\n\r\n        const url = `${this.baseUrl}SetupStatementPage`;\r\n\r\n        const response: SetUpStatementsPageResponse = await this.httpService.get(url);\r\n\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async getMonthlyStatement(data: MonthlyStatementRequest) {\r\n\r\n        const url = `${this.baseUrl}GetStatement`;\r\n\r\n        const response: MonthlyStatementResponse = await this.httpService.post(url, data);\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            this.responseErrorService.displayAlertsFromResponse(response);\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async searchAccountActivity(data: SearchAccountActivityRequest) {\r\n        const url = `${this.baseUrl}SearchAccountActivity`;\r\n\r\n        const request = cloneDeep(data);\r\n        request.dateFrom = request.dateFrom;\r\n        request.dateTo = request.dateTo;\r\n\r\n        const response: SearchAccountActivityResponse = await this.httpService.post(url, request);\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async locationCoordinates(data: LocationCoordinatesRequest) {\r\n        const url = '/api/LocationCoordinates';\r\n        const response: LocationCoordinatesResponse = await this.httpService.post(url, data);\r\n\r\n        const responseHasErrors = Array.isArray(response.errors) && response.errors.length > 0;\r\n        if (!responseHasErrors) {\r\n            // If there are errors from this call, it should not alert the user\r\n            return response;\r\n        }\r\n    }\r\n\r\n\r\n    public async setupReceipts(data: SetupReceiptRequest) {\r\n\r\n        const url = `${this.baseUrl}setupReceipts`;\r\n\r\n        const response: SetupReceiptsResponse = await this.httpService.post(url, data);\r\n\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n\r\n    public async receiptDetails(data: ReceiptDetailsRequest) {\r\n\r\n        const url = `${this.baseUrl}getReceipt`;\r\n\r\n        const response: ReceiptDetailsResponse = await this.httpService.post(url, data);\r\n\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async setupInvoicesPage() {\r\n        const url = `${this.baseUrl}SetupInvoicesPage`;\r\n        const response: InvoiceMonths = await this.httpService.get(url);\r\n\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async getMonthlyInvoice(data: MonthlyInvoiceRequest) {\r\n        const url = `${this.baseUrl}GetInvoice`;\r\n        const response: MonthlyInvoiceResponse = await this.httpService.post(url, data);\r\n\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            this.responseErrorService.displayAlertsFromResponse(response);\r\n            return response;\r\n        }\r\n    }\r\n\r\n    public async setupSearchTransactions(data: SearchAccountActivityRequest) {\r\n        const url = `${this.baseUrl}GetAccountActivityVM`;\r\n        const response: ISearchTransactionsResponse = await this.httpService.post(url, data);\r\n        if (this.responseErrorService.isErrorFree(response)) {\r\n            return response;\r\n        }\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, Inject } from '@angular/core';\r\nimport { StateService } from '@uirouter/angular';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { stateNames } from 'accountActivity/constants';\r\nimport { CmsContent } from 'accountActivity/frame/frame.component';\r\n\r\nexport enum Tab {\r\n    transactions,\r\n    statements,\r\n    yearlySummary,\r\n    receipts,\r\n    invoices\r\n}\r\n\r\n@Component({\r\n    selector: 'tabs',\r\n    templateUrl: './tabs.html',\r\n    styleUrls: ['./tabs.less']\r\n})\r\nexport class TabsComponent implements OnInit { // \r\n\r\n    constructor(\r\n        private state: StateService,\r\n        private accountActivityService: AccountActivityService\r\n    ) { }\r\n\r\n    @Input() selectedState: Tab;\r\n    @Input() cms: CmsContent;\r\n\r\n    public Tab = Tab;\r\n\r\n    public showTransactionsTab = false;\r\n    public showStatementsTab = false;\r\n    public showYearlySummaryTab = false;\r\n    public showReceiptsTab = false;\r\n    public showInvoicesTab = false;\r\n\r\n    async ngOnInit() {\r\n        this.showTransactionsTab = this.accountActivityService.showTransactions();\r\n        this.showStatementsTab = this.accountActivityService.showStatements();\r\n        this.showYearlySummaryTab = this.accountActivityService.showYearlySummary();\r\n        this.showReceiptsTab = this.accountActivityService.showReceipts();\r\n        this.showInvoicesTab = this.accountActivityService.showInvoices();\r\n    }\r\n\r\n    public async transactionsSelected() {\r\n        this.selectedState = Tab.transactions;\r\n        await this.state.go(stateNames.accountActivityTransactions);\r\n    }\r\n\r\n    public async statementsSelected() {\r\n        this.selectedState = Tab.statements;\r\n        await this.state.go(stateNames.accountActivityStatements);\r\n    }\r\n\r\n    public async yearlySummarySelected() {\r\n        this.selectedState = Tab.yearlySummary;\r\n        await this.state.go(stateNames.accountActivityYearly);\r\n    }\r\n\r\n    public async receiptsSelected() {\r\n        this.selectedState = Tab.receipts;\r\n        await this.state.go(stateNames.accountActivityReceipts);\r\n    }\r\n\r\n    public async invoicesSelected() {\r\n        this.selectedState = Tab.invoices;\r\n        await this.state.go(stateNames.accountActivityInvoices);\r\n    }\r\n\r\n}\r\n","<main  class=\"refresh-2020\">\r\n    <section class=\"toolbar\"\r\n             fxLayout=\"row\"\r\n             fxLayout.lt-md=\"column-reverse\"\r\n             fxLayoutAlign=\"space-between center\"\r\n             fxLayoutAlign.lt-md=\"start stretch\"\r\n             fxLayoutGap=\"10px\">\r\n\r\n        <div fxLayout=\"row wrap\"\r\n             fxLayoutAlign=\"start center\"\r\n             fxLayoutGap=\"10px\">\r\n\r\n            <a class=\"productSelection\" *ngIf=\"showTransactionsTab\"\r\n               [ngClass]=\"{selected: selectedState === Tab.transactions}\"\r\n               (click)=\"transactionsSelected()\">{{cms.transactionsTab}}</a>\r\n\r\n            <mat-divider *ngIf=\"showStatementsTab\" [vertical]=\"true\"></mat-divider>\r\n\r\n            <a class=\"productSelection\" *ngIf=\"showStatementsTab\"\r\n               [ngClass]=\"{selected: selectedState === Tab.statements}\"\r\n               (click)=\"statementsSelected()\">{{cms.statementsTab}}</a>\r\n\r\n            <mat-divider *ngIf=\"showYearlySummaryTab\" [vertical]=\"true\"></mat-divider>\r\n\r\n            <a class=\"productSelection\" *ngIf=\"showYearlySummaryTab\"\r\n               [ngClass]=\"{selected: selectedState === Tab.yearlySummary}\"\r\n               (click)=\"yearlySummarySelected()\">{{cms.yearlyTab}}</a>\r\n\r\n            <mat-divider *ngIf=\"showReceiptsTab\" [vertical]=\"true\"></mat-divider>\r\n\r\n            <a class=\"productSelection\" *ngIf=\"showReceiptsTab\"\r\n               [ngClass]=\"{selected: selectedState === Tab.receipts}\"\r\n               (click)=\"receiptsSelected()\">{{cms.receiptsTab}}</a>\r\n\r\n            <mat-divider *ngIf=\"showInvoicesTab\" [vertical]=\"true\"></mat-divider>\r\n\r\n            <a class=\"productSelection\" *ngIf=\"showInvoicesTab\"\r\n               [ngClass]=\"{selected: selectedState === Tab.invoices}\"\r\n               (click)=\"invoicesSelected()\">{{cms.invoicesTab}}</a>\r\n\r\n        </div>\r\n\r\n    </section>\r\n</main>\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\n\r\n\r\n@Component({\r\n    selector: 'agency-and-location-link',\r\n    templateUrl: './agencyAndLocationLink.html',\r\n    styleUrls: ['./agencyAndLocationLink.less']\r\n})\r\nexport class AgencyAndLocationLinkComponent implements OnInit {\r\n\r\n    @Input() record: TransactionRecord;\r\n    @Input() showLocationLink = false;\r\n\r\n    public agencyLinkLeftPart = '';\r\n    public agencyLinkMatchedString = '';\r\n    public agencyLinkRightPart = '';\r\n\r\n    constructor(\r\n        public accountActivityService: AccountActivityService\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this.setAgencyLinkParts(this.record);\r\n    }\r\n\r\n    private setAgencyLinkParts(record: TransactionRecord) {\r\n        const resultArray = this.isAgencyInLocationName(record);\r\n\r\n        if (resultArray) {\r\n            this.agencyLinkMatchedString = resultArray[2];\r\n            this.agencyLinkLeftPart = resultArray[1];\r\n            this.agencyLinkRightPart = resultArray[3];\r\n        }\r\n    }\r\n\r\n    public showPlainLocationName(record: TransactionRecord) {\r\n        return (!this.showLocationLink && !this.isAgencyInLocationName(record))\r\n            || (this.showLocationLink && !this.hasLaneNameOrCoordinates(record));\r\n    }\r\n\r\n    public isAgencyInLocationName(record: TransactionRecord) {\r\n        const locationRegex = /(.*)(HCTRA|CTRMA|FBGPTRA|METRO|NTTA|TxDOT-TOD)(.*)/i;\r\n        return locationRegex.exec(record.locationName);\r\n    }\r\n\r\n    public hasLaneNameOrCoordinates(record: TransactionRecord) {\r\n        return record.laneName || this.accountActivityService.hasLocationCoordinates(record);\r\n    }\r\n}\r\n\r\n\r\n","<!--Show Location as a plain text if coordinates are not available and if Agency is not available-->\r\n<div *ngIf=\"showPlainLocationName(record)\" translation-skip>\r\n    {{record.locationName | truncate}}\r\n</div>\r\n\r\n<!--Should Agency as a Link if Agency is available-->\r\n<div *ngIf=\"!showLocationLink && isAgencyInLocationName(record)\" translation-skip>\r\n    {{agencyLinkLeftPart}}\r\n    <a translation-skip\r\n       class=\"location-popup u--noUnderline\">\r\n        {{agencyLinkMatchedString}}\r\n    </a>\r\n    {{agencyLinkRightPart}}\r\n</div>\r\n\r\n<!--Show Location as a Link if coordinates are available and if Agency is not available-->\r\n<div *ngIf=\"showLocationLink && hasLaneNameOrCoordinates(record)\">\r\n    <a translation-skip\r\n       class=\"location-map-popup u--noUnderline\">\r\n        {{accountActivityService.getLocationNameWithoutAgencyOrPhone(record) | truncate:25}}\r\n    </a>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'account-activity-filter-criteria',\r\n    templateUrl: './filterCriteria.html',\r\n    styleUrls: ['./filterCriteria.less']\r\n})\r\nexport class ActivityFilterCriteriaComponent {\r\n\r\n    constructor() { }\r\n}\r\n\r\n\r\n","<div fxLayout=\"row\"\r\n     fxLayoutAlign=\"center center\"\r\n     class=\"criteria-shape criteria-color criteria-size criteria-text\">\r\n    <ng-content></ng-content>\r\n</div>\r\n","import { ConditionalExpr } from '@angular/compiler';\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { DateRange } from '@angular/material/datepicker';\r\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { FilterService } from 'accountActivity/services/filter/filter.service';\r\nimport { EventType, FilterName, IFilterEvent } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\n\r\n@Component({\r\n    styleUrls: ['./dateRangeFilter.component.less'],\r\n    templateUrl: './dateRangeFilter.component.html'\r\n})\r\nexport class DateRangeFilterComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(\r\n        @Inject(ENVIRON_CONFIG) private environmentConfig,\r\n        private filterChangeService: FilterChangeService,\r\n        private filterService: FilterService\r\n    ) {\r\n    }\r\n\r\n    public selectedDateRange: DateRange<Date>;\r\n    private unsubscribe: Subscription;\r\n\r\n    public minDate: Date;\r\n    public maxDate: Date;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        this.minDate = this.createDate(-1 * this.environmentConfig.accountActivityMaxDaysInSearch);\r\n        this.maxDate = this.createDate();\r\n\r\n        this.unsubscribe = this.filterChangeService\r\n            .listenToFilters()\r\n            .pipe(filter(event => event.name === FilterName.DateRange))\r\n            .subscribe(event => {\r\n                this.selectedDateRange = event.value as DateRange<Date>;\r\n            });\r\n\r\n        const filters = await this.filterService.getFilters();\r\n\r\n        const defaultfilter = filters.filteredBy.filter(x => x.name === FilterName.DateRange)[0];\r\n        this.selectedDateRange = defaultfilter.defaultVal as DateRange<Date>;\r\n    }\r\n\r\n    private createDate(dayOffset: number = 0) {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() + dayOffset);\r\n        return date;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe?.unsubscribe();\r\n    }\r\n\r\n    notify(dateRange: DateRange<Date>) {\r\n\r\n        if (dateRange.start && dateRange.end) {\r\n\r\n            const eventInfo = {\r\n                eventType: EventType.Filter,\r\n                name: FilterName.DateRange,\r\n                value: dateRange\r\n            } as IFilterEvent;\r\n\r\n            this.filterChangeService.notifyEvent(eventInfo);\r\n        }\r\n    }\r\n}\r\n\r\n","<mat-datarange-picker-with-header\r\n    [selectedRange]=\"selectedDateRange\" \r\n    (selectedRangeChange)=\"notify($event)\"\r\n    [minDate]=\"minDate\"\r\n    [maxDate]=\"maxDate\"\r\n    [closeOnRangeSelected]=\"true\">\r\n</mat-datarange-picker-with-header>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ListItems } from 'accountActivity/interfaces';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { FilterDataManager } from 'accountActivity/services/filter/filter-data.manager';\r\nimport { EventType, FilterName, IFilterEvent } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    styleUrls: ['../../transaction.common.less', './transactionsFilter.component.less'],\r\n    templateUrl: './transactionsFilter.component.html'\r\n})\r\nexport class TransactionsFilterComponent implements OnInit {\r\n\r\n    event$ = new Subject<IFilterEvent>();\r\n    data: ListItems[] = [];\r\n    showList = false;\r\n    value = 'All Transactions';\r\n\r\n    isOpen = false;\r\n\r\n    public selectedTransaction: string;\r\n\r\n    constructor(private filterChangeService: FilterChangeService,\r\n        private filterDataManager: FilterDataManager) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data = this.filterDataManager.getTransactionFilterData();\r\n        this.selectedTransaction = this.data[0].text || '';\r\n\r\n    }\r\n\r\n    notify(selectedTransactionType: string) {\r\n        const eventInfo = {\r\n            eventType: EventType.Filter,\r\n            name: FilterName.Transaction,\r\n            value: selectedTransactionType\r\n        } as IFilterEvent;\r\n\r\n        this.filterChangeService.notifyEvent(eventInfo);\r\n\r\n    }\r\n\r\n    onChange(selectedTransactionType: string) {\r\n        this.selectedTransaction = selectedTransactionType;\r\n\r\n        this.notify(selectedTransactionType);\r\n\r\n        this.isOpen = false;\r\n    }\r\n\r\n    public close() {\r\n        this.isOpen = false;\r\n    }\r\n}\r\n\r\n","\r\n<div fxLayout=\"column\"\r\n     fxLayoutAlign=\"start start\">\r\n\r\n<div fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    cdkOverlayOrigin\r\n    #trigger=\"cdkOverlayOrigin\"\r\n    (click)=\"isOpen = !isOpen\"\r\n    class=\"criteria-shape criteria-color criteria-size criteria-text criteria-hover\">\r\n\r\n   <span style=\"color: #007aff; font-size: 14px;\">\r\n       {{selectedTransaction}}\r\n   </span>\r\n\r\n   <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\r\n\r\n</div>\r\n\r\n<ng-template cdkConnectedOverlay\r\n            [cdkConnectedOverlayOrigin]=\"trigger\"\r\n            [cdkConnectedOverlayOpen]=\"isOpen\"\r\n            [cdkConnectedOverlayPanelClass]=\"'overlayPanelClass'\"\r\n            (overlayOutsideClick)=\"close()\">\r\n\r\n   <div class=\"filter-panel\">\r\n\r\n       <div *ngFor=\"let transactionType of data\"\r\n            fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n           <div (click)=\"onChange(transactionType.text)\" class=\"transactionType-text criteria-hover\">\r\n               <span [ngClass]=\"{parentItem: transactionType.hierarchy < 2}\">{{'&nbsp;'.repeat(4 * transactionType.hierarchy)}}{{transactionType.text}}</span>\r\n           </div>\r\n\r\n       </div>\r\n\r\n   </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #icon>\r\n   <div class=\"glyphicon glyphicon-chevron-down chevron-color chevron-adjustment\">\r\n\r\n   </div>\r\n</ng-template>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NickName, SearchAccountActivityRequest } from 'accountActivity/interfaces';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { FilterDataManager } from 'accountActivity/services/filter/filter-data.manager';\r\nimport { EventType, FilterName, IFilterEvent } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n    styleUrls: ['../../transaction.common.less', './vehiclesFilter.component.less'],\r\n    templateUrl: './vehiclesFilter.component.html'\r\n})\r\nexport class VehiclesFilterComponent implements OnInit {\r\n\r\n    event$ = new Subject<IFilterEvent>();\r\n    showList = false;\r\n    value = 'All Vehicles';\r\n\r\n    isOpen = false;\r\n\r\n    public selectedVehicle: string;\r\n\r\n    public control = new FormControl();\r\n    public searchVehicleDropdownData: NickName[] = [];\r\n    public filteredSearchVehicleDropdownData: NickName[];\r\n\r\n    public licensePlate: string;\r\n\r\n    public isValid = true;\r\n\r\n    constructor(\r\n        private filterChangeService: FilterChangeService,\r\n        private filterDataManager: FilterDataManager\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.licensePlate = '';\r\n\r\n        this.getVehiclesData();\r\n\r\n        this.selectedVehicle = 'All Vehicles';\r\n    }\r\n\r\n    notify() {\r\n        const eventInfo = {\r\n            eventType: EventType.Filter,\r\n            name: FilterName.Vehicle,\r\n            value: this.selectedVehicle ? this.selectedVehicle : 'All Vehicles'\r\n        } as IFilterEvent;\r\n\r\n        this.filterChangeService.notifyEvent(eventInfo);\r\n\r\n    }\r\n\r\n    resetValid() {\r\n        this.isValid = true;\r\n    }\r\n\r\n    private getVehiclesData() {\r\n\r\n        this.searchVehicleDropdownData = this.filterDataManager.getVehicleFilterData();\r\n        this.filteredSearchVehicleDropdownData = this.searchVehicleDropdownData;\r\n    }\r\n\r\n    public close() {\r\n        this.isOpen = false;\r\n        this.licensePlate = '';\r\n    }\r\n\r\n    public clear() {\r\n        this.licensePlate = '';\r\n    }\r\n\r\n    selectOption(vehicle) {\r\n        const vehicleText = vehicle.text.trim();\r\n        this.selectedVehicle = vehicleText.toLowerCase() === 'all vehicles' ? 'All Vehicles' : vehicleText.toUpperCase();\r\n        this.notify();\r\n        this.isOpen = false;\r\n    }\r\n\r\n    public filteredSearchVehicleDropdownList() {\r\n        const vehicletext = this.control.value.toLowerCase().trim();\r\n        return this.filteredSearchVehicleDropdownData.filter(vehicle => vehicle.text.toLowerCase().trim().includes(vehicletext));\r\n    }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"refresh-2020\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\"\r\n        (click)=\"isOpen = !isOpen\" class=\"criteria-shape criteria-color criteria-size criteria-text criteria-hover\">\r\n\r\n        <span style=\"color: #007aff; font-size: 14px;\">\r\n            {{selectedVehicle}}\r\n        </span>\r\n\r\n        <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\r\n\r\n    </div>\r\n\r\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"isOpen\"\r\n        [cdkConnectedOverlayPanelClass]=\"'overlayPanelClass'\">\r\n        <div class=\"vehicle-panel\">\r\n\r\n            <section fxLayout=\"column\">\r\n                <div fxLayoutAlign=\"end\">\r\n                    <mat-icon id=\"closeIcon\" fxFlex=\"none\" class=\"clickable\" (click)=\"close()\"\r\n                        svgIcon=\"close-x\"></mat-icon>\r\n                </div>\r\n\r\n                <mat-label>LICENSE PLATE</mat-label>\r\n            </section>\r\n            <section fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\">\r\n                <div fxLayout=\"column\">\r\n                    <input class=\"vehicleInput\" type=\"text\" name=\"licensePlate\" [(ngModel)]=\"licensePlate\"\r\n                        autocomplete=\"off\" [formControl]=\"control\" placeholder=\"ex. TX-ABCD12345\">\r\n                    <div  role=\"listbox\" class=\"mat-autocomplete-panel mat-autocomplete-visible vehicle-Filter\" >\r\n                        <li *ngFor=\"let vehicle of filteredSearchVehicleDropdownList()\" (click)=\"selectOption(vehicle)\"\r\n                            class=\"mat-option mat-focus-indicator\">\r\n                            <span class=\"mat-option-text\"> {{vehicle.text}} </span>\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #icon>\r\n        <div class=\"glyphicon glyphicon-chevron-down chevron-color chevron-adjustment\">\r\n\r\n        </div>\r\n    </ng-template>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { FilterDataManager } from 'accountActivity/services/filter/filter-data.manager';\r\nimport { EventType, ISortFilterEvent, SortFilterName, SortOder } from 'accountActivity/transactions/transactions.interfaces';\r\n\r\n@Component({\r\n    styleUrls: ['../../transaction.common.less', './date.component.less'],\r\n    templateUrl: './date.component.html'\r\n})\r\nexport class SortedByDateComponent implements OnInit {\r\n\r\n    constructor(private filterChangeService: FilterChangeService,\r\n        private filterDataManager: FilterDataManager) { }\r\n\r\n    isOpen = false;\r\n\r\n    selectedDate: string;\r\n    data: { text: string }[];\r\n\r\n    ngOnInit() {\r\n\r\n        this.data = this.filterDataManager.getDateSortFilterDate();\r\n        this.selectedDate = this.data[0].text;\r\n    }\r\n\r\n    onChange(val: string) {\r\n\r\n        this.selectedDate = val;\r\n        this.notify(val);\r\n        this.isOpen = false;\r\n\r\n    }\r\n\r\n    notify(val: string) {\r\n\r\n        const eventInfo = {\r\n            eventType: EventType.SortFilter,\r\n            name: SortFilterName.Date,\r\n            value: val,\r\n            sortOder: SortOder.Descending\r\n        } as ISortFilterEvent;\r\n\r\n        this.filterChangeService.notifyEvent(eventInfo);\r\n\r\n    }\r\n\r\n    public close() {\r\n        this.isOpen = false;\r\n    }\r\n}\r\n\r\n","\r\n<div fxLayout=\"column\"\r\n     fxLayoutAlign=\"start start\">\r\n\r\n    <div fxLayout=\"row\"\r\n         fxLayoutAlign=\"space-between center\"\r\n         cdkOverlayOrigin\r\n         #trigger=\"cdkOverlayOrigin\"\r\n         (click)=\"isOpen = !isOpen\"\r\n         class=\"criteria-shape criteria-color criteria-size criteria-text criteria-hover\">\r\n\r\n        <span style=\"color: #007aff; font-size: 14px;\">\r\n            {{selectedDate}}\r\n        </span>\r\n\r\n        <ng-container *ngTemplateOutlet=\"icon\"></ng-container>\r\n\r\n    </div>\r\n\r\n    <ng-template cdkConnectedOverlay\r\n                 [cdkConnectedOverlayOrigin]=\"trigger\"\r\n                 [cdkConnectedOverlayOpen]=\"isOpen\"\r\n                 [cdkConnectedOverlayPanelClass]=\"'overlayPanelClass'\"\r\n                 (overlayOutsideClick)=\"close()\">\r\n\r\n        <div class=\"filter-panel\">\r\n\r\n            <div *ngFor=\"let dateType of data\"\r\n                 fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n                <div (click)=\"onChange(dateType.text)\" class=\"transactionType-text criteria-hover\">\r\n                    <span>{{dateType.text}}</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #icon>\r\n        <div class=\"glyphicon glyphicon-chevron-down chevron-color chevron-adjustment\">\r\n\r\n        </div>\r\n    </ng-template>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SafeResourceUrl } from '@angular/platform-browser';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\nimport { DialogRef, DialogService } from 'common/services';\r\nimport { GenericCmsModalComponent, GenericCmsModalInjectionValues } from 'common/ui';\r\nimport { LoggingService } from 'logging/module';\r\n\r\nexport interface InjectionValues {\r\n    transactionRecord: TransactionRecord;\r\n    googleMapSrc: SafeResourceUrl;\r\n    hasLocationCoordinates: boolean;\r\n    locationNameWithoutAgencyOrPhone: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'account-activity-transaction-details',\r\n    templateUrl: './transactionDetailsModal.html',\r\n    styleUrls: ['./transactionDetailsModal.less']\r\n})\r\nexport class TransactionDetailsModalComponent implements OnInit {\r\n\r\n    constructor(\r\n        private dialogRef: DialogRef<InjectionValues>,\r\n        private dialogService: DialogService,\r\n        private loggingService: LoggingService\r\n    ) { }\r\n\r\n    public transactionRecord = {} as TransactionRecord;\r\n    public googleMapSrc = '' as SafeResourceUrl;\r\n    public hasLocationCoordinates: boolean;\r\n    public locationNameWithoutAgencyOrPhone: string;\r\n\r\n    public close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.transactionRecord = { ...this.dialogRef.data.transactionRecord };\r\n        this.hasLocationCoordinates = this.dialogRef.data.hasLocationCoordinates;\r\n        this.locationNameWithoutAgencyOrPhone = this.dialogRef.data.locationNameWithoutAgencyOrPhone;\r\n\r\n        if (this.transactionRecord.agencyName && !this.transactionRecord.agencyWebsite) {\r\n            this.loggingService.logMessage(`Website link not available for agency: ${this.transactionRecord.agencyName}.`);\r\n        }\r\n\r\n        if (this.transactionRecord.laneName && this.hasLocationCoordinates) {\r\n            this.googleMapSrc = this.dialogRef.data.googleMapSrc;\r\n        }\r\n    }\r\n\r\n    public openAgencyDetailsModal() {\r\n        const data: GenericCmsModalInjectionValues = {\r\n            cmsContent: {\r\n                Title: 'Locations',\r\n                AcceptBtn: 'CLOSE',\r\n                PrimaryContent: `<div>${this.transactionRecord.agencyName}: ${this.transactionRecord.agencyFullName}</div>\r\n                    <div>${this.transactionRecord.agencyPhoneNumber}</div>\r\n                    <div><a href=\"https://${this.transactionRecord.agencyWebsite}\" target=\"_blank\" class=\"clickable u--noUnderline\">${this.transactionRecord.agencyWebsite}</a></div>`\r\n            }\r\n        };\r\n\r\n        this.dialogService.openGenericModal(GenericCmsModalComponent, data);\r\n    }\r\n\r\n}\r\n","<main>\r\n\r\n    <section *ngIf=\"transactionRecord.licenseStateAndPlate\">\r\n        <h3>Plate: {{transactionRecord.licenseStateAndPlate}}</h3>\r\n    </section>\r\n\r\n    <section fxLayout=\"row\"\r\n             fxLayout.lt-lg=\"row wrap\"\r\n             class=\"u-spacing--widthFill table-padding section-spacing\">\r\n\r\n        <section fxFlex=\"auto\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>TRANSACTION DATE</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section col-start\r\n                             fxFlex=\"auto\">\r\n                        {{transactionRecord.trxnDate | dateWithTimeZone: 'dateTime5'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n        <section fxFlex=\"auto\"\r\n                 fxFlexOrder=\"0\"\r\n                 fxFlexOrder.lt-md=\"1\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>POSTED DATE</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section col-start\r\n                             fxFlex=\"auto\">\r\n                        {{transactionRecord.postedDate | dateWithTimeZone: 'dateTime5'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n        <section fxFlexOrder=\"0\"\r\n                 fxFlexOrder.lt-md=\"1\"\r\n                 class=\"hidden u-spacing--widthFill\"\r\n                 [ngClass.lt-md]=\"{'hidden': false}\"></section>\r\n\r\n        <section fxFlex=\"2 1 auto\"\r\n                 fxFlexOrder=\"0\"\r\n                 fxFlexOrder.lt-md=\"1\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>NICKNAME</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section translation-skip\r\n                             col-start\r\n                             fxFlex=\"auto\">\r\n                        {{transactionRecord.vehicleNickName}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n        <section fxFlex=\"1 1 auto\"\r\n                 fxFlexOrder=\"0\"\r\n                 fxFlexOrder.lt-md=\"1\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>AXLE COUNT</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section translation-skip\r\n                             col-start\r\n                             fxFlex=\"auto\">\r\n                        {{transactionRecord.vehicleClassCode}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n        <section fxFlex=\"2 1 auto\"\r\n                 fxFlexOrder=\"0\"\r\n                 fxFlexOrder.lt-md=\"1\"\r\n                 class=\"description-width\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>DESCRIPTION</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section translation-skip\r\n                             col-start\r\n                             fxFlex=\"auto\">\r\n                        {{transactionRecord.transType}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n        <section fxFlex=\"none\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-end\r\n                                 fxFlex=\"auto\"\r\n                                 class=\"limited-flex-end-amount\">\r\n                            <mat-label>AMOUNT</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\">\r\n                    <section col-end\r\n                             fxFlex=\"auto\"\r\n                             class=\"limited-flex-end-amount\">\r\n                        {{transactionRecord.amount | currency: 'USD'}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n\r\n    </section>\r\n\r\n    <section *ngIf=\"transactionRecord.agencyName\"\r\n             fxLayout=\"row wrap\"\r\n             class=\"u-spacing--widthFill table-padding section-spacing\">\r\n        <section fxFlex=\"auto\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>LOCATION</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\"\r\n                               [isTop]=\"true\">\r\n                    <section col-start\r\n                             fxFlex=\"auto\"\r\n                             ngClass.lt-lg=\"extra-row-padding\">\r\n                        {{locationNameWithoutAgencyOrPhone | titlecase}}\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n        <section fxFlex=\"auto\"\r\n                 ngClass.lt-md=\"u-spacing--widthFill\">\r\n            <div class=\"u-spacing--widthFill negate-row-negative-margin\">\r\n                <div class=\"label-row-container\">\r\n                    <row-container [isLabel]=\"true\"\r\n                                   [rowType]=\"'transparent'\">\r\n                        <section col-start\r\n                                 fxFlex=\"auto\">\r\n                            <mat-label>AGENCY</mat-label>\r\n                        </section>\r\n                    </row-container>\r\n                </div>\r\n                <row-container [rowType]=\"'bodyInvert'\"\r\n                               [isTop]=\"true\">\r\n                    <section col-start\r\n                             fxFlex=\"auto\"\r\n                             ngClass.lt-lg=\"extra-row-padding\">\r\n                        {{transactionRecord.agencyName}} -\r\n                        <a class=\"u--noUnderline\"\r\n                           (click)=\"openAgencyDetailsModal()\">\r\n                            {{transactionRecord.agencyFullName}}\r\n                        </a>\r\n                    </section>\r\n                </row-container>\r\n            </div>\r\n        </section>\r\n    </section>\r\n\r\n    <section *ngIf=\"transactionRecord.agencyName\"\r\n             class=\"map-padding\">\r\n        <div *ngIf=\"hasLocationCoordinates\">\r\n            <iframe id=\"mapLocationWithCoordinates\"\r\n                    class=\"map-dimensions\"\r\n                    [src]=\"googleMapSrc\"\r\n                    frameborder=\"0\"></iframe>\r\n        </div>\r\n        <div *ngIf=\"!hasLocationCoordinates\"\r\n             fxLayout=\"column\"\r\n             fxLayoutAlign=\"center center\"\r\n             id=\"mapLocationNotFoundElement\"\r\n             class=\"no-map-spacing no-map-background-color\">\r\n            <img id=\"mapLocationNotFoundIcon\"\r\n                 src=\"/Content/icons/iconMapPin.png\" />\r\n            <div id=\"mapLocationNotFoundText\">Map not available</div>\r\n        </div>\r\n    </section>\r\n\r\n</main>\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DateRange } from '@angular/material/datepicker';\r\n\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { AccountActivityService } from 'accountActivity/services';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { FilterService } from 'accountActivity/services/filter/filter.service';\r\nimport { FilterName, IFilterCategories, IFilterEvent, ISortFilterEvent, SortFilterName } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { Subscription } from 'rxjs';\r\nimport { Tab } from '../tabs/tabs.component';\r\n\r\n\r\ninterface ICmsContent {\r\n    [key: string]: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'transactions',\r\n    templateUrl: './transactions.component.html',\r\n    styleUrls: ['./transactions.less']\r\n})\r\nexport class TransactionsComponent implements OnInit, OnDestroy {\r\n\r\n    filterCategories: IFilterCategories;\r\n    result: string;\r\n    transactionFilterVal: string;\r\n    vehicleFilterVal: string;\r\n    dateRangeFilterVal: DateRange<Date>;\r\n    sortDateFilterVal: string;\r\n\r\n    constructor(\r\n        public parent: FrameComponent,\r\n        private filterService: FilterService,\r\n        private accntActivityService: AccountActivityService,\r\n        private datePipe: DatePipe,\r\n        private filterChangeService: FilterChangeService\r\n    ) { }\r\n\r\n    @Input() cmsContent: ICmsContent;\r\n    eventsList: Subscription[] = [];\r\n    inititalizeComplete = false;\r\n\r\n    async ngOnInit() {\r\n\r\n        this.parent.selectedState = Tab.transactions;\r\n\r\n        await this.initialize();\r\n\r\n        this.eventsList.push(this.filterChangeService.listenToFilters().\r\n            subscribe(event => {\r\n                this.updateResult(event);\r\n            }));\r\n    }\r\n\r\n    private async initialize() {\r\n\r\n        await this.getFilters();\r\n\r\n        this.setDefaultFilterValues();\r\n        this.setSearchTransactionsDefaultReq();\r\n        this.setResult();\r\n        this.setDefaultDateRangeTypeSortOrder();\r\n        this.inititalizeComplete = true;\r\n\r\n    }\r\n\r\n\r\n    private setDefaultFilterValues() {\r\n        this.transactionFilterVal = this.getDefaultFilterValue(FilterName.Transaction);\r\n        this.vehicleFilterVal = this.getDefaultFilterValue(FilterName.Vehicle);\r\n        this.dateRangeFilterVal = this.getDefaultFilterValue(FilterName.DateRange);\r\n        this.sortDateFilterVal = this.getDefaultSortFilterValue(SortFilterName.Date);\r\n    }\r\n\r\n    private setSearchTransactionsDefaultReq() {\r\n\r\n        const dateRangeTye = this.sortDateFilterVal === 'Transaction Date' ? 'TRANSACTION' : 'POSTED';\r\n        this.accntActivityService.setDefaultLatestActivitySearch(dateRangeTye, this.transactionFilterVal,\r\n            this.vehicleFilterVal);\r\n    }\r\n\r\n    private setResult() {\r\n\r\n        this.result = `${this.transactionFilterVal} \r\n                        for ${this.vehicleFilterVal}\r\n                        ${this.parseDateRange(this.dateRangeFilterVal)} filtered by       \r\n                        ${this.sortDateFilterVal}`;\r\n\r\n    }\r\n\r\n    private setDefaultDateRangeTypeSortOrder() {\r\n        const defaultSortOrder = this.filterCategories.sortedBy.find(filter => filter.name === SortFilterName.Date).sortOrder;\r\n        this.accntActivityService.setDefaultDateRangeTypeSortOrder(defaultSortOrder);\r\n\r\n    }\r\n\r\n\r\n    private async getFilters() {\r\n\r\n        this.filterCategories = await this.filterService.getFilters();\r\n\r\n        this.sortFilters();\r\n\r\n    }\r\n\r\n    private sortFilters() {\r\n\r\n        const filteredByList = this.filterCategories.filteredBy.sort((a, b) => a.order - b.order);\r\n        const sortedByList = this.filterCategories.sortedBy.sort((a, b) => a.order - b.order);\r\n        this.filterCategories.filteredBy = filteredByList;\r\n        this.filterCategories.sortedBy = sortedByList;\r\n\r\n    }\r\n\r\n    private updateResult(event: IFilterEvent | ISortFilterEvent) {\r\n\r\n        switch (event.name) {\r\n\r\n            case FilterName.Transaction:\r\n\r\n                this.transactionFilterVal = event.value as string;\r\n                this.setResult();\r\n                break;\r\n\r\n            case FilterName.Vehicle:\r\n\r\n                this.vehicleFilterVal = event.value as string;\r\n                this.setResult();\r\n                break;\r\n\r\n            case FilterName.DateRange:\r\n                this.dateRangeFilterVal = event.value as DateRange<Date>;\r\n                this.setResult();\r\n                break;\r\n\r\n            case SortFilterName.Date:\r\n\r\n                this.sortDateFilterVal = event.value;\r\n                this.setResult();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    private getDefaultFilterValue(name: FilterName) {\r\n\r\n        switch (name) {\r\n\r\n            case FilterName.Transaction:\r\n            case FilterName.Vehicle:\r\n            case FilterName.DateRange: {\r\n                return this.filterCategories.filteredBy.find(filter => filter.name === name).defaultVal;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private getDefaultSortFilterValue(name: SortFilterName) {\r\n\r\n        switch (name) {\r\n\r\n            case SortFilterName.Date: {\r\n                return this.filterCategories.sortedBy.find(sort => sort.name === name).defaultVal;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private parseDateRange(dateRange: DateRange<Date>): string {\r\n        return `from ${this.datePipe.transform(dateRange.start)} to ${this.datePipe.transform(dateRange.end)} `;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventsList.forEach(event => event.unsubscribe());\r\n    }\r\n}\r\n\r\n\r\n","<main fxLayout=\"column\" *ngIf=\"inititalizeComplete\">\r\n    <card-dash-container fxFlex=\"auto\" [hasMargin]=\"false\">\r\n\r\n        <section fxLayout=\"column\" fxLayoutGap=\"20px\">\r\n\r\n            <tansactions-filters-list *ngIf=\"filterCategories\"\r\n            [filterCategories]=\"filterCategories\">\r\n\r\n            </tansactions-filters-list>\r\n\r\n            <section>\r\n                <div>Showing results for: \"{{result}}\"</div>\r\n            </section>\r\n        </section>\r\n\r\n    </card-dash-container>\r\n\r\n    <transactions-records [cmsContent]=\"cmsContent\"></transactions-records>\r\n\r\n\r\n</main>","import { Type } from '@angular/core';\r\nimport { DateRange as DateRangeType } from '@angular/material/datepicker';\r\n\r\nexport enum FilterName {\r\n    Transaction,\r\n    Vehicle,\r\n    DateRange\r\n}\r\n\r\nexport interface IType {\r\n    component: Type<any>;\r\n}\r\n\r\nexport interface IFilter {\r\n    name: FilterName;\r\n    type: IType;\r\n    order: number;\r\n    defaultVal?: any;\r\n}\r\n\r\nexport enum SortFilterName {\r\n    Date = 'Date'\r\n}\r\n\r\nexport interface ISortFilter {\r\n    name: SortFilterName;\r\n    type: IType;\r\n    order: number;\r\n    defaultVal?: string;\r\n    sortOrder: SortOder.Descending;\r\n}\r\n\r\nexport enum SortOder {\r\n    Ascending,\r\n    Descending\r\n}\r\n\r\nexport interface IFilterCategories {\r\n    filteredBy?: IFilter[];\r\n    sortedBy?: ISortFilter[];\r\n}\r\n\r\nexport enum EventType {\r\n    Filter,\r\n    SortFilter\r\n}\r\n\r\nexport interface IFilterEvent {\r\n    name: FilterName;\r\n    value: string | DateRangeType<Date>;\r\n    eventType: EventType.Filter;\r\n}\r\n\r\nexport interface ISortFilterEvent {\r\n    name: SortFilterName;\r\n    value: string;\r\n    eventType: EventType.SortFilter;\r\n    sortOder: SortOder;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FilterDataManager } from 'accountActivity/services/filter/filter-data.manager';\r\nimport { FilterName, IFilter, IFilterCategories, ISortFilter } from 'accountActivity/transactions/transactions.interfaces';\r\nimport { TransactionsFilterComponent } from '../filters/transactions/transactionsFilter.component';\r\n\r\n\r\n@Component({\r\n    selector: 'tansactions-filters-list',\r\n    styleUrls: ['transactionsFiltersList.component.less'],\r\n    templateUrl: './transactionsFiltersList.component.html',\r\n    providers: [FilterDataManager]\r\n})\r\nexport class TransactionsFilterCriteriaComponent implements OnInit {\r\n\r\n    @Input() filterCategories: IFilterCategories;\r\n    filteredByList: IFilter[];\r\n    sortedByList: ISortFilter[];\r\n\r\n    constructor(private filterDataManager: FilterDataManager) {\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        await this.filterDataManager.setFiltersData();\r\n\r\n        this.filteredByList = this.filterCategories.filteredBy;\r\n        this.sortedByList = this.filterCategories.sortedBy;\r\n\r\n   }\r\n\r\n}\r\n","<section fxLayout=\"row wrap\"\r\n         fxLayoutAlign=\"start center\"\r\n         fxLayoutGap=\"10px\">\r\n\r\n    <strong>\r\n        <div ngClass.lt-md=\"filterItem\">Filtered By:</div>\r\n    </strong>\r\n\r\n    <ng-container *ngFor=\"let filteredBy of filteredByList\">\r\n        <div ngClass.lt-md=\"filterItem\">\r\n            <ng-container *ngComponentOutlet=\"filteredBy.type.component\">\r\n            </ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n    <strong>\r\n        <div ngClass.lt-md=\"filterItem\" style=\"margin-left:10px\">Sorted By:</div>\r\n    </strong>\r\n\r\n\r\n    <ng-container *ngFor=\"let sortedBy of sortedByList\">\r\n        <div ngClass.lt-md=\"filterItem\">\r\n            <ng-container *ngComponentOutlet=\"sortedBy.type.component\">\r\n            </ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n</section>\r\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { SearchAccountActivityResponse } from 'accountActivity/interfaces';\r\nimport { FilterChangeService } from 'accountActivity/services/filter/filter-change.service';\r\nimport { TransactionsRecordsManager } from 'accountActivity/services/transactionsRecords/transactionsRecords.manager';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\nimport { ENVIRON_CONFIG } from 'common/module';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { IFilterEvent, ISortFilterEvent } from '../transactions.interfaces';\r\nimport { CurrentUser, CurrentUserService } from 'common/services';\r\nimport { StorefrontUtilityService } from 'storefront/services/storefrontUtility.service';\r\n\r\n@Component({\r\n    selector: 'transactions-records',\r\n    templateUrl: './transactionsRecords.component.html',\r\n    styleUrls: ['../transactions.less'],\r\n    providers: [TransactionsRecordsManager]\r\n})\r\nexport class TransactionsRecordsComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(\r\n        public parent: FrameComponent,\r\n        @Inject(ENVIRON_CONFIG) public environmentConfig,\r\n        private storefrontUtilityService: StorefrontUtilityService,\r\n        private transactionsRecordsManager: TransactionsRecordsManager,\r\n        private filterChangeService: FilterChangeService,\r\n        private currentUserService: CurrentUserService\r\n    ) { }\r\n\r\n    @Input() cmsContent: { [key: string]: string };\r\n\r\n    public searchCriteriaTags: string[] = [];\r\n    public totalRecordsCount = 0;\r\n    public filteredTotal = 0;\r\n    public showLocationLink = false;\r\n    public showNoDataIcon = false;\r\n    public readonly defaultPageSize = this.environmentConfig.paginationConfig.transactions.PageSize;\r\n    public readonly paginationLimit = this.environmentConfig.paginationConfig.transactions.LimitToStart;\r\n    public listOfAllRecords: TransactionRecord[];\r\n    public paginatedRecords: TransactionRecord[];\r\n    public mobileLoadedRecords: TransactionRecord[];\r\n    public currentUser: CurrentUser;\r\n\r\n    public reportDownloading = false;\r\n    eventsList: Subscription[] = [];\r\n    showPostedDate = false;\r\n\r\n    ngOnInit() {\r\n       \r\n        this.transactionsRecordsManager.cmsContent = this.cmsContent;\r\n        //listen to filter and sorting events\r\n\r\n        this.searchTransactions();\r\n\r\n        this.eventsList.push(this.filterChangeService.listenToFilters().\r\n            subscribe(event => {\r\n                this.filterRecords(event);\r\n            }));\r\n\r\n        this.currentUser = this.currentUserService.getCurrentUser();\r\n        \r\n    }\r\n\r\n    private async searchTransactions() {\r\n\r\n        const response = await this.transactionsRecordsManager.getRecords();\r\n\r\n        this.parseRecords(response);\r\n\r\n    }\r\n\r\n    private async filterRecords(event: IFilterEvent | ISortFilterEvent) {\r\n\r\n        const response = await this.transactionsRecordsManager.filterRecords(event);\r\n\r\n        this.parseRecords(response);\r\n\r\n    }\r\n\r\n    private parseRecords(response: SearchAccountActivityResponse) {\r\n        this.totalRecordsCount = response.totalRecordsCount;\r\n        this.filteredTotal = response.totalAmount;\r\n\r\n        this.showLocationLink = !(response.hideLocationLink || this.storefrontUtilityService.isRunningAsKiosk);\r\n\r\n        this.listOfAllRecords = response.records;\r\n        this.paginatedRecords = this.listOfAllRecords.slice(0, this.defaultPageSize);\r\n        this.mobileLoadedRecords = this.listOfAllRecords.slice(0, this.defaultPageSize);\r\n        this.showPostedDate = response.showPostedDate;\r\n        this.showNoDataIcon = true;\r\n    }\r\n\r\n    public updateTransactionsTable(event: PageEvent) {\r\n        const start = event.pageIndex * event.pageSize;\r\n        const end = (event.pageIndex + 1) * event.pageSize;\r\n        this.paginatedRecords = this.listOfAllRecords.slice(start, end);\r\n    }\r\n\r\n    public mobileLoadMore() {\r\n        const start = this.mobileLoadedRecords.length;\r\n        const end = this.mobileLoadedRecords.length + this.defaultPageSize;\r\n        this.mobileLoadedRecords = this.mobileLoadedRecords.concat(this.listOfAllRecords.slice(start, end));\r\n    }\r\n\r\n    public async getTransactionsPdf() {\r\n        const url = 'api/sessions/Pdf/GetPdfReport/';\r\n        await this.downloadReport(url, true);\r\n    };\r\n\r\n    public async getTransactionsExcel() {\r\n        const url = 'api/sessions/Pdf/GetExcelReport/';\r\n        await this.downloadReport(url, false);\r\n    };\r\n\r\n    private async downloadReport(url: string, isPdf: boolean) {\r\n        this.reportDownloading = true;\r\n\r\n        await this.transactionsRecordsManager.downloadReport(url, isPdf);\r\n\r\n        this.reportDownloading = false;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventsList.forEach(event => event.unsubscribe());\r\n    }\r\n\r\n}\r\n","<card-dash-container fxFlex=\"auto\"\r\n                         [hasMargin]=\"false\"\r\n                         class=\"u-spacing__cardToCard--marginTop\">\r\n        <section class=\"table-padding\">\r\n\r\n            <section fxLayout=\"row wrap\"\r\n                     fxLayoutAlign=\"space-between\"\r\n                     class=\"transactions-found-display\">\r\n\r\n                <section fxFlex=\"none\"\r\n                         fxFlex.lt-md=\"grow\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between\">\r\n                    <div fxFlex=\"none\">{{totalRecordsCount}} Record{{totalRecordsCount > 1 ? 's' : ''}} found</div>\r\n\r\n                    <div fxFlex=\"none\"\r\n                         fxFlexOffset=\"32px\"\r\n                         fxFlexOffset.lt-md=\"0px\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutGap=\"16px\">\r\n                        <a translation-skip\r\n                           *ngIf=\"!environmentConfig.hideMediaActionButtons.TransactionTabPdf && !environmentConfig.hidePdfAccountActivity\"\r\n                           fxFlex=\"none\"\r\n                           (click)=\"getTransactionsPdf()\"\r\n                           class=\"download-link\"\r\n                           [ngClass]=\"{'disabled': reportDownloading}\">\r\n                            <img src=\"/Content/icons/pdf.gif\" class=\"download-icon\" />PDF\r\n                        </a>\r\n                        <a translation-skip\r\n                           *ngIf=\"!environmentConfig.hideMediaActionButtons.TransactionTabExcel && !environmentConfig.hideExcelAccountActivity\"\r\n                           fxFlex=\"none\"\r\n                           (click)=\"getTransactionsExcel()\"\r\n                           class=\"download-link\"\r\n                           [ngClass]=\"{'disabled': reportDownloading}\">\r\n                            <img src=\"/Content/icons/excel.gif\" class=\"download-icon\" />Excel\r\n                        </a>\r\n                    </div>\r\n                </section>\r\n\r\n                <section fxFlex=\"1 1 300px\"\r\n                         fxFlex.lt-md=\"grow\"\r\n                         class=\"transactions-total-display\">\r\n                    <span>Filtered Total:</span><span translation-skip>{{filteredTotal | currency:'USD'}}</span>\r\n                </section>\r\n            </section>\r\n\r\n            <section *ngIf=\"totalRecordsCount >= paginationLimit\"\r\n                     fxLayout=\"row\"\r\n                     fxLayoutAlign=\"start center\"\r\n                     class=\"u-spacing--widthFill\"\r\n                     style=\"margin-top:10px\">\r\n                <div fxShow\r\n                     fxHide.lt-md\r\n                     fxFlex=\"auto\"\r\n                     fxLayout=\"row\"\r\n                     fxLayoutAlign=\"end center\">\r\n                    <mat-paginator-goto [length]=\"totalRecordsCount\"\r\n                                        [pageIndex]=\"0\"\r\n                                        [pageSize]=\"defaultPageSize\"\r\n                                        [hidePageSize]=\"true\"\r\n                                        (page)=\"updateTransactionsTable($event)\">\r\n                    </mat-paginator-goto>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"u-spacing--widthFill u-spacing__gridToRecords--marginTop\">\r\n                <account-activity-transactions-table [showPostedDate]=\"showPostedDate\" *ngIf=\"totalRecordsCount < paginationLimit && showNoDataIcon === true\" [transactionRecords]=\"listOfAllRecords\" [showLocationLink]=\"showLocationLink\" [cmsContent]=\"cmsContent\" [isLargeAcount]=\"currentUser.largeAccountFlag\"></account-activity-transactions-table>\r\n                <account-activity-transactions-table [showPostedDate]=\"showPostedDate\" *ngIf=\"totalRecordsCount >= paginationLimit && showNoDataIcon === true\" fxShow fxHide.lt-md [transactionRecords]=\"paginatedRecords\" [showLocationLink]=\"showLocationLink\" [cmsContent]=\"cmsContent\" [isLargeAcount]=\"currentUser.largeAccountFlag\"></account-activity-transactions-table>\r\n                <account-activity-transactions-table [showPostedDate]=\"showPostedDate\" *ngIf=\"totalRecordsCount >= paginationLimit && showNoDataIcon === true\" fxHide fxShow.lt-md [transactionRecords]=\"mobileLoadedRecords\" [showLocationLink]=\"showLocationLink\" [cmsContent]=\"cmsContent\" [isLargeAcount]=\"currentUser.largeAccountFlag\"></account-activity-transactions-table>\r\n            </section>\r\n\r\n            <section *ngIf=\"totalRecordsCount >= paginationLimit && mobileLoadedRecords.length < totalRecordsCount\"\r\n                     fxLayout=\"row\"\r\n                     fxLayoutAlign=\"center\"\r\n                     fxHide\r\n                     fxShow.lt-md\r\n                     class=\"u-spacing--widthFill u-spacing__loadMore--margin\">\r\n                <a class=\"u--noUnderline\"\r\n                   (click)=\"mobileLoadMore()\">Load more</a>\r\n            </section>\r\n\r\n        </section>\r\n\r\n\r\n</card-dash-container>\r\n","import { AfterViewInit, Component, ElementRef, Inject, Input, ViewChild } from '@angular/core';\r\nimport { TransactionRecord } from 'accountDashboard/services';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { WindowRef } from 'common/providers';\r\nimport { DialogService, DialogContent } from 'common/services';\r\nimport { CopyToExcelService } from 'common/services/copyToExcel/copyToExcel.service';\r\nimport { TransactionDetailsModalComponent, InjectionValues } from '../transactionDetailsModal/transactionDetailsModal.component';\r\nimport { AccountActivityService, WebApisService } from 'accountActivity/services';\r\nimport { clone } from 'lodash';\r\nimport { LocationCoordinatesResponse } from '../../interfaces';\r\n\r\ninterface ICmsContent {\r\n    [key: string]: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'account-activity-transactions-table',\r\n    templateUrl: './transactionsTable.html',\r\n    styleUrls: ['./transactionsTable.less'],\r\n    providers: [CopyToExcelService]\r\n})\r\nexport class TransactionsTableComponent implements AfterViewInit {\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private sanitizer: DomSanitizer,\r\n        private webApi: WebApisService,\r\n        private accountActivityService: AccountActivityService,\r\n        @Inject(WindowRef) private window: Window,\r\n        private copyToExcelService: CopyToExcelService\r\n    ) { }\r\n\r\n    @Input() transactionRecords: TransactionRecord[];\r\n    @Input() showLocationLink: boolean;\r\n    @Input() showPostedDate: boolean;\r\n    @Input() cmsContent: ICmsContent;\r\n    @Input() isLargeAcount: boolean;\r\n\r\n    @ViewChild('GridContainer') gridContainer: ElementRef;\r\n    // @ViewChild('GridCopyContainer') gridCopyContainer: ElementRef;\r\n\r\n    public async openTransactionRecordDetailsModal(record: TransactionRecord) {\r\n\r\n        record = await this.decorateWithLocationCoordinates(record);\r\n\r\n        this.dialogService.openSliderFilled(TransactionDetailsModalComponent,\r\n            {\r\n                transactionRecord: record,\r\n                googleMapSrc: this.getMapSrcFor(record),\r\n                hasLocationCoordinates: this.accountActivityService.hasLocationCoordinates(record),\r\n                locationNameWithoutAgencyOrPhone: this.accountActivityService.getLocationNameWithoutAgencyOrPhone(record)\r\n            } as InjectionValues,\r\n            { title: 'Transaction Details' } as DialogContent);\r\n    }\r\n\r\n    private getMapSrcFor(record: TransactionRecord & { latitude: number; longitude: number }) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.accountActivityService.hasLocationCoordinates(record)\r\n            ? `https://www.google.com/maps?q=${record.latitude},${record.longitude}&output=embed`\r\n            : '');\r\n    }\r\n\r\n    private async decorateWithLocationCoordinates(record: TransactionRecord) {\r\n        const response: LocationCoordinatesResponse = await this.webApi.locationCoordinates({\r\n            laneName: record.laneName\r\n        });\r\n\r\n        const recordCopy: TransactionRecord & { latitude: number; longitude: number } = clone(record);\r\n\r\n        if (this.accountActivityService.hasLocationCoordinates(response?.coordinates)) {\r\n            recordCopy.latitude = response.coordinates.latitude;\r\n            recordCopy.longitude = response.coordinates.longitude;\r\n        }\r\n\r\n        return recordCopy;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        //To do: complete the requiremeent 85436 first if there is a change in the UI of transactions grid\r\n\r\n        const gridElement = this.gridContainer.nativeElement as HTMLElement;\r\n\r\n        gridElement.addEventListener('copy', (e) => {\r\n\r\n            this.copyToExcelTransctions(e);\r\n\r\n        });\r\n    }\r\n\r\n    private copyToExcelTransctions(e) {\r\n        const data = this.window.getSelection().toString().split('\\n');\r\n        const filterData = data.filter(d => d !== '');\r\n\r\n        const range = this.window.getSelection().getRangeAt(0);\r\n\r\n        //set start container\r\n\r\n        const startContainer = range.startContainer;\r\n        let startEl = startContainer;\r\n        const objRows = [];\r\n        let newStartEl = startEl;\r\n\r\n        while (startEl.textContent.trim() !== filterData[0]) {\r\n            startEl = startEl.parentElement.nextElementSibling;\r\n        }\r\n\r\n        if (startEl.childNodes.length > 0) {\r\n            if (startEl.firstChild.nodeName === '#text') {\r\n                newStartEl = startEl.firstChild;\r\n            }\r\n        }\r\n\r\n        let parentEl = newStartEl.parentElement;\r\n\r\n        while (!(parentEl.hasAttribute('name') && parentEl.getAttribute('name') === 'newRow')) {\r\n            parentEl = parentEl.parentElement;\r\n        };\r\n\r\n        const divNewrow = parentEl;\r\n        let nextDivNewrow = divNewrow;\r\n\r\n        //create first object\r\n        let obj = {} as any;\r\n\r\n        const key = newStartEl.parentElement.getAttribute('name');\r\n\r\n        obj[key] = filterData[0];\r\n\r\n\r\n        let nextElement = newStartEl.parentElement.nextElementSibling;\r\n\r\n        for (let i = 1; i < filterData.length; i++) {\r\n\r\n            while (nextElement.textContent.trim() === '') {\r\n                nextElement = nextElement.nextElementSibling;\r\n            }\r\n\r\n            if (filterData[i].trim() !== '' && (nextElement.textContent.trim() === filterData[i].trim())) {\r\n\r\n                const key1 = nextElement.getAttribute('name');\r\n                obj[key1] = filterData[i];\r\n\r\n                //end of fxrow\r\n                if (nextElement.getAttribute('name') === 'amount') {\r\n\r\n                    objRows.push(obj);\r\n\r\n                    const newDivNewrow = nextDivNewrow.nextElementSibling;\r\n\r\n                    //get to the fxrow\r\n                    if (newDivNewrow !== null) {\r\n\r\n                        const newFxRow = newDivNewrow.getElementsByTagName('fx-row')[0];\r\n\r\n                        if (newFxRow !== null) {\r\n                            const section = newFxRow.getElementsByTagName('section')[0];\r\n                            if (section.hasAttribute('name') && section.getAttribute('name') === 'transaction-row') {\r\n                                const trnxRow = section;\r\n                                nextElement = trnxRow.children[1];\r\n                                nextDivNewrow = newDivNewrow as HTMLElement;\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                    obj = {};\r\n                } else {\r\n\r\n                    if (i === filterData.length - 1) {\r\n                        objRows.push(obj);\r\n                    }\r\n\r\n                    //move to next sibling\r\n                    if (nextElement.getAttribute('name') === 'description') {\r\n                        nextElement = nextElement.parentElement.nextElementSibling;\r\n                    } else {\r\n                        nextElement = nextElement.nextElementSibling;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        console.log(objRows);\r\n\r\n\r\n        const cols = [this.showPostedDate ? 'posted date' : 'transaction date', 'lic. plate', 'nickname', 'location', 'description', 'amount'];\r\n        const newTbl = this.copyToExcelService.getDataForExcel(objRows, cols);\r\n\r\n        e.clipboardData.setData('text/plain', newTbl);\r\n\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    getDateHeader() {\r\n        return this.showPostedDate ? 'posted date' : 'transaction date';\r\n    }\r\n\r\n}\r\n","\r\n<main #GridContainer>\r\n    <fx-row *ngIf=\"transactionRecords?.length > 0; else noTransactions\" [isLabel]=\"true\"\r\n            [backgroundColorClass]=\"'transparent-background'\">\r\n        <section col-start\r\n                 class=\"fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n            <mat-label class=\"fx-flex-auto-shrink-more unlimited-flex-vehicle-transaction-date\">\r\n                VEHICLE / {{showPostedDate ? 'POSTED DATE' : 'TRANSACTION DATE'}}\r\n            </mat-label>\r\n            <mat-label class=\"fx-flex-auto-shrink-more limited-flex-transaction-date\">\r\n                {{showPostedDate ? 'POSTED DATE' : 'TRANSACTION DATE'}}\r\n            </mat-label>\r\n            <mat-label class=\"fx-flex-auto-shrink-more limited-flex-license-plate\">LIC. PLATE</mat-label>\r\n            <mat-label class=\"fx-flex-auto-shrink-more limited-flex-nickname\">NICKNAME</mat-label>\r\n            <mat-label class=\"fx-flex-auto-grow-more unlimited-flex-location\">LOCATION</mat-label>\r\n            <mat-label class=\"fx-flex-auto-shrink-more limited-flex-description\">DESCRIPTION</mat-label>\r\n        </section>\r\n        <section col-end\r\n                 class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n            <mat-label class=\"fx-flex-auto limited-flex-end-amount\">AMOUNT</mat-label>\r\n        </section>\r\n    </fx-row>\r\n    <ng-template #noTransactions>\r\n        <section *ngIf=\"!isLargeAcount\" fxLayout=\"column\"\r\n                 fxLayoutAlign=\"center center\">\r\n\r\n            <mat-icon class=\"noData\" svgIcon=\"bar-chart-icon\"></mat-icon>\r\n\r\n            <span class=\"rowItem\">{{cmsContent.NO_TRANSACTIONS}}</span>\r\n        </section>\r\n        <section *ngIf=\"isLargeAcount\" fxLayout=\"column\"\r\n                 fxLayoutAlign=\"center center\">\r\n            <span class=\"rowItem\">{{cmsContent.LARGE_ACCOUNT}}</span>\r\n        </section>\r\n    </ng-template>\r\n\r\n    <div name=\"newRow\" *ngFor=\"let record of transactionRecords; first as isFirst\">\r\n        <div [ngClass]=\"{'table-space': !isFirst}\"\r\n             [ngClass.lt-md]=\"{'table-space': !isFirst, 'lt-md': true}\">\r\n            <div>\r\n                <fx-row class=\"clickable\"\r\n                        (click)=\"openTransactionRecordDetailsModal(record)\">\r\n\r\n                    <section name=\"transaction-row\" col-start\r\n                             class=\"fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n\r\n                        <div class=\"unlimited-flex-vehicle-transaction-date\">\r\n                            <div>{{record.licenseStateAndPlate}}</div>\r\n                            <div translation-skip>\r\n                                {{(showPostedDate ? record.postedDate : record.trxnDate) | dateWithTimeZone: 'dateTime5'}}\r\n                            </div>\r\n                        </div>\r\n                        <div attr.name=\"{{getDateHeader()}}\" translation-skip class=\"limited-flex-transaction-date\">\r\n                            {{(showPostedDate ? record.postedDate : record.trxnDate) | dateWithTimeZone: 'dateTime5'}}\r\n                        </div>\r\n                        <div name=\"lic. plate\" class=\"limited-flex-license-plate\">\r\n                            {{record.licenseStateAndPlate}}\r\n                        </div>\r\n                        <div name=\"nickname\" class=\"limited-flex-nickname\">\r\n                            {{record.vehicleNickName}}\r\n                        </div>\r\n                        <div name=\"location\" class=\"unlimited-flex-location\">\r\n                            <a>\r\n                                <div class=\"fx-flex-none u-spacing--widthFill font-size-location\">\r\n                                    <agency-and-location-link [record]=\"record\" [showLocationLink]=\"showLocationLink\"></agency-and-location-link>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                        <div name=\"description\" class=\"limited-flex-description\">\r\n                            {{record.transType}}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section name=\"amount\" col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center amount-adjustment\">\r\n                        <div translation-skip class=\"fx-flex-auto limited-flex-end-amount\">{{record.amount | currency: 'USD'}}</div>\r\n                        <div class=\"fx-flex-none glyphicon glyphicon-chevron-right chevron-color chevron-adjustment\"></div>\r\n                    </section>\r\n                </fx-row>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</main>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { WebApisService } from 'accountActivity/services';\r\n\r\n\r\n@Component({\r\n    selector: 'year-transition-dropdown',\r\n    templateUrl: './yearTransitionDropdown.html',\r\n    styleUrls: ['./yearTransitionDropdown.less']\r\n})\r\nexport class YearTransitionDropdownComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    @Input() yearTransitionData: string[];\r\n    @Output() yearTransitionChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    public selectedYear: string;\r\n\r\n    ngOnInit() {\r\n        this.selectedYear = this.yearTransitionData[0];\r\n    }\r\n\r\n    public updateValue(): void {\r\n        this.yearTransitionChange.emit(this.selectedYear);\r\n    }\r\n\r\n\r\n}\r\n","<main>\r\n    <mat-select id=\"yeartransition\"\r\n                name=\"yeartransition\"\r\n                [(ngModel)]='selectedYear'\r\n                (selectionChange)=\"updateValue()\"\r\n                [disableOptionCentering]=\"true\"\r\n                style=\"width:322px;\">\r\n        <mat-option *ngFor=\"let yearTransition of yearTransitionData; index as indexOfData;\"\r\n                    [value]=\"yearTransition\">\r\n            {{yearTransition}}\r\n        </mat-option>\r\n    </mat-select>\r\n</main>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { stateNames as accountActivityStates } from 'accountActivity/constants';\r\nimport { FrameComponent } from 'accountActivity/frame/frame.component';\r\nimport { GetYearlySummaryInfoRequest, GetYearlySummaryInfoResponse } from 'accountActivity/interfaces';\r\nimport { AccountActivityService, WebApisService } from 'accountActivity/services';\r\nimport { CurrentUser, CurrentUserService, DownloadService } from 'common/services';\r\nimport { isObject, orderBy } from 'lodash';\r\nimport { ResponseErrorService } from 'common/services';\r\nimport { ENVIRON_CONFIG } from 'common/upgrades';\r\nimport { Inject } from '@angular/core';\r\nimport { Tab } from '../tabs/tabs.component';\r\n\r\ninterface ICmsContent {\r\n    [key: string]: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'yearly',\r\n    templateUrl: './yearly.html',\r\n    styleUrls: ['./yearly.less']\r\n})\r\nexport class YearlyComponent implements OnInit {\r\n    @Input() cmsContent: ICmsContent;\r\n\r\n    constructor(\r\n        public parent: FrameComponent,\r\n        private accountActivityService: AccountActivityService,\r\n        private webApisService: WebApisService,\r\n        private currentUserService: CurrentUserService,\r\n        private responseErrorService: ResponseErrorService,\r\n        @Inject(ENVIRON_CONFIG) public environmentConfig,\r\n    ) { }\r\n\r\n    public selectedValue: number;\r\n    public yearTransitionData: string[] = [];\r\n    public selectedYear: number;\r\n    public showStatementYears: boolean;\r\n    public showStatement: boolean;\r\n    public setupShowStatement: boolean;\r\n    public showYearData: boolean;\r\n    public yearlySummaryData = {} as GetYearlySummaryInfoResponse;\r\n    public currentUser: CurrentUser;\r\n    public isCurrentUserNotLargeAccount: any;\r\n\r\n    onYearSelectionChanged(selection: number) {\r\n        this.selectedValue = selection;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.parent.selectedState = Tab.yearlySummary;\r\n\r\n        this.showStatement = true;\r\n        this.currentUser = this.currentUserService.getCurrentUser();\r\n        const yearSetup = await this.webApisService.setupYearlyPage();\r\n\r\n        if (yearSetup && yearSetup.dates && yearSetup.dates.length > 0) {\r\n            this.yearTransitionData = yearSetup.dates;\r\n            this.selectedYear = parseInt(yearSetup.dates[0], 10);\r\n            this.showStatementYears = true;\r\n            await this.getYearlySummaryInfoData(this.selectedYear);\r\n            this.showStatementYears = true;\r\n        } else {\r\n            this.showStatementYears = false;\r\n            this.showStatement = false;\r\n        }\r\n        this.setupShowStatement = true;\r\n    }\r\n\r\n    public async getYearlySummaryInfoData(year: number) {\r\n        this.selectedYear = this.selectedValue ? this.selectedValue : this.selectedYear;\r\n        const request: GetYearlySummaryInfoRequest = {\r\n            year: this.selectedYear\r\n        };\r\n        this.isCurrentUserNotLargeAccount = isObject(this.currentUser) &&\r\n            (!this.currentUser.largeAccountFlag && !this.currentUser.extraLargeAccountFlag);\r\n\r\n        if (this.isCurrentUserNotLargeAccount && this.environmentConfig.heedLargeAccountFlag) {\r\n\r\n            const response = await this.webApisService.getYearlySummary(request);\r\n\r\n            this.showStatement = (Array.isArray(response.tagSummary) && response.tagSummary.length > 0) ||\r\n                (Array.isArray(response.acctSummary) && response.acctSummary.length > 0) ||\r\n                (Array.isArray(response.errors) && response.errors.length === 0);\r\n\r\n            this.yearlySummaryData = {\r\n                tagSummary: orderBy(response?.tagSummary, (x: any) => x.description, ['desc']),\r\n                acctSummary: orderBy(response?.acctSummary, (x: any) => x.description === 'Ending Balance', ['asc'])\r\n            } as GetYearlySummaryInfoResponse;\r\n\r\n            this.showYearData = Array.isArray(response?.tagSummary) && Array.isArray(response?.acctSummary);\r\n        }\r\n        else {\r\n            this.responseErrorService.displayToast(this.cmsContent.ShortDescription, 'Warning', false);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","\r\n<card-dash-container class=\"display\" [hasMargin]=\"false\">\r\n    <header fxLayout=\"column\">\r\n        <h2>Yearly Summary</h2>\r\n    </header>\r\n    <section fxLayout=\"row wrap\" fxLayoutAlign=\"start end\" fxLayoutGap=\"8px\">\r\n\r\n        <section *ngIf=\"showStatementYears\"\r\n                 fxFlex=\"none\"\r\n                 ngClass.lt-md=\"mobileDatePicker\">\r\n            <mat-label>\r\n                SELECT SUMMARY\r\n            </mat-label>\r\n            <year-transition-dropdown [yearTransitionData]=\"yearTransitionData\"\r\n                                      (yearTransitionChange)=\"onYearSelectionChanged($event)\"\r\n                                      ngClass.lt-md=\"standardStateDropdown\">\r\n            </year-transition-dropdown>\r\n        </section>\r\n\r\n        <div *ngIf=\"showStatementYears\"\r\n             fxFlex=\"none\"\r\n             ngClass.lt-md=\"u-spacing--widthFill u-spacing__buttonToField--marginTop\"\r\n             ngClass.md=\"buttonStyle\">\r\n            <button (click)=\"getYearlySummaryInfoData(this.selectedYear)\"\r\n                    ngClass.lt-md=\"u-spacing--widthFill\">\r\n                SEARCH\r\n            </button>\r\n        </div>\r\n    </section>\r\n    <section *ngIf=\"!showStatement; else withData\" class=\"u-spacing__fieldToSection--marginTop\">\r\n        <div *ngIf=\"!showStatementYears && !currentUser.largeAccountFlag\">\r\n            <mat-icon class=\"no-statements\" svgIcon=\"alert\"></mat-icon>\r\n            {{cmsContent.NO_DATA}}\r\n        </div>\r\n    </section>\r\n    <ng-template #withData >\r\n        <div *ngIf=\"showStatementYears && currentUser.largeAccountFlag\" class=\"u-spacing__fieldToSection--marginTop\">\r\n            <mat-icon class=\"no-statements\" svgIcon=\"alert\"></mat-icon>\r\n            {{cmsContent.LARGE_ACCOUNT}}\r\n        </div>\r\n    </ng-template>\r\n</card-dash-container>\r\n\r\n<card-dash-container *ngIf=\"showStatement && setupShowStatement\" class=\"display cardToCardSpacer\" [hasMargin]=\"false\">\r\n    <div fxLayout=\"row wrap\">\r\n        <yearly-summary-info #appYearlySummary\r\n                             [year]=\"this.selectedYear\"\r\n                             [cmsContent]=\"cmsContent\"\r\n                             [eztagSummary]=\"yearlySummaryData.tagSummary\"\r\n                             [accountSummary]=\"yearlySummaryData.acctSummary\"></yearly-summary-info>\r\n    </div>\r\n</card-dash-container>\r\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n    AccountSummaryInfo,\r\n    EZTAGSummaryInfo,\r\n    GetYearlySummaryInfoRequest,\r\n    GetYearlySummaryInfoResponse\r\n} from 'accountActivity/interfaces';\r\nimport { WebApisService } from 'accountActivity/services';\r\nimport { ENVIRON_CONFIG } from 'common/module';\r\nimport { DownloadService } from 'common/services';\r\nimport { orderBy } from 'lodash';\r\n\r\n\r\ninterface CmsContent {\r\n    Title: string;\r\n    ShortDescription: string;\r\n    LongDescription: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'yearly-summary-info',\r\n    templateUrl: './yearlySummaryInfo.html',\r\n    styleUrls: ['./yearlySummaryInfo.less']\r\n})\r\nexport class YearlySummaryInfoComponent {\r\n\r\n    @Input() year: string;\r\n    @Input() cmsContent: CmsContent;\r\n\r\n    @Input() eztagSummary: EZTAGSummaryInfo[];\r\n    @Input() accountSummary: AccountSummaryInfo[];\r\n\r\n    public reportDownloading = false;\r\n\r\n    constructor(\r\n        private downloadService: DownloadService,\r\n        @Inject(ENVIRON_CONFIG) public environmentConfig\r\n    ) { }\r\n\r\n    public async getYearlySummaryPdf() {\r\n        const url = '/api/sessions/Pdf/GetYearlyPdfReport/';\r\n        await this.downloadReport(url, true);\r\n    };\r\n\r\n    public async getYearlySummaryExcel() {\r\n        const url = '/api/sessions/Pdf/GetYearlyExcelReport/';\r\n        await this.downloadReport(url, false);\r\n    };\r\n\r\n    private async downloadReport(url: string, isPdf: boolean) {\r\n        this.reportDownloading = true;\r\n\r\n        await this.downloadService.download(url, isPdf, {\r\n            date: `01/01/${this.year}`\r\n        });\r\n\r\n        this.reportDownloading = false;\r\n    }\r\n}\r\n\r\n\r\n","<main class=\"display\">\r\n    <section class=\"u-spacing__sectionToSection--marginBottom\">\r\n        <h2 style=\"padding-top:10px;\">\r\n            {{year}} Summary\r\n        </h2>\r\n        <mat-divider class=\"u-spacing__divider--marginTopBottom\"></mat-divider>\r\n        <section fxLayout=\"row wrap\" fxLayoutGap=\"8px\">\r\n            <div [innerHtml]=\"cmsContent.LongDescription\"></div>\r\n            <a *ngIf=\"!environmentConfig.hidePdfAccountActivity\"\r\n               fxFlex=\"none\"\r\n               (click)=\"getYearlySummaryPdf()\"\r\n               class=\"download-link\"\r\n               [ngClass]=\"{'disabled': reportDownloading}\">\r\n                <img src=\"/Content/icons/pdf.gif\" class=\"download-icon\" />PDF Statement\r\n            </a>\r\n            <a *ngIf=\"!environmentConfig.hideExcelAccountActivity\"\r\n               fxFlex=\"none\"\r\n               (click)=\"getYearlySummaryExcel()\"\r\n               class=\"download-link\"\r\n               [ngClass]=\"{'disabled': reportDownloading}\">\r\n                <img src=\"/Content/icons/excel.gif\" class=\"download-icon\" />Excel Statement\r\n            </a>\r\n\r\n        </section>\r\n        <h3 *ngIf=\"eztagSummary\" class=\"u-spacing__sectionToSection\" style=\"padding-top:30px; margin-bottom:16px\">EZ TAG Summary</h3>\r\n\r\n        <div *ngIf=\"eztagSummary\" class=\"tabble-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">TAG ID/</mat-label>\r\n                    <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">DESCRIPTION</mat-label>\r\n\r\n                </section>\r\n\r\n                <section fxHide fxShow.lt-md col-end\r\n                         class=\"gridish-title fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label fxFlex=\"1 1 10em\">QTY</mat-label>\r\n                    <mat-label fxFlex=\"1 1 auto\">AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish-title fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">TAG ID</mat-label>\r\n                    <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">DESCRIPTION</mat-label>\r\n                    <mat-label class=\"fx-flex-auto-grow-more unlimited-flex\">QUANTITY</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end\r\n                         class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label class=\"fx-flex-auto limited-flex-end\">AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div *ngFor=\"let eztagS of eztagSummary; first as isFirst; last as isLast\" style=\"width:100%;\">\r\n                <div ngClass=\"extended-row\"\r\n                     [ngClass.lt-md]=\"{'extended-row': false}\"\r\n                     style=\"margin-top:2px;\">\r\n                    <fx-row [isTop]=\"eztagSummary.length > 1 && isFirst\"\r\n                            [isBottom]=\"eztagSummary.length > 1 && isLast\"\r\n                            [isInner]=\"!isFirst && !isLast\">\r\n\r\n\r\n                        <section fxHide fxShow.lt-md col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                            <div *ngIf=\"eztagS.tagId\" class=\"fx-flex-auto-shrink-more limited-flex\">{{eztagS.tagId}}</div>\r\n                            <div *ngIf=\"!eztagS.tagId\" class=\"fx-flex-auto-shrink-more limited-flex\"><div style=\"margin:20px;\"></div></div>\r\n                            <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{eztagS.description}}</div>\r\n                        </section>\r\n\r\n                        <section fxHide fxShow.lt-md col-end\r\n                                 class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                            <div fxFlex=\"1 1 5em\" class=\"fx-flex-auto-grow-more unlimited-flex\">{{eztagS.quantity ? eztagS.quantity : ''}}</div>\r\n                            <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\">{{eztagS.amount ? (eztagS.amount | currency) : ''}}</div>\r\n                        </section>\r\n\r\n                        <section fxShow fxHide.lt-md col-start\r\n                                 class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                            <div *ngIf=\"eztagS.tagId\" class=\"fx-flex-auto-shrink-more limited-flex\">{{eztagS.tagId}}</div>\r\n                            <div *ngIf=\"!eztagS.tagId\" class=\"fx-flex-auto-shrink-more limited-flex\"><div style=\"margin:20px;\"></div></div>\r\n                            <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{eztagS.description}}</div>\r\n                            <div class=\"fx-flex-auto-grow-more unlimited-flex\">{{eztagS.quantity ? eztagS.quantity : ''}}</div>\r\n                        </section>\r\n                        <section fxShow fxHide.lt-md col-end\r\n                                 class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                            <div translation-skip class=\"fx-flex-auto limited-flex-end\">{{eztagS.amount ? (eztagS.amount | currency) : ''}}</div>\r\n                        </section>\r\n\r\n                    </fx-row>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </section>\r\n\r\n\r\n    <section>\r\n        <h3 *ngIf=\"accountSummary\" class=\"u-spacing__sectionToSection\" style= \"margin-bottom:16px\">Account Summary</h3>\r\n        <div *ngIf=\"accountSummary\" class=\"tabble-padding\">\r\n            <row-container [rowType]=\"'transparent'\" [isLabel]=\"true\">\r\n                <section fxHide fxShow.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label fxFlex=\"fx-flex-auto-shrink-more limited-flex\" fxShow.lt-md>DESCRIPTION</mat-label>\r\n\r\n                </section>\r\n                <section fxHide fxShow.lt-md col-end\r\n                         class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label fxFlex=\"1 1 10em\">QTY</mat-label>\r\n                    <mat-label fxFlex=\"1 1 auto\" fxShow.lt-md>AMOUNT</mat-label>\r\n                </section>\r\n\r\n                <section fxShow fxHide.lt-md col-start\r\n                         class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                    <mat-label fxFlex=\"67\" fxShow.lt-md>DESCRIPTION</mat-label>\r\n                    <mat-label class=\"fx-flex-auto-shrink-more limited-flex\">QUANTITY</mat-label>\r\n                </section>\r\n                <section fxShow fxHide.lt-md col-end\r\n                         class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                    <mat-label class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>AMOUNT</mat-label>\r\n                </section>\r\n            </row-container>\r\n\r\n            <div class=\"u-spacing--widthFill\" fxLayout=\"column\" fxLayoutGap=\"2px\">\r\n\r\n                <row-container *ngFor=\"let accountS of accountSummary; first as isFirst; last as isLast \"\r\n                               [isTop]=\"accountSummary.length > 1 && isFirst\"\r\n                               [isBottom]=\"accountSummary.length > 1 && isLast\"\r\n                               [isInner]=\"!isFirst && !isLast\"\r\n                               [rowType]=\"isLast ? 'emphasis' : 'body'\" [ngClass.lt-md]=\"{'extended-row': false}\">\r\n\r\n                    <section fxHide fxShow.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <div fxFlex=\"67\" fxShow.lt-md>{{accountS.description}}</div>\r\n\r\n                    </section>\r\n                    <section fxHide fxShow.lt-md col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <div fxFlex=\"1 1 5em\" class=\"fx-flex-auto-shrink-more\">{{accountS.quantity ? accountS.quantity : ''}}</div>\r\n                        <div fxFlex=\"1 1 4em\" class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>{{accountS.amount ? (accountS.amount | currency) : ''}}</div>\r\n                    </section>\r\n\r\n                    <section fxShow fxHide.lt-md col-start\r\n                             class=\"gridish fx-flex-auto fx-layout-row fx-layout-align-start-center\">\r\n                        <div fxFlex=\"67\" fxShow.lt-md>{{accountS.description}}</div>\r\n                        <div class=\"fx-flex-auto-shrink-more limited-flex\">{{accountS.quantity ? accountS.quantity : ''}}</div>\r\n                    </section>\r\n                    <section fxShow fxHide.lt-md col-end\r\n                             class=\"fx-flex-none fx-layout-row fx-layout-align-end-center\">\r\n                        <div translation-skip class=\"fx-flex-auto limited-flex-end\" fxShow.lt-md>{{accountS.amount ? (accountS.amount | currency) : ''}}</div>\r\n                    </section>\r\n                </row-container>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </section>\r\n\r\n</main>\r\n\r\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, TemplateRef, Directive, Inject, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n        return this._isOpen && this.showPanel;\n    }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() {\n        return this._autoActiveFirstOption;\n    }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteBase, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatAutocompleteBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", panelWidth: \"panelWidth\", classList: [\"class\", \"classList\"] }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true, static: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }, { type: i1.Platform }];\n    }, propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], displayWith: [{\n                type: Input\n            }], autoActiveFirstOption: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], optionSelected: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], optionActivated: [{\n                type: Output\n            }], classList: [{\n                type: Input,\n                args: ['class']\n            }] } });\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }] } });\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true,\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of changes to the selection state of the autocomplete options. */\n        this.optionSelections = defer(() => {\n            const options = this.autocomplete ? this.autocomplete.options : null;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef\n            ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached))\n            : of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => (event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return (this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                // Normally focus moves inside `mousedown` so this condition will almost always be\n                // true. Its main purpose is to handle the case where the input is focused from an\n                // outside click which propagates up to the `body` listener within the same sequence\n                // and causes the panel to close immediately (see #3106).\n                this._document.activeElement !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                !!this._overlayRef &&\n                !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve().then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifierKey(event)) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event)));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith\n            ? this.autocomplete.displayWith(value)\n            : value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        const source = event && event.source;\n        if (source) {\n            this._clearPreviousSelectedOption(source);\n            this._setTriggerValue(source.value);\n            this._onChange(source.value);\n            this.autocomplete._emitSelectEvent(source);\n            this._element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n                id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId(),\n            });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._closeKeyEventStream.next();\n                    this._resetActiveItem();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass },\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: MAT_AUTOCOMPLETE_SCROLL_STRATEGY }, { token: i2$1.Directionality, optional: true }, { token: MAT_FORM_FIELD, host: true, optional: true }, { token: DOCUMENT, optional: true }, { token: i3.ViewportRuler }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatAutocompleteTriggerBase, inputs: { autocomplete: [\"matAutocomplete\", \"autocomplete\"], position: [\"matAutocompletePosition\", \"position\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n                    }] }, { type: i2$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }, {\n                        type: Host\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { autocomplete: [{\n                type: Input,\n                args: ['matAutocomplete']\n            }], position: [{\n                type: Input,\n                args: ['matAutocompletePosition']\n            }], connectedTo: [{\n                type: Input,\n                args: ['matAutocompleteConnectedTo']\n            }], autocompleteAttribute: [{\n                type: Input,\n                args: ['autocomplete']\n            }], autocompleteDisabled: [{\n                type: Input,\n                args: ['matAutocompleteDisabled']\n            }] } });\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteOriginBase, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteOriginBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatAutocompleteOriginBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatAutocompleteOriginBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteModule, declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule], exports: [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\nMatAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[OverlayModule, MatOptionModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n"],"names":["ENVIRON_CONFIG","isObject","orderBy","remove","Tab","i0","ctx_r0","ctx_r8","ctx_r14","ctx_r16","ctx_r3","MonthlyInvoicesComponent","constructor","parent","webApi","downloadService","accountActivityService","datePipe","environmentConfig","ngOnInit","selectedState","invoices","showInvoiceMonths","assignCmsContent","invoiceMonthsResponse","setupInvoicesPage","invoiceDates","length","map","monthYear","Date","toISOString","selectedMonth","getInvoices","cmsElements","cmsContent","Children","cmsHeaderText","find","x","Title","LongDescription","trim","cmsDownloadInvoiceText","cmsOutstandingInvoiceText","selectedMonthParameter","transform","response","getMonthlyInvoice","invoiceDate","isResponseValid","Array","isArray","errors","invoiceDetails","forEach","detail","licenseStateAndPlate","vehicleNickName","customKey","indexOf","invoiceResponse","currentMonth","showInvoices","getMonthlyInvoicePdf","url","downloadReport","getMonthlyInvoiceExcel","isPdf","reportDownloading","download","invoiceNum","invoiceNumber","selectors","inputs","decls","vars","consts","template","ctx_r18","i_r22","last_r23","i_r26","last_r27","MonthlyComponent","currentUserService","statements","showStatement","currentUser","getCurrentUser","statementsData","setUpStatementsPage","dates","monthSearch","showStatementMonths","getMonthlyStatement","date","isCurrentUserNotLargeAccount","largeAccountFlag","extraLargeAccountFlag","heedLargeAccountFlag","searchedMonth","tagSummaries","acctSummary","ezTagSummaries","accountTagSummaries","totalAmount","acctTagSummary","description","amount","getTagId","rowNumber","tagId","getMonthlyStatementPdf","getMonthlyStatementExcel","isLast_r5","ctx_r1","isLast_r8","ctx_r2","isLast_r11","ReceiptDetailsComponent","dialogRef","getInfoToDisplay","data","currentUserData","receiptDetails","accountTrans","depositTrans","paymentDetail","receiptDate","csrID","csrId","userAddress","address1","city","state","zipCode","zip","label1","label2","label3","getReceiptDetailPdf","transNum","transactionNumber","ctx","ctx_r9","ctx_r5","ReceiptsComponent","webApisService","dialogService","toasterService","receipts","minDate","setDate","getDate","accountActivityMaxDaysInSearch","maxDate","formattedDateFrom","dateFrom","formattedDateTo","dateTo","request","fmonth","substring","fday","fyear","tmonth","tday","tyear","setupReceipts","receiptsHeaders","receiptHeaders","headersCounter","infoSearch","showNoData","openDetailsReceipt","value","receiptDetailsRequest","receiptDetailsResponse","removeAll","openSliderFilled","title","valueFrom","valueTo","autocorrectDateTo","forceDateWithinMinMaxDates","getTime","accountActivityDefaultDaysInSearch","autocorrectDateFrom","dateRef","setTime","_r0","_r1","_r3","FormControl","cmsIds","stateNames","accountActivityStates","startWith","SearchTransactionsComponent","cmsResolverService","matDialogRef","onSelectionChanged","_selection","selection","dateRangeType","currentDateRangeType","setDefaultDateAndCms","getDropdownData","close","resolve","ItemId","SearchTransactions","cmsShortDescription","ShortDescription","searchRequest","transaction","transactionDisplay","text","vehicle","licensePlate","vehicleNickNameType","go","accountActivityTransactions","searchCriteria","reload","clearAll","searchSetup","setupSearchTransactions","searchTransactionDropdownData","transactionListItems","searchVehicleDropdownData","filteredSearchVehicleDropdownData","control","valueChanges","pipe","filter","toLowerCase","includes","_r4","FilterDataManager","accntActivityService","setFiltersData","mapRequest","getDefaultFromDate","getTransactionFilterData","getVehicleFilterData","getDateSortFilterDate","factory","DateRange","DateRangeFilterComponent","TransactionsFilterComponent","VehiclesFilterComponent","SortedByDateComponent","FilterName","SortFilterName","SortOder","FilterService","getFilters","fromDate","toDate","filterCategories","filteredBy","defaultVal","name","Transaction","order","type","component","Vehicle","sortedBy","sortOrder","Descending","EventType","TransactionsRecordsManager","getRecords","getDefaultLatestActivitySearch","getTransactionsRecords","sortDates","defaultDateRangeTypeSortOrder","filterRecords","event","updateRequest","eventType","SortFilter","sortOder","searchAccountActivity","enrichResponse","agencyWebsiteLinksDictionary","createWebsiteLinksDictionary","agencyPhoneNumberDictionary","createAgencyPhoneNumberDictionary","agencyFullNameDictionary","createAgencyFullNameDictionary","records","record","agencyWebsite","getDictionaryValueForAgency","agencyName","agencyPhoneNumber","agencyFullName","showDateLogic","toUpperCase","showPostedDate","dateRange","start","end","sort","a","b","trxnDate","postedDate","_a","transactions","_b","cloneDeep","WebApisService","httpService","responseErrorService","baseUrl","setupYearlyPage","get","isErrorFree","getYearlySummary","post","displayAlertsFromResponse","locationCoordinates","responseHasErrors","ctx_r11","ctx_r13","ctx_r15","ctx_r17","TabsComponent","showTransactionsTab","showTransactions","showStatementsTab","showStatements","showYearlySummaryTab","showYearlySummary","showReceiptsTab","showReceipts","showInvoicesTab","transactionsSelected","statementsSelected","accountActivityStatements","yearlySummarySelected","yearlySummary","accountActivityYearly","receiptsSelected","accountActivityReceipts","invoicesSelected","accountActivityInvoices","cms","filterChangeService","filterService","createDate","unsubscribe","listenToFilters","subscribe","selectedDateRange","filters","defaultfilter","dayOffset","ngOnDestroy","notify","eventInfo","Filter","notifyEvent","GenericCmsModalComponent","TransactionDetailsModalComponent","loggingService","transactionRecord","hasLocationCoordinates","locationNameWithoutAgencyOrPhone","logMessage","laneName","googleMapSrc","openAgencyDetailsModal","AcceptBtn","PrimaryContent","openGenericModal","TransactionsComponent","initialize","eventsList","push","updateResult","setDefaultFilterValues","setSearchTransactionsDefaultReq","setResult","setDefaultDateRangeTypeSortOrder","inititalizeComplete","transactionFilterVal","getDefaultFilterValue","vehicleFilterVal","dateRangeFilterVal","sortDateFilterVal","getDefaultSortFilterValue","dateRangeTye","setDefaultLatestActivitySearch","result","parseDateRange","defaultSortOrder","sortFilters","filteredByList","sortedByList","TransactionsFilterCriteriaComponent","filterDataManager","features","ctx_r7","ctx_r4","TransactionsRecordsComponent","storefrontUtilityService","transactionsRecordsManager","paginationConfig","PageSize","LimitToStart","searchTransactions","parseRecords","totalRecordsCount","filteredTotal","showLocationLink","hideLocationLink","isRunningAsKiosk","listOfAllRecords","paginatedRecords","slice","defaultPageSize","mobileLoadedRecords","showNoDataIcon","updateTransactionsTable","pageIndex","pageSize","mobileLoadMore","concat","getTransactionsPdf","getTransactionsExcel","WindowRef","CopyToExcelService","clone","TransactionsTableComponent","sanitizer","window","copyToExcelService","openTransactionRecordDetailsModal","decorateWithLocationCoordinates","getMapSrcFor","getLocationNameWithoutAgencyOrPhone","bypassSecurityTrustResourceUrl","latitude","longitude","recordCopy","coordinates","ngAfterViewInit","gridElement","gridContainer","nativeElement","addEventListener","e","copyToExcelTransctions","getSelection","toString","split","filterData","d","range","getRangeAt","startContainer","startEl","objRows","newStartEl","textContent","parentElement","nextElementSibling","childNodes","firstChild","nodeName","parentEl","hasAttribute","getAttribute","divNewrow","nextDivNewrow","obj","key","nextElement","i","key1","newDivNewrow","newFxRow","getElementsByTagName","section","trnxRow","children","console","log","cols","newTbl","getDataForExcel","clipboardData","setData","preventDefault","getDateHeader","viewQuery","_r2","ctx_r6","YearlyComponent","onYearSelectionChanged","selectedValue","yearSetup","yearTransitionData","selectedYear","parseInt","showStatementYears","getYearlySummaryInfoData","setupShowStatement","year","tagSummary","yearlySummaryData","showYearData","displayToast","ctx_r10","ctx_r20","isLast_r23","YearlySummaryInfoComponent","getYearlySummaryPdf","getYearlySummaryExcel","eztagSummary","accountSummary","ActiveDescendantKeyManager","coerceBooleanProperty","coerceStringArray","InjectionToken","EventEmitter","TemplateRef","Directive","Inject","ViewChild","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Optional","Host","NgModule","mixinDisableRipple","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOption","MatOptionSelectionChange","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MatOptionModule","MatCommonModule","Subscription","Subject","defer","merge","of","fromEvent","i1","_getEventTarget","i2","DOCUMENT","CommonModule","i1$1","Overlay","OverlayConfig","OverlayModule","i3","CdkScrollableModule","ESCAPE","hasModifierKey","ENTER","UP_ARROW","DOWN_ARROW","TAB","TemplatePortal","NG_VALUE_ACCESSOR","i4","MAT_FORM_FIELD","switchMap","take","tap","delay","i2$1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_classList","id","inertGroups","SAFARI","_autoActiveFirstOption","isOpen","classList","reduce","className","_setVisibilityClasses","ngAfterContentInit","_keyManager","options","withWrap","change","index","emit","toArray","_setVisibility","_setScrollTop","scrollTop","panel","_getScrollTop","markForCheck","_emitSelectEvent","_getPanelAriaLabelledby","labelId","ariaLabel","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","ChangeDetectorRef","ElementRef","Platform","ɵdir","undefined","decorators","args","static","panelWidth","MatAutocomplete","arguments","ɵcmp","provide","useExisting","NgClass","selector","encapsulation","None","changeDetection","OnPush","exportAs","host","providers","styles","optionGroups","descendants","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","changes","onSelectionChange","onStable","_scrollStrategy","autocompleteDisabled","_getWindow","runOutsideAngular","ngOnChanges","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","openPanel","_attachOverlay","_floatLabel","closePanel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","panelClosingActions","tabOut","_getOutsideClickStream","detachments","activeOption","activeItem","clickTarget","formField","customOrigin","connectedTo","elementRef","contains","overlayElement","writeValue","Promise","then","_setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","_handleKeydown","keyCode","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","_scrollToOption","activeItemIndex","_handleInput","target","parseFloat","_previousValue","_handleFocus","shouldAnimate","floatLabel","_animateAndLockLabel","_subscribeToClosingActions","firstStable","optionChanges","reapplyLastPosition","wasOpen","_setValueAndClose","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","skip","selected","deselect","ngDevMode","overlayRef","_portal","getLabelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","element","readOnly","defaultView","labelCount","_getHostElement","newScrollPosition","offsetTop","offsetHeight","ViewContainerRef","NgZone","Directionality","ViewportRuler","MatFormField","_MatAutocompleteOriginBase","MatAutocompleteOrigin","MatAutocompleteModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///"}
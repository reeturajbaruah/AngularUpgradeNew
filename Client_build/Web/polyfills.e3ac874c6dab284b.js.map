{"version":3,"file":"polyfills.e3ac874c6dab284b.js","mappings":";;;;;;;;AAAA,oBAAoB;AACpB;;;;;;;;;;;;;;GAcG;AAEH;;GAEG;AAEH;;;;;;;;;;;;;;;;;;;;;;GAsBG;AAEH;;GAEG;AAEH,4DAA4D;AAC5D,iDAAiD;AACjD,uCAAuC;AACvC,uCAAuC;AACvC,wCAAwC;AACxC,oCAAoC;AACpC,kCAAkC;AAClC,8CAA8C;AAC9C,iDAAiD;AACjD,gDAAgD;AAChD,mDAAmD;AACnD,kDAAkD;AAClD,mDAAmD;AACnD,iDAAiD;AACjD,qDAAqD;AACrD,mDAAmD;AACnD,mDAAmD;AACnD,iDAAiD;AACjD,iDAAiD;AACjD,oDAAoD;AACpD,mDAAmD;AACnD,mDAAmD;AACnD,oCAAoC;AACpC,qCAAqC;AAErC,uGAAuG;AACvG,8DAA8D;AAC9D,0CAA0C;AAC1C,kEAAkE;AAClE,gFAAgF;AAChF,iDAAiD;AACjD,uFAAuF;AACvF,sFAAsF;AACtF,yFAAyF;AACzF,8EAA8E;AAC9E,0EAA0E;AAC1E,2DAA2D;AAC3D,uDAAuD;AACvD,uEAAuE;AACvE,2FAA2F;AAC3F,wCAAwC;AACxC,4CAA4C;AAC5C,oEAAoE;AACpE,mEAAmE;AACnE,qBAAqB;AACrB,gBAAgB;AAChB,uCAAuC;AACvC,uEAAuE;AACvE,wCAAwC;AACxC,gBAAgB;AAChB,YAAY;AACZ,qEAAqE;AACrE,SAAS;AACT,0EAA0E;AAC1E,2DAA2D;AAC3D,uEAAuE;AACvE,cAAc;AACd,oBAAoB;AACpB,gDAAgD;AAChD,QAAQ;AACR,4BAA4B;AAE5B,6FAA6F;AAC7F,2DAA2D;AAC3D,+BAA+B;AAC/B,uDAAuD;AACvD,6BAA6B;AAC7B,qDAAqD;AACrD,kCAAkC;AAClC,oEAAoE;AACpE,gBAAgB;AAEhB,sCAAsC;AAEtC,+DAA+D;AAC/D,0CAA0C;AAE1C,oFAAoF;AACpF,qDAAqD;AACrD,mEAAmE;AACnE,gBAAgB;AAEhB,wFAAwF;AACxF,4CAA4C;AAE5C,gCAAgC;AAChC,yBAAyB;AAEzB,0CAA0C;AAC1C,gCAAgC;AAChC,iDAAiD;AACjD,oDAAoD;AACpD,6FAA6F;AAC7F,8DAA8D;AAC9D,uCAAuC;AACvC,+DAA+D;AAC/D,qCAAqC;AACrC,oBAAoB;AACpB,yCAAyC;AACzC,uBAAuB;AACvB,gBAAgB;AAEhB,sCAAsC;AACtC,gCAAgC;AAChC,aAAa;AACb,8BAA8B;AAC9B,yBAAyB;AACzB,UAAU;AACV,IAAI;AACJ,mBAAmB","sources":["./src/polyfills.ts"],"sourcesContent":["/* eslint-disable */\r\n/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/**\r\n * By default, zone.js will patch all possible macroTask and DomEvents\r\n * user can disable parts of macroTask/DomEvents patch by setting following flags\r\n * because those flags need to be set before `zone.js` being loaded, and webpack\r\n * will put import in the top of bundle, so user need to create a separate file\r\n * in this directory (for example: zone-flags.ts), and put the following flags\r\n * into that file, and then add the following code before importing zone.js.\r\n * import './zone-flags.ts';\r\n *\r\n * The flags allowed in zone-flags.ts are listed here.\r\n *\r\n * The following flags will work for all browsers.\r\n *\r\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\r\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\r\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\r\n *\r\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\r\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\r\n *\r\n *  (window as any).__Zone_enable_cross_context_check = true;\r\n *\r\n */\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n//commented out imports are for thing that are now supported\r\n//by common browsers (IE is not longer supported)\r\n//import 'mdn-polyfills/Object.assign';\r\n//import 'mdn-polyfills/Object.create';\r\n//import 'mdn-polyfills/Object.entries';\r\n//import 'mdn-polyfills/Array.from';\r\n//import 'mdn-polyfills/Array.of';\r\n//import 'mdn-polyfills/Array.prototype.find';\r\n//import 'mdn-polyfills/Array.prototype.forEach';\r\n//import 'mdn-polyfills/Array.prototype.filter';\r\n//import 'mdn-polyfills/Array.prototype.findIndex';\r\n//import 'mdn-polyfills/Array.prototype.includes';\r\n//import 'mdn-polyfills/String.prototype.includes';\r\n//import 'mdn-polyfills/String.prototype.repeat';\r\n//import 'mdn-polyfills/String.prototype.startsWith';\r\n//import 'mdn-polyfills/String.prototype.endsWith';\r\n//import 'mdn-polyfills/String.prototype.padStart';\r\n//import 'mdn-polyfills/String.prototype.padEnd';\r\n//import 'mdn-polyfills/Function.prototype.bind';\r\n//import 'mdn-polyfills/NodeList.prototype.forEach';\r\n//import 'mdn-polyfills/Element.prototype.closest';\r\n//import 'mdn-polyfills/Element.prototype.matches';\r\n//import 'mdn-polyfills/MouseEvent';\r\n//import 'mdn-polyfills/CustomEvent';\r\n\r\n//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\r\n// if (!String.fromCodePoint) {(function(stringFromCharCode) {\r\n//     const fromCodePoint = function(_) {\r\n//         const codeUnits = []; let codeLen = 0; let result = '';\r\n//         for (let index = 0, len = arguments.length; index !== len; ++index) {\r\n//             let codePoint = +arguments[index];\r\n//             // correctly handles all cases including `NaN`, `-Infinity`, `+Infinity`\r\n//             // The surrounding `!(...)` is required to correctly handle `NaN` cases\r\n//             // The (codePoint>>>0) === codePoint clause handles decimals and negatives\r\n//             if (!(codePoint < 0x10FFFF && (codePoint >>> 0) === codePoint))\r\n//                 {throw RangeError('Invalid code point: ' + codePoint);}\r\n//             if (codePoint <= 0xFFFF) { // BMP code point\r\n//                 codeLen = codeUnits.push(codePoint);\r\n//             } else { // Astral code point; split in surrogate halves\r\n//                 // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n//                 codePoint -= 0x10000;\r\n//                 codeLen = codeUnits.push(\r\n//                     (codePoint >> 10) + 0xD800,  // highSurrogate\r\n//                     (codePoint % 0x400) + 0xDC00 // lowSurrogate\r\n//                 );\r\n//             }\r\n//             if (codeLen >= 0x3fff) {\r\n//                 result += stringFromCharCode.apply(null, codeUnits);\r\n//                 codeUnits.length = 0;\r\n//             }\r\n//         }\r\n//         return result + stringFromCharCode.apply(null, codeUnits);\r\n//     };\r\n//     try { // IE 8 only supports `Object.defineProperty` on DOM elements\r\n//         Object.defineProperty(String, 'fromCodePoint', {\r\n//             value: fromCodePoint, configurable: true, writable: true\r\n//         });\r\n//     } catch (e) {\r\n//         String.fromCodePoint = fromCodePoint;\r\n//     }\r\n// }(String.fromCharCode));}\r\n\r\n//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\r\n// if (!Array.prototype.find) {\r\n//     Object.defineProperty(Array.prototype, 'find', {\r\n//         value(predicate) {\r\n//             // 1. Let O be ? ToObject(this value).\r\n//             if (this == null) {\r\n//                 throw TypeError('\"this\" is null or not defined');\r\n//             }\r\n\r\n//             const o = Object(this);\r\n\r\n//             // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n//             const len = o.length >>> 0;\r\n\r\n//             // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n//             if (typeof predicate !== 'function') {\r\n//                 throw TypeError('predicate must be a function');\r\n//             }\r\n\r\n//             // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n//             const thisArg = arguments[1];\r\n\r\n//             // 5. Let k be 0.\r\n//             let k = 0;\r\n\r\n//             // 6. Repeat, while k < len\r\n//             while (k < len) {\r\n//                 // a. Let Pk be ! ToString(k).\r\n//                 // b. Let kValue be ? Get(O, Pk).\r\n//                 // c. Let testResult be ToBoolean(? Call(predicate, T, � kValue, k, O �)).\r\n//                 // d. If testResult is true, return kValue.\r\n//                 const kValue = o[k];\r\n//                 if (predicate.call(thisArg, kValue, k, o)) {\r\n//                     return kValue;\r\n//                 }\r\n//                 // e. Increase k by 1.\r\n//                 k++;\r\n//             }\r\n\r\n//             // 7. Return undefined.\r\n//             return undefined;\r\n//         },\r\n//         configurable: true,\r\n//         writable: true\r\n//     });\r\n// }\r\n/* tslint:enable */\r\n"],"names":[],"sourceRoot":"webpack:///"}
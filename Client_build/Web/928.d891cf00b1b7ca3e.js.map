{"version":3,"file":"928.d891cf00b1b7ca3e.js","mappings":"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","sources":["./src/news/components/news-article/news-article.component.ts","./src/news/components/news-article/news-article.component.html","./src/news/components/news-filters/news-filters.component.ts","./src/news/components/news-filters/news-filters.component.html","./src/news/components/news-item/news-item.component.ts","./src/news/components/news-item/news-item.component.html","./src/news/components/news-results/news-results.component.ts","./src/news/components/news-results/news-results.component.html","./src/news/components/news/news.component.ts","./src/news/components/news/news.component.html","./src/news/models/news.interface.ts","./src/news/news.module.ts","./src/news/services/helpers/news-archive-response.helper.ts","./src/news/services/helpers/news-cms-helper.ts","./src/news/services/helpers/news-latest-response.helper.ts","./src/news/services/news-api/news-api.service.ts","./src/news/services/news-facade-api/news-facade-api.service.ts","./src/news/services/state/news-state.service.ts"],"sourcesContent":["import { Component, Inject, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { StateService } from '@uirouter/core';\r\nimport { combineLatest,  Observable, Subject, ReplaySubject } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { GenericRepoService, MatIconAvailabilityService } from 'common/services';\r\nimport { cmsIds as menuCMSIds } from 'menu/constants';\r\nimport { CmsResolverService } from 'cms/services';\r\nimport { Location } from '@angular/common';\r\nimport { NewsCmsHelper } from 'news/services/helpers/news-cms-helper';\r\nimport { INewsCms } from 'news/models/news.interface';\r\n\r\n@Component({\r\n    selector: 'news-article',\r\n    templateUrl: './news-article.component.html',\r\n    styleUrls: ['./news-article.component.less']\r\n})\r\nexport class NewsArticleComponent implements OnInit, OnDestroy {\r\n\r\n    public title: string;\r\n    public subtitle: string;\r\n    public newsDisplayDate: string;\r\n    public category: string;\r\n    public longDescription: string;\r\n\r\n    public cmsPathDictionary: any;\r\n\r\n    constructor(\r\n        private state: StateService,\r\n        private genericRepoSerivice: GenericRepoService,\r\n        private matIcon: MatIconAvailabilityService,\r\n        private cmsResolverService: CmsResolverService,\r\n        private location: Location,\r\n        private cmsHelper: NewsCmsHelper\r\n    ) { }\r\n\r\n    @Input() public newsArticleCms: INewsCms;\r\n\r\n    public facebook$: Observable<string>;\r\n    public twitter$: Observable<string>;\r\n    public instagram$: Observable<string>;\r\n    public linkedin$: Observable<string>;\r\n    public youtube$: Observable<string>;\r\n\r\n    private commonCmsContentSubject = new ReplaySubject<{ facebook: string; twitter: string; instagram: string; linkedin: string; youtube: string }>();\r\n\r\n    private onDestroySubject = new Subject<void>();\r\n\r\n    ngOnDestroy(): void {\r\n        this.commonCmsContentSubject.complete();\r\n        this.onDestroySubject.next();\r\n        this.cmsHelper.reset();\r\n    }\r\n\r\n    public get commonCmsContent() {\r\n        //only one value needed as this is not being updated\r\n        return this.commonCmsContentSubject\r\n            .pipe(take(1));\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.cmsHelper.initialize(this.newsArticleCms);\r\n\r\n        const cmsId = this.state.params.CmsId;\r\n\r\n        const request = { ItemId: cmsId };\r\n\r\n        ////send request for cms data\r\n        const response = await this.genericRepoSerivice.dataFactory.getCmsPageById(request);\r\n\r\n        const parsedResponse = JSON.parse(response.cmsResponse);\r\n\r\n        this.title = parsedResponse.Title;\r\n        this.subtitle = parsedResponse.Subtitle;\r\n        this.newsDisplayDate = parsedResponse.NewsDisplayDate;\r\n        this.category = parsedResponse.Categories || parsedResponse.Category;\r\n        this.longDescription = parsedResponse.LongDescription;\r\n\r\n        const { facebook, twitter, instagram, linkedin, youtube } = await this.cmsResolverService.resolve({ ItemId: menuCMSIds.CommonCmsContent, mergeParams: true });\r\n        this.commonCmsContentSubject.next({ facebook, twitter, instagram, linkedin, youtube });\r\n\r\n        this.facebook$ = this.matIcon.whenAvailable('facebook-icon')\r\n            .pipe(\r\n                available$ => combineLatest(available$, this.commonCmsContent),\r\n                map(([, res]) => res.facebook)\r\n            );\r\n\r\n        this.twitter$ = this.matIcon.whenAvailable('twitter-icon')\r\n            .pipe(\r\n                available$ => combineLatest(available$, this.commonCmsContent),\r\n                map(([, res]) => res.twitter)\r\n            );\r\n\r\n        this.instagram$ = this.matIcon.whenAvailable('instagram-icon')\r\n            .pipe(\r\n                available$ => combineLatest(available$, this.commonCmsContent),\r\n                map(([, res]) => res.instagram)\r\n            );\r\n\r\n        this.linkedin$ = this.matIcon.whenAvailable('linkedin-icon')\r\n            .pipe(\r\n                available$ => combineLatest(available$, this.commonCmsContent),\r\n                map(([, res]) => res.linkedin)\r\n            );\r\n\r\n        this.youtube$ = this.matIcon.whenAvailable('youtube-icon')\r\n            .pipe(\r\n                available$ => combineLatest(available$, this.commonCmsContent),\r\n                map(([, res]) => res.youtube)\r\n            );\r\n\r\n\r\n    }\r\n\r\n    public async viewArchiveClick() {\r\n\r\n        await this.location.go('News?filter=Archive');\r\n    }\r\n\r\n    getVal(key: string) {\r\n        return this.cmsHelper.getVal(key);\r\n    }\r\n\r\n}\r\n","\r\n<main class=\"refresh-2020 u-spacing--widthFill\">\r\n\r\n    <page-filled-container [hasGutter]=\"false\">\r\n\r\n\r\n        <main fxLayout=\"column\" fxLayoutGap=\"20px\" class=\"news-main\">\r\n\r\n            <card-dash-container fxFlex=\"auto\" [hasMargin]=\"false\"\r\n                                 ngClass.gt-xs=\"u-spacing__firstHeaderToTitle--marginTop\">\r\n\r\n                <section fxLayout=\"column\">\r\n                    <div id=\"header1-row\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between end\"\r\n                         fxLayoutAlign.lt-md=\"space-between center\"\r\n                         ngClass.lt-md=\"compact-menu\">\r\n\r\n                        <div id=\"header1-left\"\r\n                             fxLayout=\"column\">\r\n\r\n                            <div style=\"padding-bottom:8px;\">\r\n                                <span class=\"newsCategory\">{{category}}</span>\r\n                            </div>\r\n\r\n                            <div style=\"padding-bottom:8px;\">\r\n                                <span class=\"newsTitle\">{{title}}</span>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <span class=\"newsSubtitle\">{{subtitle}}</span>\r\n                                <mat-divider></mat-divider>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div id=\"header2-row\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between end\"\r\n                         fxLayoutAlign.lt-md=\"space-between center\"\r\n                         ngClass.lt-md=\"compact-menu\"\r\n                         style=\"padding-bottom:32px;\">\r\n\r\n                        <div id=\"header2-left\"\r\n                             fxLayout=\"row\"\r\n                             fxLayoutAlign=\"space-between end\"\r\n                             fxLayoutAlign.lt-md=\"space-between center\"\r\n                             style=\"height:32px;\">\r\n\r\n                            <span><mat-icon svgIcon=\"clock\"></mat-icon></span>\r\n                            <span class=\"published\" style=\"padding-bottom:3px;\">{{getVal('publishedOn')}} {{newsDisplayDate | date: 'longDate'}}</span>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div id=\"header2-right\"\r\n                             fxLayout=\"column\"\r\n                             fxLayoutAlign=\"space-between end\"\r\n                             fxLayoutAlign.lt-md=\"space-around end\">\r\n\r\n                            <div fxShow\r\n                                 fxHide.lt-md\r\n                                 fxLayout=\"row\"\r\n                                 fxLayoutAlign=\"space-between end\">\r\n\r\n                                <div>\r\n                                    <a id=\"facebook-link\" *ngIf=\"facebook$ | async as facebookLink\" [href]=\"facebookLink\" target=\"_blank\">\r\n                                        <mat-icon svgIcon=\"facebook-icon\"></mat-icon>\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                                <div style=\"padding-left:8px;\">\r\n                                    <a id=\"twitter-link\" *ngIf=\"twitter$ | async as twitterLink\" [href]=\"twitterLink\" target=\"_blank\">\r\n                                        <mat-icon svgIcon=\"twitter-icon\"></mat-icon>\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                                <div style=\"padding-left:8px;\">\r\n                                    <a id=\"instagram-link\" *ngIf=\"instagram$ | async as instagramLink\" [href]=\"instagramLink\" target=\"_blank\">\r\n                                        <mat-icon svgIcon=\"instagram-icon\"></mat-icon>\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                                <div style=\"padding-left:8px;\">\r\n                                    <a id=\"linkedin-link\" *ngIf=\"linkedin$ | async as linkedinLink\" [href]=\"linkedinLink\" target=\"_blank\">\r\n                                        <mat-icon svgIcon=\"linkedin-icon\"></mat-icon>\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                                <div style=\"padding-left:8px;\">\r\n                                    <a id=\"youtube-link\" *ngIf=\"youtube$ | async as youtubeLink\" [href]=\"youtubeLink\" target=\"_blank\">\r\n                                        <mat-icon svgIcon=\"youtube-icon\"></mat-icon>\r\n                                    </a>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"header3-row\"\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between end\"\r\n                         fxLayoutAlign.lt-md=\"space-between center\"\r\n                         ngClass.lt-md=\"compact-menu\">\r\n\r\n                        <section fxLayout=\"column\">\r\n                            <article class=\"description\" [innerHtml]=\"longDescription | safeHtml\"></article>\r\n                        </section>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n\r\n            </card-dash-container>\r\n\r\n            <div fxHide\r\n                 fxShow.lt-md\r\n                 fxLayout=\"column\"\r\n                 fxLayoutAlight=\"center center\">\r\n\r\n\r\n                <div fxLayout=\"row\"\r\n                     fxLayoutAlign=\"center center\" style=\"padding-top:20px\">\r\n\r\n                    <a fxFlex=\"none\" aria-label=\"View Archive Page\" (click)=\"viewArchiveClick()\">\r\n                        {{getVal('viewArchiveButtonText')}}\r\n                    </a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"footer-row\"\r\n                 fxShow\r\n                 fxHide.lt-md\r\n                 fxLayout=\"row\"\r\n                 fxLayoutAlign=\"space-between end\"\r\n                 fxLayoutAlign.lt-md=\"space-between center\"\r\n                 ngClass.lt-md=\"compact-menu\">\r\n\r\n                <div id=\"footer-left\"\r\n                     fxLayout=\"row\"\r\n                     fxLayoutAlign=\"space-between end\"\r\n                     fxLayoutAlign.lt-md=\"space-between center\">\r\n\r\n                </div>\r\n\r\n                <div id=\"footer-right\"\r\n                     fxLayout=\"column\"\r\n                     fxLayoutAlign=\"space-between end\"\r\n                     fxLayoutAlign.lt-md=\"space-around end\">\r\n\r\n                    <div fxShow\r\n                         fxHide.lt-md\r\n                         fxLayout=\"row\"\r\n                         fxLayoutAlign=\"space-between end\">\r\n\r\n                        <a fxFlex=\"none\" aria-label=\"View Archive Page\" (click)=\"viewArchiveClick()\">\r\n                            {{getVal('viewArchiveButtonText')}}\r\n                        </a>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </main>\r\n\r\n    </page-filled-container>\r\n\r\n</main>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IData, IList } from 'common/ui/dropdown/models/dropdown.interface';\r\nimport { ICategory, NewsAction, ViewType } from 'news/models/news.interface';\r\nimport { NewsCmsHelper } from 'news/services/helpers/news-cms-helper';\r\nimport { NewsStateService } from 'news/services/state/news-state.service';\r\n\r\n@Component({\r\n    selector: 'news-filters',\r\n    templateUrl: './news-filters.component.html',\r\n    styleUrls: ['./news-filters.component.less']\r\n})\r\nexport class NewsFiltersComponent implements OnInit {\r\n\r\n    @Input() categories: ICategory[] = [];\r\n\r\n    list = {\r\n        data: []\r\n    } as IList;\r\n\r\n    selectedView;\r\n\r\n    viewType = ViewType;\r\n    constructor(private newsStateService: NewsStateService,\r\n        private cmsHelper: NewsCmsHelper\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.getCurrentView();\r\n\r\n        this.categories.forEach(cat => {\r\n            const data = {\r\n                id: cat.queryID,\r\n                displayName: cat.displayName\r\n\r\n            } as IData;\r\n\r\n            this.list.data.push(data);\r\n            this.list.defaultDisplayName = this.newsStateService.getState().category.displayName;\r\n\r\n        });\r\n    }\r\n\r\n    getCurrentView() {\r\n        const currentState = this.newsStateService.getState();\r\n        if (currentState) {\r\n            this.selectedView = currentState.view;\r\n        }\r\n    }\r\n\r\n    handleCategoryEvent(event: IData) {\r\n\r\n        const selectedCat = this.categories.filter(cat => cat.displayName === event.displayName && cat.queryID === event.id);\r\n\r\n        if (selectedCat.length > 0) {\r\n            this.newsStateService.dispatchEvent(NewsAction.Category, selectedCat[0]);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleToggleView(clickedView: ViewType) {\r\n\r\n        const currentView = this.newsStateService.getState().view;\r\n        if (currentView !== clickedView) {\r\n            this.newsStateService.dispatchEvent(NewsAction.ToggleView);\r\n\r\n        }\r\n    }\r\n\r\n    getVal(key: string) {\r\n        return this.cmsHelper.getVal(key);\r\n    }\r\n\r\n}\r\n","<section class=\"filter-section\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n\r\n    <div class=\"filter-container\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n        <span class=\"filter-category-title\">{{getVal('filterByCategories')}}</span>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n            <dropdown [list]=\"list\" (onChange)=\"handleCategoryEvent($event)\"></dropdown>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"view-container\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n        <span class=\"filter-view-title\">{{getVal('view')}}</span>\r\n        <mat-button-toggle-group [value]=\"selectedView\" name=\"fontStyle\" aria-label=\"Font Style\">\r\n            <mat-button-toggle (click)=\"handleToggleView(viewType.Latest)\" [value]=\"viewType.Latest\">\r\n                {{getVal('latestNews')}}\r\n            </mat-button-toggle>\r\n            <mat-button-toggle (click)=\"handleToggleView(viewType.Archive)\" class=\"archive\" [value]=\"viewType.Archive\">\r\n                {{getVal('archive')}}</mat-button-toggle>\r\n        </mat-button-toggle-group>\r\n    </div>\r\n</section>","import { Component, Input } from '@angular/core';\r\nimport { LinkLookupService } from 'cms/services';\r\nimport { INewsItem } from 'news/models/news.interface';\r\nimport { NewsCmsHelper } from 'news/services/helpers/news-cms-helper';\r\n\r\n@Component({\r\n    selector: 'news-item',\r\n    styleUrls: ['/news-item.component.less'],\r\n    templateUrl: '/news-item.component.html',\r\n})\r\nexport class NewsItemComponent {\r\n\r\n    @Input() item: INewsItem;\r\n    @Input() categoryName: string;\r\n\r\n    constructor(private linkLookupService: LinkLookupService,\r\n        private cmsHelper: NewsCmsHelper) { }\r\n\r\n    readMore(itemPath) {\r\n        const link = this.linkLookupService.articleLookup(itemPath);\r\n        window.open(link, '_blank');\r\n    }\r\n\r\n    getVal(key: string) {\r\n        return this.cmsHelper.getVal(key);\r\n    }\r\n}\r\n","<section fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n\r\n    <p class=\"category\">{{item.category}}</p>\r\n\r\n    <p class=\"title\">{{item.title}}</p>\r\n\r\n    <p class=\"sub-title\" [innerHtml]=\"item.subtitle\"></p>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div>\r\n        <span><mat-icon svgIcon=\"clock\"></mat-icon></span>\r\n        <span class=\"publish-on\">{{getVal('publishedOn')}} {{item.publishedOn | date: 'longDate' }}</span>\r\n    </div>\r\n\r\n    \r\n\r\n    <article class=\"description\" [innerHTML]=\"item.description | safeHtml\"></article>\r\n\r\n    <span class=\"read-more\" *ngIf=\"item.targetUrl\"><a (click)=\"readMore(item.targetUrl)\">\r\n        {{getVal('readMore')}}</a></span>\r\n</section>\r\n","import { Component, Input } from '@angular/core';\r\nimport { LinkLookupService } from 'cms/services/linkLookup.service';\r\nimport { INewsResults } from 'news/models/news.interface';\r\nimport { NewsCmsHelper } from 'news/services/helpers/news-cms-helper';\r\n\r\n@Component({\r\n    selector: 'news-results',\r\n    templateUrl: './news-results.component.html',\r\n    styleUrls: ['./news-results.component.less'],\r\n    providers: [LinkLookupService]\r\n})\r\nexport class NewsResultsComponent {\r\n\r\n    constructor(private cmsHelper: NewsCmsHelper\r\n    ) {\r\n\r\n    }\r\n\r\n    @Input() results: INewsResults;\r\n\r\n    getVal(key: string) {\r\n        return this.cmsHelper.getVal(key);\r\n    }\r\n}\r\n\r\n","<section fxLayout=\"column\" *ngIf=\"results\">\r\n\r\n    <section fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\" class=\"results-title-section\">\r\n        <div class=\"results-for-container\" fxLayout=\"row wrap\">\r\n            <span class=\"results-for\">{{getVal('searchResults')}}</span>\r\n            <span>{{results.category.displayName}}</span>\r\n        </div>\r\n        <span class=\"result-count\">{{results.count}} {{getVal('itemsFound')}}</span>\r\n    </section>\r\n\r\n\r\n    <ng-container *ngFor=\"let item of results.items\">\r\n\r\n        <card-dash-container fxFlex=\"auto\" [hasMargin]=\"false\" class=\"u-spacing__cardToCard--marginTop news-results-card\">\r\n\r\n            <news-item [item]=\"item\" [categoryName]=\"results.category.displayName\"></news-item>\r\n\r\n        </card-dash-container>\r\n\r\n    </ng-container>\r\n\r\n</section>","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { StateService, UIRouterGlobals } from '@uirouter/angular';\r\nimport { IPagingEvent, IPagingState } from 'common/ui/pagination/models/pagination.interface';\r\nimport { PaginationStateService } from 'common/ui/pagination/services/pagination-state.service';\r\nimport { ICategory, INewsCms, INewsQueryParams, INewsResults, IQueryNews, IState, NewsAction, ViewType } from 'news/models/news.interface';\r\nimport { NewsStateNames } from 'news/news.constants';\r\nimport { NewsCmsHelper } from 'news/services/helpers/news-cms-helper';\r\nimport { NewsFacadeApiService } from 'news/services/news-facade-api/news-facade-api.service';\r\nimport { NewsStateService } from 'news/services/state/news-state.service';\r\n\r\n@Component({\r\n    selector: 'hctra-news',\r\n    templateUrl: './news.component.html',\r\n    styleUrls: ['./news.component.less'],\r\n})\r\nexport class NewsComponent implements OnInit, OnDestroy {\r\n\r\n    categories: ICategory[];\r\n    totalPages: number;\r\n    viewType = ViewType;\r\n    newsResults: INewsResults;\r\n    itemsPerPageList = [5, 10, 25, 50];\r\n\r\n    @Input() newsCms: INewsCms;\r\n\r\n    constructor(private facadeApi: NewsFacadeApiService,\r\n        private newsStateService: NewsStateService,\r\n        private paginationStateService: PaginationStateService,\r\n        private uiRouterGlobals: UIRouterGlobals,\r\n        private state: StateService,\r\n        private cmsHelper: NewsCmsHelper\r\n\r\n    ) {\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.cmsHelper.initialize(this.newsCms);\r\n\r\n        this.paginationStateService.subcribeEvent((event: IPagingEvent) => {\r\n            this.newsStateService.dispatchPaginationEvent(event.action, event.val);\r\n        });\r\n\r\n        this.newsStateService.subscribe(async (state: IState) => {\r\n            if (state) {\r\n                await this.refreshPage(state);\r\n            }\r\n        });\r\n\r\n        await this.loadPage();\r\n\r\n    }\r\n\r\n    private async loadPage() {\r\n\r\n        const routerParams = this.uiRouterGlobals.params;\r\n\r\n        let newsQuery;\r\n\r\n        if (routerParams.category || routerParams.filter) {\r\n\r\n            const params = {\r\n                category: routerParams.category,\r\n                filter: routerParams.filter\r\n            } as INewsQueryParams;\r\n\r\n            newsQuery = await this.facadeApi.getPageInfo(params);\r\n\r\n        } else {\r\n            newsQuery = await this.facadeApi.getPageInfo();\r\n        }\r\n\r\n        this.initPage(newsQuery);\r\n    }\r\n\r\n    private initPage(newsQuery: IQueryNews) {\r\n\r\n        this.categories = newsQuery.categories;\r\n        this.newsResults = newsQuery.results;\r\n\r\n        const pagingState: IPagingState = {\r\n            totalPages: newsQuery.totalPages,\r\n            totalResultCount: newsQuery.results.count,\r\n            currentpageItemsCount: newsQuery.results.items.length,\r\n            currentPage: 0,\r\n            itemsPerPage: this.newsStateService.getState().pageSize\r\n        };\r\n\r\n        this.paginationStateService.dispatchPagingInfo(pagingState);\r\n\r\n\r\n    }\r\n\r\n    async refreshPage(state: IState) {\r\n        const results = await this.facadeApi.refreshResults(state);\r\n        this.newsResults = results.newsResults;\r\n\r\n        if (results.noOfPages) {\r\n\r\n            const pagingState: IPagingState = {\r\n                totalPages: results.noOfPages,\r\n                totalResultCount: results.newsResults.count,\r\n                currentpageItemsCount: results.newsResults.items.length,\r\n                currentPage: state.currentPage,\r\n                itemsPerPage: state.pageSize\r\n            };\r\n            this.paginationStateService.dispatchPagingInfo(pagingState);\r\n\r\n        } else {\r\n            this.paginationStateService.dispatchPagingInfo(null);\r\n        }\r\n\r\n        this.updateUrlWithoutRefresh(state);\r\n\r\n    }\r\n\r\n    private updateUrlWithoutRefresh(state: IState) {\r\n        if (this.uiRouterGlobals.params.category || this.uiRouterGlobals.params.filter) {\r\n            this.state.go(NewsStateNames.News,\r\n                { filter: state.view.toString(), category: state.category.displayName },\r\n                { notify: false, reload: false }\r\n            );\r\n        }\r\n    }\r\n\r\n    getView() {\r\n        return this.newsStateService.getState().view;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.newsStateService.unsubscribe();\r\n        this.paginationStateService.unsubscribe();\r\n        this.cmsHelper.reset();\r\n        this.newsStateService.clearState();\r\n    }\r\n\r\n}\r\n","<main class=\"refresh-2020 u-spacing--widthFill\">\r\n    <title-banner>\r\n        {{newsCms.bannerTitle}}\r\n    </title-banner>\r\n\r\n    <page-filled-container [hasGutter]=\"false\">\r\n\r\n\r\n        <main fxLayout=\"column\" fxLayoutGap=\"20px\" class=\"news-main\">\r\n\r\n            <card-dash-container fxFlex=\"auto\" [hasMargin]=\"false\"\r\n                class=\"u-spacing__firstHeaderToTitle--marginTop\">\r\n\r\n                <news-filters *ngIf=\"categories\" [categories]=\"categories\"></news-filters>\r\n\r\n            </card-dash-container>\r\n\r\n            <news-results *ngIf=\"newsResults\" [results]=\"newsResults\"></news-results>\r\n\r\n            <pagination [itemsPerPageList]=\"itemsPerPageList\" \r\n            *ngIf=\"newsResults && newsResults.count>0 && getView()===viewType.Archive\"></pagination>\r\n\r\n\r\n        </main>\r\n\r\n    </page-filled-container>\r\n\r\n\r\n</main>","import { SiteCoreItem } from 'cms/cms.module';\r\n\r\nexport interface ICategory {\r\n    displayName: string;\r\n    itemID: string;\r\n    queryID: string;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport interface INewsItem {\r\n    title: string;\r\n    subtitle: string;\r\n    publishedOn: string;\r\n    description: string;\r\n    targetUrl: string;\r\n    category: string;\r\n}\r\n\r\nexport interface INewsResults {\r\n    category: ICategory;\r\n    count: number;\r\n    items: INewsItem[];\r\n}\r\n\r\nexport interface IQueryNews {\r\n    categories: ICategory[];\r\n    results: INewsResults;\r\n    totalPages?: number;\r\n}\r\n\r\nexport interface IState {\r\n    category: ICategory;\r\n    view: ViewType;\r\n    pageSize: number;\r\n    currentPage: number;\r\n}\r\n\r\nexport interface INewsLatestApiRequest {\r\n    requests: IItemRequest[];\r\n}\r\n\r\nexport interface IItemRequest {\r\n    fields: string;\r\n    itemId: string;\r\n}\r\n\r\nexport enum FieldsEnum {\r\n    Title = 'Title',\r\n    QueryId = 'QueryId',\r\n    DisplayName = 'DisplayName',\r\n    ItemPath = 'ItemPath',\r\n    ItemName = 'ItemName',\r\n    ItemID = 'ItemID',\r\n    Query = 'Query'\r\n}\r\n\r\n\r\nexport interface INewsPagingInfo {\r\n    currentPage: number;\r\n    isClosures: boolean;\r\n    isNews: boolean;\r\n    itemId: string;\r\n    pageSize: number;\r\n    pagingSuffix: string;\r\n}\r\n\r\nexport enum NewsAction {\r\n    Category,\r\n    ToggleView\r\n}\r\n\r\nexport enum ViewType {\r\n    Latest = 'Latest',\r\n    Archive = 'Archive'\r\n}\r\n\r\nexport interface ILatestNewsReq {\r\n    categoryId: string;\r\n}\r\n\r\nexport interface INewsQueryParams {\r\n    category: string;\r\n    filter: ViewType;\r\n}\r\n\r\nexport interface INewsCms extends SiteCoreItem {\r\n    bannerTitle: string;\r\n    view: string;\r\n    latestNews: string;\r\n    archive: string;\r\n    searchResults: string;\r\n    itemsFound: string;\r\n    readMore: string;\r\n    publishedOn: string;\r\n    viewArchiveButtonText: string;\r\n}\r\n\r\nexport interface INewsArticleDictionaryItem {\r\n    itemID: string;\r\n    friendlyURL: string;\r\n    templateName: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CommonModule as HctraCommonModule, ENVIRON_CONFIG } from 'common/module';\r\nimport { PipesModule } from 'pipes/module';\r\nimport { ValidationModule } from 'validation/module';\r\nimport { NewsStateNames } from './news.constants';\r\nimport { NewsRoutesStateConfig } from './news.routing';\r\nimport { StorefrontModule } from 'storefront/module';\r\nimport { NewsFiltersComponent } from './components/news-filters/news-filters.component';\r\nimport { NewsResultsComponent } from './components/news-results/news-results.component';\r\nimport { NewsItemComponent } from './components/news-item/news-item.component';\r\nimport { DynamicRoutes } from 'app/routing';\r\nimport { NewsStateService } from './services/state/news-state.service';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NewsComponent } from './components/news/news.component';\r\nimport { PaginationModule } from 'common/ui/pagination/pagination.module';\r\nimport { DropdownModule } from 'common/ui/dropdown/dropdown.module';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { NewsLatestResponseHelper } from './services/helpers/news-latest-response.helper';\r\nimport { NewsArchiveResHelper } from './services/helpers/news-archive-response.helper';\r\nimport { NewsFacadeApiService } from './services/news-facade-api/news-facade-api.service';\r\nimport { NewApiService } from './services/news-api/news-api.service';\r\nimport { NewsArticleComponent } from './components/news-article/news-article.component';\r\nimport { NewsCmsHelper } from './services/helpers/news-cms-helper';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nconst componentDictionary = {\r\n    [NewsStateNames.News]: NewsComponent,\r\n    [NewsStateNames.NewsArticle]: NewsArticleComponent\r\n};\r\n\r\nconst routesWithComponents = NewsRoutesStateConfig.map(route => {\r\n    const routes = {\r\n        ...route,\r\n        component: componentDictionary[route.name]\r\n    };\r\n    return routes;\r\n}\r\n);\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewsComponent,\r\n        NewsFiltersComponent,\r\n        NewsResultsComponent,\r\n        NewsArticleComponent,\r\n        NewsItemComponent],\r\n    providers: [NewsLatestResponseHelper, NewsArchiveResHelper, NewsFacadeApiService, NewApiService,\r\n        NewsStateService, NewsCmsHelper, DatePipe],\r\n    imports: [\r\n        DynamicRoutes([ENVIRON_CONFIG], (environConfig) => environConfig.useNewsRefresh ? routesWithComponents : []),\r\n        HctraCommonModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        PipesModule,\r\n        FlexLayoutModule,\r\n        ValidationModule,\r\n        StorefrontModule,\r\n        OverlayModule,\r\n        PaginationModule,\r\n        DropdownModule,\r\n        MatButtonToggleModule\r\n    ]\r\n\r\n})\r\nexport class NewsModule {\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { INewsItem, INewsResults } from 'news/models/news.interface';\r\n\r\n@Injectable()\r\nexport class NewsArchiveResHelper {\r\n\r\n    constructor(\r\n        private datePipe: DatePipe,\r\n    ) {\r\n    }\r\n\r\n    parseResponse(res) {\r\n\r\n        const results = {\r\n            count: res.numberOfArticles,\r\n            items: this.parseArticles(res),\r\n\r\n        } as INewsResults;\r\n\r\n        return results;\r\n    }\r\n\r\n    private parseArticles(res) {\r\n        const items = [] as INewsItem[];\r\n\r\n        if (res.articles) {\r\n            res.articles.forEach(article => {\r\n                const item = {\r\n                    title: article.title,\r\n                    description: article.shortDescription,\r\n                    publishedOn: article.newsDisplayDate,\r\n                    subtitle: article.subtitle,\r\n                    targetUrl: article.longDescription ? article.itemPath : '',\r\n                    category: article.categories || article.category\r\n\r\n                } as INewsItem;\r\n\r\n                if (article.newsDisplayDate) {\r\n                    const publishedDate = new Date(this.datePipe.transform(article.newsDisplayDate, 'short'));\r\n                    const today = new Date();\r\n\r\n                    if (publishedDate <= today) {\r\n                        items.push(item);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n        return items;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { INewsCms } from 'news/models/news.interface';\r\n\r\n@Injectable()\r\nexport class NewsCmsHelper {\r\n\r\n    private cmsData: INewsCms;\r\n    private keys: string[];\r\n\r\n    constructor() { }\r\n\r\n    initialize(data: INewsCms) {\r\n        this.cmsData = data;\r\n        this.keys = Object.keys(this.cmsData);\r\n    }\r\n\r\n    getVal(param: string) {\r\n        const keyName = this.keys.find(key => key === param);\r\n        if (keyName) {\r\n            return this.cmsData[keyName];\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.cmsData = {} as INewsCms;\r\n        this.keys = [];\r\n    }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { CmsUtilService } from 'cms/services';\r\nimport { INewsItem, INewsResults } from 'news/models/news.interface';\r\n\r\n@Injectable()\r\nexport class NewsLatestResponseHelper {\r\n\r\n    constructor(\r\n        private cmsUtilService: CmsUtilService,\r\n        private datePipe: DatePipe,\r\n    ) {\r\n\r\n    }\r\n\r\n    parseResponse(res) {\r\n        if (res.responses && res.responses.length > 0) {\r\n            const response = res.responses[0].cmsResponse.toString();\r\n            const results = this.jsonParse(response);\r\n            const latesNews = this.cmsUtilService.processArticleArray(results);\r\n\r\n            return this.mapResults(latesNews);\r\n\r\n        }\r\n    }\r\n\r\n    private jsonParse(response){\r\n      return  JSON.parse(response).Query.Results;\r\n    }\r\n\r\n    private mapResults(latesNews) {\r\n\r\n        const newsItems = [] as INewsItem[];\r\n\r\n        latesNews.forEach(news => {\r\n            const item = {\r\n                title: news.Title,\r\n                subtitle: news.Subtitle,\r\n                description: news.ShortDescription !== '' ? news.ShortDescription : news.LongDescription,\r\n                publishedOn: news.NewsDisplayDate,\r\n                targetUrl: news.LongDescription ? news.ItemPath : '',\r\n                category: news.Categories || news.Category\r\n            } as INewsItem;\r\n\r\n            if (news.NewsDisplayDate) {\r\n                const publishedDate = new Date(this.datePipe.transform(news.NewsDisplayDate, 'short'));\r\n                const today = new Date();\r\n\r\n                if (publishedDate <= today) {\r\n                    newsItems.push(item);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            count: newsItems.length,\r\n            items: newsItems,\r\n\r\n        } as INewsResults;\r\n    }\r\n}\r\n\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { INewsLatestApiRequest, INewsPagingInfo } from 'news/models/news.interface';\r\nimport { HttpService } from '../../../common/services/httpService/http.service';\r\n\r\n@Injectable()\r\nexport class NewApiService {\r\n\r\n    constructor(private httpService: HttpService) {\r\n\r\n    }\r\n\r\n    getCategories(req): Promise<any> {\r\n        const endpoint = '/api/sessions/Article/Categories';\r\n        return this.httpService.post(endpoint, req);\r\n\r\n    }\r\n\r\n    getArchiveNewsByCategoryId(req: INewsPagingInfo): Promise<any> {\r\n        const endpoint = '/api/sessions/Article/ExecuteCmsPaging';\r\n        return this.httpService.post(endpoint, req);\r\n    }\r\n\r\n    getLatestNews(req): Promise<any> {\r\n        const endpoint = 'api/sessions/GenericCms/GetCmsPages';\r\n        const payload = {\r\n            requests: [req]\r\n        } as INewsLatestApiRequest;\r\n\r\n        return this.httpService.post(endpoint, payload);\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FieldsEnum, ICategory, INewsPagingInfo, INewsQueryParams, INewsResults, IQueryNews, IState, NewsAction, ViewType } from 'news/models/news.interface';\r\nimport { NewsCmsIds } from 'news/news.constants';\r\nimport { NewsArchiveResHelper } from '../helpers/news-archive-response.helper';\r\nimport { NewsLatestResponseHelper } from '../helpers/news-latest-response.helper';\r\nimport { NewApiService } from '../news-api/news-api.service';\r\nimport { NewsStateService } from '../state/news-state.service';\r\n\r\n\r\n@Injectable()\r\nexport class NewsFacadeApiService {\r\n\r\n    constructor(private api: NewApiService,\r\n        private archiveResHelper: NewsArchiveResHelper,\r\n        private newsLatestResHelper: NewsLatestResponseHelper,\r\n        private stateService: NewsStateService) {\r\n\r\n    }\r\n\r\n    private async getCategories(): Promise<ICategory[]> {\r\n\r\n        const req = {\r\n            fields: `${FieldsEnum.Title.toString()},${FieldsEnum.QueryId},${FieldsEnum.DisplayName},${FieldsEnum.ItemPath}, ${FieldsEnum.ItemName}`,\r\n            itemId: NewsCmsIds.categoriesCmsId\r\n        };\r\n        const res = await this.api.getCategories(req);\r\n\r\n        const categories: ICategory[] = [];\r\n        if (res.categories && res.categories.length > 0) {\r\n\r\n            res.categories.forEach(cat => {\r\n                const newCat = {\r\n                    displayName: cat.displayName,\r\n                    itemID: cat.itemID,\r\n                    queryID: cat.queryID,\r\n                    isDefault: false\r\n\r\n                } as ICategory;\r\n\r\n                categories.push(newCat);\r\n\r\n            });\r\n\r\n\r\n            if (res.defaultCategory) {\r\n                const defaultCat = categories.filter(cat => cat.queryID === res.defaultCategory.queryID);\r\n                if (defaultCat.length > 0) {\r\n                    defaultCat[0].isDefault = true;\r\n                }\r\n            }\r\n        }\r\n        return categories;\r\n    }\r\n\r\n    private setDefaultSelectedCategory(categories: ICategory[], params?: INewsQueryParams) {\r\n\r\n        let defaultCat: ICategory;\r\n        const initDefaultCat = categories.find(c => c.isDefault === true);\r\n\r\n        if (params && params.category) {\r\n            const selectedCat = categories.find(c => c.displayName.toUpperCase() === params.category.toUpperCase());\r\n            if (selectedCat) {\r\n                defaultCat = selectedCat;\r\n            } else {\r\n                defaultCat = initDefaultCat;\r\n            }\r\n        } else {\r\n            defaultCat = initDefaultCat;\r\n        }\r\n\r\n        this.stateService.setInitialState({\r\n            action: NewsAction.Category,\r\n            value: defaultCat\r\n        });\r\n\r\n    }\r\n\r\n    private setSelectedView(params?: INewsQueryParams) {\r\n\r\n        let selectedView: ViewType;\r\n\r\n        if (params && params.filter) {\r\n            switch (params.filter.toString().toUpperCase()) {\r\n\r\n                case 'LATEST':\r\n                    selectedView = ViewType.Latest;\r\n                    break;\r\n\r\n                case 'ARCHIVE':\r\n                    selectedView = ViewType.Archive;\r\n                    break;\r\n\r\n                default:\r\n                    selectedView = ViewType.Latest;\r\n                    break;\r\n            }\r\n\r\n        } else {\r\n            selectedView = ViewType.Latest;\r\n        }\r\n\r\n        this.stateService.setInitialState({\r\n            action: NewsAction.ToggleView,\r\n            value: selectedView\r\n        });\r\n\r\n    }\r\n\r\n    async getPageInfo(params?: INewsQueryParams) {\r\n\r\n        const cat = await this.getCategories();\r\n\r\n        this.setDefaultSelectedCategory(cat, params);\r\n\r\n        this.setSelectedView(params);\r\n\r\n        const state = this.stateService.getState();\r\n        let newsResults: INewsResults;\r\n\r\n        switch (state.view) {\r\n\r\n            case ViewType.Latest:\r\n\r\n                newsResults = await this.getLatestNews(state);\r\n\r\n                return {\r\n                    categories: cat,\r\n                    results: newsResults\r\n                } as IQueryNews;\r\n\r\n            case ViewType.Archive:\r\n\r\n                const results = await this.getArchiveNews(state);\r\n                newsResults = results.newsResults;\r\n\r\n                return {\r\n                    categories: cat,\r\n                    results: newsResults,\r\n                    totalPages: results.noOfPages\r\n                } as IQueryNews;\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    private async getArchiveNews(state: IState) {\r\n        const req = {\r\n            currentPage: state.currentPage,\r\n            isClosures: false,\r\n            isNews: true,\r\n            itemId: state.category.queryID,\r\n            pageSize: state.pageSize,\r\n            pagingSuffix: ''\r\n        } as INewsPagingInfo;\r\n\r\n        const res = await this.api.getArchiveNewsByCategoryId(req);\r\n        const newsResults = this.archiveResHelper.parseResponse(res);\r\n        newsResults.category = state.category;\r\n        const noOfPages: number = res.numberOfPages;\r\n\r\n        return { newsResults, noOfPages };\r\n    }\r\n\r\n\r\n    private async getLatestNews(state: IState) {\r\n\r\n        const req = {\r\n            fields: `${FieldsEnum.ItemID.toString()},${FieldsEnum.Query}`,\r\n            itemId: state.category.queryID\r\n        };\r\n\r\n        const res = await this.api.getLatestNews(req);\r\n        const newsResults = this.newsLatestResHelper.parseResponse(res);\r\n\r\n        newsResults.category = state.category;\r\n        return newsResults;\r\n\r\n    }\r\n\r\n    async refreshResults(state: IState) {\r\n\r\n        switch (state.view) {\r\n\r\n            case ViewType.Latest:\r\n\r\n                const newsResults = await this.getLatestNews(state);\r\n                return { newsResults, noOfPages: null };\r\n\r\n            case ViewType.Archive:\r\n\r\n                const results = await this.getArchiveNews(state);\r\n                return results;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { PagingAction } from 'common/ui/pagination/models/pagination.interface';\r\nimport { IState, NewsAction, ViewType } from 'news/models/news.interface';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NewsStateService {\r\n\r\n    private defaultPageSize = 5;\r\n    private subscriptions: Subscription[] = [];\r\n    private state$: BehaviorSubject<IState>;\r\n\r\n    private state: IState;\r\n\r\n    constructor() {\r\n\r\n        this.state = {\r\n            currentPage: 0,\r\n            pageSize: this.defaultPageSize\r\n        } as IState;\r\n\r\n        this.state$ = new BehaviorSubject(null);\r\n\r\n    }\r\n\r\n    subscribe(callback) {\r\n\r\n        const subscription = this.state$.subscribe(callback);\r\n        this.subscriptions.push(subscription);\r\n\r\n    }\r\n\r\n    getState() {\r\n        return { ...this.state };\r\n    }\r\n\r\n    setInitialState(obj: { action: NewsAction; value: any }) {\r\n\r\n        switch (obj.action) {\r\n            case NewsAction.ToggleView:\r\n                this.state.view = obj.value;\r\n                break;\r\n\r\n            case NewsAction.Category:\r\n                this.state.category = obj.value;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    clearState() {\r\n        this.state = {\r\n            currentPage: 0,\r\n            pageSize: this.defaultPageSize\r\n        } as IState;\r\n\r\n        this.state$ = new BehaviorSubject(null);\r\n    }\r\n\r\n    dispatchEvent(action: NewsAction, val?: any) {\r\n\r\n\r\n        switch (action) {\r\n            case NewsAction.Category:\r\n                this.state.category = val;\r\n                this.state.currentPage = 0;\r\n                break;\r\n\r\n            case NewsAction.ToggleView:\r\n                this.state.view = this.state.view === ViewType.Archive ? ViewType.Latest : ViewType.Archive;\r\n                this.state.currentPage = 0;\r\n                this.state.pageSize = this.defaultPageSize;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const state = JSON.parse(JSON.stringify(this.state));\r\n        this.state$.next(state);\r\n\r\n    }\r\n\r\n    dispatchPaginationEvent(action: PagingAction, val?: any) {\r\n\r\n        switch (action) {\r\n\r\n            case PagingAction.NextPaging:\r\n                this.state.currentPage++;\r\n                break;\r\n\r\n            case PagingAction.PrevPaging:\r\n                this.state.currentPage--;\r\n                break;\r\n\r\n            case PagingAction.ItemsPerPage:\r\n                this.state.pageSize = val;\r\n                this.state.currentPage = 0;\r\n                break;\r\n            case PagingAction.SetPage:\r\n                this.state.currentPage = val;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const state = JSON.parse(JSON.stringify(this.state));\r\n        this.state$.next(state);\r\n\r\n    }\r\n\r\n    unsubscribe() {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n}\r\n"],"names":["combineLatest","Subject","ReplaySubject","map","take","cmsIds","menuCMSIds","i0","NewsArticleComponent","constructor","state","genericRepoSerivice","matIcon","cmsResolverService","location","cmsHelper","ngOnDestroy","commonCmsContentSubject","complete","onDestroySubject","next","reset","commonCmsContent","pipe","ngOnInit","initialize","newsArticleCms","cmsId","params","CmsId","request","ItemId","response","dataFactory","getCmsPageById","parsedResponse","JSON","parse","cmsResponse","title","Title","subtitle","Subtitle","newsDisplayDate","NewsDisplayDate","category","Categories","Category","longDescription","LongDescription","facebook","twitter","instagram","linkedin","youtube","resolve","CommonCmsContent","mergeParams","facebook$","whenAvailable","available$","res","twitter$","instagram$","linkedin$","youtube$","viewArchiveClick","go","getVal","key","selectors","inputs","decls","vars","consts","template","ctx","ViewType","NewsStateNames","NewsComponent","facadeApi","newsStateService","paginationStateService","uiRouterGlobals","newsCms","subcribeEvent","event","dispatchPaginationEvent","action","val","subscribe","refreshPage","loadPage","routerParams","newsQuery","filter","getPageInfo","initPage","categories","newsResults","results","pagingState","totalPages","totalResultCount","count","currentpageItemsCount","items","length","currentPage","itemsPerPage","getState","pageSize","dispatchPagingInfo","refreshResults","noOfPages","updateUrlWithoutRefresh","News","view","toString","displayName","notify","reload","getView","unsubscribe","clearState","FieldsEnum","NewsAction","NewsCmsIds","NewsFacadeApiService","api","archiveResHelper","newsLatestResHelper","stateService","getCategories","req","fields","QueryId","DisplayName","ItemPath","ItemName","itemId","categoriesCmsId","forEach","cat","newCat","itemID","queryID","isDefault","push","defaultCategory","defaultCat","setDefaultSelectedCategory","initDefaultCat","find","c","selectedCat","toUpperCase","setInitialState","value","setSelectedView","selectedView","Latest","Archive","ToggleView","getLatestNews","getArchiveNews","isClosures","isNews","pagingSuffix","getArchiveNewsByCategoryId","parseResponse","numberOfPages","ItemID","Query","factory"],"sourceRoot":"webpack:///"}